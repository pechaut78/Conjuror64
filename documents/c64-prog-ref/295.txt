


  COLLISION DETECTION


    Two types of sprite collision (coincidence) are detected, sprite to sprite
  collision and sprite to display data collision:


    1) A collision between two sprites occurs when non-transparent output data
       of two sprites are coincident. Coincidence of sprite transparent areas
       will not generate a collision. When a collision occurs, the sprite bits
       (MnM) in the sprite-sprite COLLISION register 30 ($1E) will be set to "1"
       for both colliding spriteS. As a collision between two (or more) sprites
       occurs, the sprite-sprite collision bit for each collided sprite will be set.
       The collision bits remain set until a read of the collision
       register, when all bits are automatically cleared. sprites collisions
       are detected even if positioned off-screen.
    2) The second type of collision is a sprite-DATA collision between a sprite
       and foreground display data from the character or bit map modes. The
       sprite-DATA COLLISION register 31 ($1F) has a 'bit (MnD) for each sprite
       which is set to "1" when both the sprite and non-background display
       data are coincident. Again, the coincidence of only transparent data
       does not generate a collision. For special applications, the display
       data from the 0-1 multicolor bit pair also does not cause a
       collision. This feature permits their use as background display data
       without interfering with true sprite collisions. A sprite-DATA collision
       can occur off-screen in the horizontal direction if actual display
       data has been scrolled to an off-screen position (see scrolling).
       The sprite-DATA COLLISION register also automatically clears when read.
    The collision interrupt latches are set whenever the first bit of
   either register is set to "1". Once any collision bit within a register
   is set high, subsequent collisions will not set the interrupt latch
   until that collision register has been cleared to all "0s" by a read.