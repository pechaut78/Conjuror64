question,answer
"In the context of the C64, Can you send output to devices other than the screen?","Yes, it is often necessary to send output to devices other than the screen."
"In the context of the C64, What is the purpose of the OPEN statement in BASIC?",The OPEN statement creates a 'channel' to talk to one of the devices.
"In the context of the C64, What devices can you send output to using the OPEN statement?","You can send output to devices like a cassette deck, printer, disk drive, or modem."
"In the context of the C64, What happens once the channel is OPEN?",The PRINT# statement will send characters to that device.
"In the context of the C64, What is the purpose of the PRINT# statement?",The PRINT# statement sends characters to the device specified by the OPEN statement.
"In the context of the C64, What is an example of using the OPEN and PRINT# statements?",The example shows opening a channel to a printer and printing a message.
"In the context of the C64, What is the difference in the OPEN statement for each device?",The parameters in the OPEN statement are different for each device.
"In the context of the C64, What is the importance of the OPEN statement?",The OPEN statement is important because it allows you to send output to devices other than the screen.
"In the context of the C64, What is the purpose of the parameters in the OPEN statement?",The parameters in the OPEN statement specify the device and other settings.
"In the context of the C64, Can the output buffer hold more than 255 characters?","No, the output buffer can hold 255 characters before a full buffer hold-off occurs."
"In the context of the C64, What happens when the output buffer is full?",The system will wait in the CHROUT routine until transmission is allowed or the RUN/STOP and RESTORE keys are used to recover the system through a WARM START.
"In the context of the C64, What is the purpose of the CHROUT routine?",The CHROUT routine is used to send data to an RS-232 channel.
"In the context of the C64, What is the difference between the CHROUT and CHKOUT routines?","The CHROUT routine is used to send data to an RS-232 channel, while the CHKOUT routine is used to handle the x-line handshake."
"In the context of the C64, Is there a carriage-return delay built into the output channel?","No, there is no carriage-return delay built into the output channel."
"In the context of the C64, What is the purpose of the x-line handshake?",The x-line handshake is used to implement a handshake routine that uses multiple lines for receiving and transmitting data.
"In the context of the C64, What is the EIA standard for RS-232-C interfaces?",The EIA standard for RS-232-C interfaces is August 1979.
"In the context of the C64, What is the role of the RTS, CTS, and DCD lines in the x-line handshake?","The RTS, CTS, and DCD lines are implemented with the Commodore 64 defined as the Data Terminal Device."
"In the context of the C64, Can a normal RS-232 printer correctly print without hold-off or internal buffering?","No, a normal RS-232 printer cannot correctly print without hold-off or internal buffering."
"In the context of the C64, What is the purpose of the CHKOUT routine?","The CHKOUT routine is used to handle the x-line handshake, which follows the EIA standard for RS-232-C interfaces."
"In the context of the C64, What is the operation of the RTS instruction?",The RTS instruction returns from a subroutine.
"In the context of the C64, What is the opcode of the RTS instruction?",The opcode of the RTS instruction is 60.
"In the context of the C64, What is the number of bytes used by the RTS instruction?",The RTS instruction uses 1 byte.
"In the context of the C64, What is the number of cycles required to execute the RTS instruction?",The RTS instruction requires 6 cycles.
"In the context of the C64, What is the addressing mode of the RTS instruction?",The addressing mode of the RTS instruction is implied.
"In the context of the C64, What is the purpose of the RTS instruction?",The purpose of the RTS instruction is to return from a subroutine.
"In the context of the C64, What is the format of the RTS instruction?","The format of the RTS instruction is PC from S, PC + 1 -> PC."
"In the context of the C64, What is the cycle time of the RTS instruction?",The cycle time of the RTS instruction is not specified.
"In the context of the C64, JSR instruction is used for what purpose?",Jump to new location saving return address
"In the context of the C64, JSR instruction is also known as what?",Jump to new location
"In the context of the C64, JSR instruction is used in what type of operation?",PC + 2 to S
"In the context of the C64, JSR instruction is used to save what?",return address
"In the context of the C64, JSR instruction is used to jump to what?",new location
"In the context of the C64, JSR instruction is used to save the return address in what?",PC + 1
"In the context of the C64, JSR instruction is used to save the return address in what?",PCL
"In the context of the C64, JSR instruction is used to save the return address in what?",PCH
"In the context of the C64, JSR instruction is used to save the return address in what?",PC + 2
"In the context of the C64, JSR instruction is used to save the return address in what?",(PC + 1)
"In the context of the C64, Is the input/output port an 8-bit register?",Yes
"In the context of the C64, What is the purpose of the input/output port in the Commodore 64?",Memory management
"In the context of the C64, What is the range of RAM and ROM memory that the input/output port can control?",More than 64K
"In the context of the C64, What is the memory location of the DATA DIRECTION REGISTER?",0
"In the context of the C64, What is the memory location of the actual PORT?",1
"In the context of the C64, What type of port is the input/output port?",Input/output
"In the context of the C64, What is the size of the input/output port?",8-bit
"In the context of the C64, What is the purpose of the input/output port in the Commodore 64?",Memory management
"In the context of the C64, What is the range of memory that the input/output port can control?",More than 64K
"In the context of the C64, What is the purpose of the input/output port?",Input/output operation
"In the context of the C64, Can the harmonic content of a waveform be changed?","Yes, it can be changed by using a filter."
"In the context of the C64, What are the three types of filtering available in the SID chip?","High-pass, low-pass, and bandpass filters."
"In the context of the C64, What is the purpose of the cutoff frequency in a filter?",It is the reference point for the filter.
"In the context of the C64, What is the function of register 23 in the SID chip?",To turn ON the filter for voice 1.
"In the context of the C64, What is the purpose of the low-pass filter?",It passes frequencies below the cutoff and attenuates those above.
"In the context of the C64, What is the purpose of the bandpass filter?",It passes a narrow band of frequencies around the cutoff and attenuates all others.
"In the context of the C64, What is the purpose of the notch reject filter?",It passes frequencies away from the cutoff while attenuating at the cutoff frequency.
"In the context of the C64, How are the high- and low-pass filters combined to form a notch reject filter?",By passing frequencies away from the cutoff while attenuating at the cutoff frequency.
"In the context of the C64, What determines the type of filter used in the SID chip?",Register 24.
"In the context of the C64, What are the functions of the bits in register 24?","Bit 6 controls the high-pass filter, bit 5 is the bandpass filter, and bit 4 is the low-pass filter."
"In the context of the C64, How are the cutoff frequencies determined in the SID chip?",By registers 21 and 22.
"In the context of the C64, What determines the low 3 bits of the cutoff frequency?",Register 21.
"In the context of the C64, What determines the 8 bits of the high cutoff frequency?",Register 22.
"In the context of the C64, What is the range of values for the cutoff frequency?",0 through 255.
"In the context of the C64, What is the range of values for the low cutoff frequency?",0 through 7.
"In the context of the C64, What is the purpose of filtering in the SID chip?",To change the harmonic structure of a waveform.
"In the context of the C64, What effects can be produced by changing the filtering of a sound as it goes through the ADSR phases?",Interesting effects.
"In the context of the C64, What is the importance of careful use of filtering in the SID chip?",To get just the sound you want.
"In the context of the C64, What is the purpose of the ADSR phases in the SID chip?",To produce interesting effects.
"In the context of the C64, What is the purpose of the waveform in the SID chip?",To produce sound.
"In the context of the C64, What is the purpose of the SID chip?",To produce sound.
"In the context of the C64, What is the purpose of the RAMTAS routine?",Perform RAM test
"In the context of the C64, What is the call address of the RAMTAS routine?",$FF87 (hex) 65415 (decimal)
"In the context of the C64, What registers are used for communication in the RAMTAS routine?","A, X, Y"
"In the context of the C64, What is the stack requirement for the RAMTAS routine?",2
"In the context of the C64, What registers are affected by the RAMTAS routine?","A, X, Y"
"In the context of the C64, What is the description of the RAMTAS routine?","This routine is used to test RAM and set the top and bottom of memory pointers accordingly. It also clears locations $0000 to $0101 and $0200 to $03FF. It also allocates the cassette buffer, and sets the screen base to $0400."
"In the context of the C64, What is the typical use of the RAMTAS routine?","Normally, this routine is called as part of the initialization process of a Commodore 64 program cartridge."
"In the context of the C64, What is cleared by the RAMTAS routine?",locations $0000 to $0101 and $0200 to $03FF
"In the context of the C64, What is allocated by the RAMTAS routine?",the cassette buffer
"In the context of the C64, What is set by the RAMTAS routine?",the screen base to $0400
"In the context of the C64, What is the typical location of the RAMTAS routine?",part of the initialization process of a Commodore 64 program cartridge
"In the context of the C64, What happens to X positions beyond 255?","To put a sprite beyond X position 255 on the far right side of the screen, you must first POKE V+ 16 as shown, THEN POKE a new X valve from 0 to 63, which will place the sprite in one of the X positions at the right side of the screen."
"In the context of the C64, What is the range of X positions?",X positions run from 0 to 255... and then START OVER from 0 to 255.
"In the context of the C64, How do you get back to positions 0-255?","To get back to positions 0-255, POKE V+16,0 and POKE in an X value from 0 to 255."
"In the context of the C64, What is the range of Y positions?","Y positions run from 0 to 255, including 0 to 49 off the TOP of the viewing area, 50 to 229 IN the,viewing area, and 230 to 255 off the BOTTOM of the viewing area."
"In the context of the C64, What is the range of Y positions off the top of the viewing area?",Y positions run from 0 to 49 off the TOP of the viewing area...
"In the context of the C64, What is the range of Y positions in the viewing area?","Y positions run from 50 to 229 IN the,viewing area..."
"In the context of the C64, What is the range of Y positions off the bottom of the viewing area?",Y positions run from 230 to 255 off the BOTTOM of the viewing area...
"In the context of the C64, How do you POKE in an X position value?","To get back to positions 0-255, POKE V+16,0 and POKE in an X value from 0 to 255."
"In the context of the C64, What is the purpose of the CIOUT routine?",Transmit a byte over the serial bus
"In the context of the C64, What is the call address of the CIOUT routine?",$FFA8 (hex) 65448 (decimal)
"In the context of the C64, What communication registers are used by the CIOUT routine?",A
"In the context of the C64, What are the preparatory routines for the CIOUT routine?","LISTEN, [SECOND]"
"In the context of the C64, What are the error returns for the CIOUT routine?",See READST
"In the context of the C64, What is the stack requirement for the CIOUT routine?",5
"In the context of the C64, What registers are affected by the CIOUT routine?",
"In the context of the C64, What is the description of the CIOUT routine?",This routine is used to send information to devices on the serial bus.
"In the context of the C64, What is the purpose of the LISTEN KERNAL routine?",Command a device on the serial bus to get ready to receive data
"In the context of the C64, What is the purpose of the SECOND KERNAL routine?",Send a secondary address to a device on the serial bus
"In the context of the C64, What is the purpose of the KERNAL UNLSN routine?",End the data transmission
"In the context of the C64, Can the VIC-II chip access 16K of memory at a time?",Yes
"In the context of the C64, What is the total amount of memory in the Commodore 64?",64K
"In the context of the C64, What is the purpose of the BANK SELECT bits?",To access all sections of memory
"In the context of the C64, What chip contains the BANK SELECT bits?",The 6526 COMPLEX INTERFACE ADAPTER CHIP #2 (CIA #2)
"In the context of the C64, How are the BANK SELECT bits controlled?","Using POKE and PEEK BASIC statements, or using assmebly"
"In the context of the C64, What is the purpose of setting bits 0 and 1 of location 56578?",To make sure they are outputs
"In the context of the C64, What is the effect of setting bits 0 and 1 of location 56576?",To change banks
"In the context of the C64, What is the default bank setting when the Commodore 64 is powered on?",BANK 0 ($0000-$3FFF)
"In the context of the C64, What is the purpose of being aware of the current bank the VIC-II chip is pointing at?","To know where character data patterns come from, where the screen is, where sprites come from, etc."
"In the context of the C64, What is the purpose of the interrupt status register?",The interrupt status register shows the current status of any interrupt source.
"In the context of the C64, What happens when two sprites hit each other?",The current status of bit 2 of the interrupt register will be a 1 when two sprites hit each other.
"In the context of the C64, What is the purpose of bit 7 in the interrupt status register?","Bit 7 is also set with a 1, whenever an interrupt occurs."
"In the context of the C64, What is the location of the interrupt status register in memory?",The interrupt status register is located at 53273 ($D019)
"In the context of the C64, What happens when an interrupt bit is set?","Once an interrupt bit has been set, it's latched"" in and must be cleared by writing a 1 to that bit in the interrupt register when you're ready to handle it."""
"In the context of the C64, What is the purpose of the interrupt register in handling interrupts?","This allows selective interrupt handling, without having to store the other interrupt bits."
"In the context of the C64, What is the description of bit 0 in the interrupt status register?",IRST    0   Set when current raster count = stored raster count
"In the context of the C64, What is the description of bit 1 in the interrupt status register?","IMDC    1   Set by SPRITE-DATA collision (1st one only, until reset)"
"In the context of the C64, What is the description of bit 2 in the interrupt status register?","IMMC    2   Set by SPRITE-SPRITE collision (1st one only, until reset)"
"In the context of the C64, What is the description of bit 3 in the interrupt status register?",ILP    3   Set by negative transition of light pen (1 per frame)
"In the context of the C64, What is the description of bit 7 in the interrupt status register?",IRQ    7   Set by latch set and enabled
"In the context of the C64, Once you've made a sprite, you want to be able to move it around the screen.","To do this, your Commodore 64 uses three positioning registers: SPRITE X POSITION REGISTER, SPRITE Y POSITION REGISTER, and MOST SIGNIFICANT BIT X POSITION REGISTER."
"In the context of the C64, Can you move a sprite around the screen?","Yes, you can, by using the SPRITE X POSITION REGISTER, SPRITE Y POSITION REGISTER, and MOST SIGNIFICANT BIT X POSITION REGISTER."
"In the context of the C64, What are the three positioning registers used to move a sprite?","The three positioning registers are SPRITE X POSITION REGISTER, SPRITE Y POSITION REGISTER, and MOST SIGNIFICANT BIT X POSITION REGISTER."
"In the context of the C64, How many possible X positions can you place a sprite?",You can place your sprite in 512 possible X positions.
"In the context of the C64, What is the purpose of the X and Y position registers?","The X and Y position registers work together, in pairs, as a team, to position your sprites very accurately."
"In the context of the C64, What is the memory map layout of the X and Y registers?","The locations of the X and Y registers appear in the memory map as follows: First is the X register for sprite 0, then the Y register for sprite 0. Next comes the X register for sprite 1, the Y register for sprite 1, and so on. After all 16 X and Y registers comes the most significant bit in the X position (X MSB) located in its own register."
"In the context of the C64, Can you position a sprite in 256 possible Y positions?","Yes, you can, because each sprite has a Y position register."
"In the context of the C64, How many possible Y positions can you place a sprite?",You can place your sprite in 256 possible Y positions.
"In the context of the C64, What is the purpose of the most significant bit in the X position register?",This bit lets you position your sprites very accurately.
"In the context of the C64, Can you position a sprite in 512 possible X positions?","Yes, you can, because each sprite has an X position register."
"In the context of the C64, Can the location of screen memory be changed easily?","Yes, by a POKE to control register 53272 ($D018 HEX)."
"In the context of the C64, What is the purpose of the control register 53272 ($D018 HEX)?","It is used to control which character set is used, so be careful to avoid disturbing that part of the control register."
"In the context of the C64, What is the UPPER 4 bits used for in the control register?",They control the location of screen memory.
"In the context of the C64, What is the statement used to move the screen?","POKE 53272,(PEEK(53272)AND15)OR A"
"In the context of the C64, What are the possible values of A in the statement?","A has one of the following values: 0, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224, 240"
"In the context of the C64, What is the default location of screen memory?",$0400 (1024)
"In the context of the C64, What is the formula to calculate the page number?","POKE 648, page (where page = address/256, e.g., 1024/256= 4)"
"In the context of the C64, What is the purpose of the KERNAL'S screen editor?",It must be told where the screen is.
"In the context of the C64, What is the BANK ADDRESS of the VIC-II chip?",It must be added in.
"In the context of the C64, What is the range of possible values for A?",0 to 240
"In the context of the C64, What is the purpose of the control register?",It is used to control which character set is used and the location of screen memory
"In the context of the C64, What is the purpose of the screen memory?",It is used to display the screen
"In the context of the C64, What is the purpose of the screen editor?",It is used to edit the screen
"In the context of the C64, What is the purpose of the KERNAL?",It is used to manage the computer's memory and I/O operations
"In the context of the C64, What is the purpose of the VIC-II chip?",It is used to control the computer's video output
"In the context of the C64, What is the purpose of the screen?",It is used to display information to the user
"In the context of the C64, What is the purpose of the screen editor?",It is used to edit the screen
"In the context of the C64, What is the purpose of the KERNAL'S screen editor?",It is used to manage the screen
"In the context of the C64, What is the location of the Interrupt Enable Register?",The Interrupt Enable Register is located at 53274 ($D01A).
"In the context of the C64, What is the purpose of the Interrupt Enable Register?","Unless the corresponding bit in the interrupt enable register is set to a 1, no interrupt from that source will take place."
"In the context of the C64, What happens if the Interrupt Enable Register is not set to a 1?",No interrupt will take place.
"In the context of the C64, What is the requirement to enable an interrupt request?",The corresponding interrupt enable bit must be set to a 1.
"In the context of the C64, What is the benefit of using interrupts properly?",It lets you use split screen modes.
"In the context of the C64, What is an example of using interrupts properly?","For instance, you can have half of the screen bit mapped, half text."
"In the context of the C64, What is the purpose of the raster compare register?",To set the interrupt to occur at a specific point on the screen.
"In the context of the C64, What is the limitation of using BASIC for display interrupts?",BASIC isn't fast enough to do this very well.
"In the context of the C64, What is the recommended approach for using display interrupts?",You should work in machine language.
"In the context of the C64, What is the advantage of using display interrupts?",You can display more than 8 sprites at a time.
"In the context of the C64, Initialize the Commodore 64 screen editor",This routine sets up the KERNAL screen editor.
"In the context of the C64, What is the purpose of the CINT function?",Initialize screen editor & 6567 video chip
"In the context of the C64, What is the call address of the CINT function?",$FF81 (hex) 65409 (decimal)
"In the context of the C64, What registers are affected by the CINT function?","A, X, Y"
"In the context of the C64, What is the stack requirement for the CINT function?",4
"In the context of the C64, What is the description of the CINT function?",This routine sets up the 6567 video controller chip in the Commodore 64 for normal operation.
"In the context of the C64, Read system clock routine",Read system clock
"In the context of the C64, RDTIM function name",RDTIM
"In the context of the C64, Call address of RDTIM",65502
"In the context of the C64, Registers affected by RDTIM","A, X, Y"
"In the context of the C64, Description of RDTIM",This routine is used to read the system clock
"In the context of the C64, Resolution of system clock",a 60th of a second
"In the context of the C64, Bytes returned by RDTIM",Three
"In the context of the C64, Registers containing clock bytes","Accumulator, X index register, Y index register"
"In the context of the C64, Example usage of RDTIM","JSR RDTIM, STY TIME, STX TIME+1, STA TIME+2"
"In the context of the C64, Stack requirements of RDTIM",2
"In the context of the C64, What is the code for BLACK color?",0
"In the context of the C64, What is the code for PURPLE color?",4
"In the context of the C64, What is the code for ORANGE color?",8
"In the context of the C64, What is the code for MED. GREY color?",12
"In the context of the C64, What is the code for WHITE color?",1
"In the context of the C64, What is the code for RED color?",2
"In the context of the C64, What is the code for BLUE color?",6
"In the context of the C64, What is the code for YELLOW color?",7
"In the context of the C64, What does TYA do?",TYA Transfer index Y to accumulator
"In the context of the C64, What is the number of bytes of TYA?",1
"In the context of the C64, What is the number of cycles of TYA?",2
"In the context of the C64, The stack pointer contains the location of the first empty place on the stack.",This register contains the location of the first empty place on the stack.
"In the context of the C64, What is the purpose of the stack pointer?","The stack is used for temporary storage by machine language programs, and by the computer."
"In the context of the C64, What is stored in the stack pointer?",The location of the first empty place on the stack.
"In the context of the C64, What is the stack used for?","The stack is used for temporary storage by machine language programs, and by the computer."
"In the context of the C64, What is the stack pointer used for?","The stack is used for temporary storage by machine language programs, and by the computer."
"In the context of the C64, What is the purpose of the stack?","The stack is used for temporary storage by machine language programs, and by the computer."
"In the context of the C64, What is stored in the stack?",The location of the first empty place on the stack.
"In the context of the C64, What is the stack pointer?",This register contains the location of the first empty place on the stack.
"In the context of the C64, What is the stack used for temporary storage?","The stack is used for temporary storage by machine language programs, and by the computer."
"In the context of the C64, JMP operation explained",The JMP operation is used to jump to a new location in the program.
"In the context of the C64, JMP operation syntax",The syntax for the JMP operation is (PC + 1) -> PCL.
"In the context of the C64, JMP operation modes",The JMP operation has two modes: Absolute and Indirect.
"In the context of the C64, Absolute JMP mode","In Absolute mode, the JMP operation uses the OP CODE 4C and requires 3 bytes and 3 cycles."
"In the context of the C64, Indirect JMP mode","In Indirect mode, the JMP operation uses the OP CODE 6C and requires 3 bytes and 5 cycles."
"In the context of the C64, JMP operation purpose",The purpose of the JMP operation is to jump to a new location in the program.
"In the context of the C64, JMP operation examples",Examples of the JMP operation include JMP Oper and JMP (Oper).
"In the context of the C64, JMP operation usage",The JMP operation is used to transfer control to a new location in the program.
"In the context of the C64, JMP operation limitations","The JMP operation has limitations, such as requiring a specific OP CODE and number of bytes and cycles."
"In the context of the C64, JMP operation importance",The JMP operation is important in programming as it allows for control flow and program branching.
"In the context of the C64, RTI is used for what purpose?",Return from interrupt
"In the context of the C64, RTI is an abbreviation for what?",Return from interrupt
"In the context of the C64, What is the operation of RTI?",From Stack
"In the context of the C64, What is the assembly language form of RTI?",RTI
"In the context of the C64, What is the OP CODE of RTI?",4D
"In the context of the C64, How many bytes does the RTI instruction occupy?",1
"In the context of the C64, How many cycles does the RTI instruction take?",6
"In the context of the C64, What is the addressing mode of RTI?",Implied
"In the context of the C64, What is the operation of RTI in terms of addressing mode?",From Stack
"In the context of the C64, What is the purpose of RTI in terms of interrupt handling?",Return from interrupt
"In the context of the C64, RS232: what is the maximum number of characters that the Commodore 64 receiver buffer can hold?",The Commodore 64 receiver buffer will hold up to 255 characters before the buffer overflows.
"In the context of the C64, RS232: what happens if the buffer overflows?","If an overflow occurs, then all characters received during a full buffer condition, from that point on, are lost."
"In the context of the C64, RS232: what is the recommended way to receive RS-232 data at high speeds?",You will have to use machine language routines to handle this type of data burst.
"In the context of the C64, RS232: what is the difference between GET# and INPUT#?","GET# is recommended, while INPUT# is not recommended because it can cause the system to hang in a waiting condition."
"In the context of the C64, RS232: what happens if a GET# does not find any data in the buffer?","The character "" (a null) is returned."
"In the context of the C64, RS232: what is the purpose of the routine CHKIN?",The routine CHKIN handles the x-line handshake which follows the EIA standard for RS-232-C interfaces.
"In the context of the C64, RS232: what is the standard for RS-232-C interfaces?",The standard is defined as the Data Terminal device.
"In the context of the C64, RS232: what happens if the Clear To Send (CTS) or Data Set Ready (DSR) line(s) disappear during character INPUT#?",The system will hang in a RESTORE-only state.
"In the context of the C64, RS232: what is the recommended way to handle data bursts?",You will have to use machine language routines to handle this type of data burst.
"In the context of the C64, RS232: what is the maximum word length for RS-232-C interfaces?",The maximum word length is 8 bits.
"In the context of the C64, RS232: what happens if the word length is less than 8 bits?",All unused bit(s) will be assigned a value of zero.
"In the context of the C64, RS232: what is the purpose of the routine GETIN?",The routine GETIN is used to receive data from an RS-232 channel.
"In the context of the C64, RS232: what is the purpose of the routine CHRIN?",The routine CHRIN is used to receive data from an RS-232 channel.
"In the context of the C64, RS232: what is the recommended way to receive data from an RS-232 channel?",You should use the GET# routine.
"In the context of the C64, RS232: what happens if the buffer is not kept clear?","The buffer will overflow and all characters received during a full buffer condition, from that point on, are lost."
"In the context of the C64, Is the simplest form of output in BASIC the PRINT statement?",Yes
"In the context of the C64, What is the main objective when printing on the screen?",To format the information so it's easy to read
"In the context of the C64, What is the purpose of the cursor in the PRINT statement?",To change position
"In the context of the C64, What is the character code number of the RETURN key?",13
"In the context of the C64, What are the two functions in the BASIC language that work with the PRINT statement?",TAB and SPC
"In the context of the C64, What does the semicolon (;) do in the PRINT statement?",Separates 2 items without any spaces in between
"In the context of the C64, What does the comma (,) do in the PRINT statement?",Separates items into columns
"In the context of the C64, What are the quote marks ("") used for in the PRINT statement?",To separate literal text from variables
"In the context of the C64, What is the purpose of the RETURN code (CHR$ code of 13) in the PRINT statement?",Makes the cursor go to the next logical line on the screen
"In the context of the C64, What determines where the <RETURN> key sends the cursor?",The logical line the cursor is on
"In the context of the C64, What is the maximum length of a logical line?",2 screen lines long
"In the context of the C64, What are some other ways to use the TV as an output device?","Graphics, VIC chip, and sound"
"In the context of the C64, What is the purpose of the PRINT statement?",To format the information on the screen
"In the context of the C64, What is the purpose of the cursor in the PRINT statement?",To change position
"In the context of the C64, What is the purpose of the RETURN key?",To make the cursor go to the next logical line on the screen
"In the context of the C64, What is the purpose of the semicolon (;) in the PRINT statement?",To separate 2 items without any spaces in between
"In the context of the C64, What is the purpose of the comma (,) in the PRINT statement?",To separate items into columns
"In the context of the C64, What is the purpose of the quote marks ("") in the PRINT statement?",To separate literal text from variables
"In the context of the C64, What is the purpose of the RETURN code (CHR$ code of 13) in the PRINT statement?",To make the cursor go to the next logical line on the screen
"In the context of the C64, What is the purpose of the PRINT statement?",To format the information on the screen
"In the context of the C64, What is the purpose of the cursor in the PRINT statement?",To change position
"In the context of the C64, What is the purpose of the RETURN key?",To make the cursor go to the next logical line on the screen
"In the context of the C64, What is the purpose of the semicolon (;) in the PRINT statement?",To separate 2 items without any spaces in between
"In the context of the C64, What is the purpose of the comma (,) in the PRINT statement?",To separate items into columns
"In the context of the C64, What is the purpose of the quote marks ("") in the PRINT statement?",To separate literal text from variables
"In the context of the C64, Does the Commodore 64 have a built-in RS-232 interface?","The Commodore 64 has a built-in RS-232 interface for connection to any RS-232 modem, printer, or other device."
"In the context of the C64, What is required to connect a device to the Commodore 64?",All you need is a cable and a little bit of programming to connect a device to the Commodore 64.
"In the context of the C64, What is the voltage range of the Commodore 64's RS-232 interface?","The Commodore 64's RS-232 interface is set-up in the standard RS-232 format, but the voltages are TTL levels (0 to 5V) rather than the normal RS-232 -12 to 12 volt range."
"In the context of the C64, What is the purpose of the RS-232 interface software?",The RS-232 interface software can be accessed from BASIC or from the KERNAL for machine language programming.
"In the context of the C64, What are the BASIC commands used for RS-232 communication?","RS-232 on the BASIC level uses the normal BASIC commands: OPEN, CLOSE, CMD, INPUT#, GET#, PRINT#, and the reserved variable ST."
"In the context of the C64, What is the role of the 6526 CIA #2 device in the RS-232 interface?","The 6526 chip generates NMI (Non-Maskable Interrupt) requests for RS-232 processing, allowing background RS-232 processing to take place during BASIC and machine language programs."
"In the context of the C64, What are the built-in hold-offs in the KERNAL, cassette, and serial bus routines?","There are built-in hold-offs in the KERNAL, cassette, and serial bus routines to prevent the disruption of data storage or transmission by the NMIs that are generated by the RS-232 routines."
"In the context of the C64, Why can't data be received from RS-232 devices during cassette or serial bus activities?",Because these hold-offs are only local (assuming you're careful about your programming) no interference should result.
"In the context of the C64, What are the two buffers in the Commodore 64 RS-232 interface?","The Commodore 64 RS-232 KERNAL buffers consist of two first-in/first-out (FIFO) buffers, each 256 bytes long, at the top of memory."
"In the context of the C64, What happens when an RS-232 channel is opened?",The OPENing of an RS-232 channel automatically allocates 512 bytes of memory for the buffers.
"In the context of the C64, What happens if there is not enough free space beyond the end of your BASIC program?","If there is not enough free space beyond the end of your BASIC program no error message will be printed, and the end of your program will be destroyed."
"In the context of the C64, What happens when an RS-232 channel is closed?",These buffers are automatically removed by using the CLOSE command.
"In the context of the C64, What is the importance of being careful when programming RS-232 routines?",SO BE CAREFUL!
"In the context of the C64, Is the RS-232 interface software accessible from BASIC?","Yes, the RS-232 interface software can be accessed from BASIC."
"In the context of the C64, Can the RS-232 interface software be accessed from the KERNAL?","Yes, the RS-232 interface software can be accessed from the KERNAL."
"In the context of the C64, What is the purpose of the RS-232 interface cartridge?",The RS-232 interface cartridge handles the necessary voltage conversions.
"In the context of the C64, What is the role of the KERNAL in the RS-232 interface?",The KERNAL byte and bit level handlers run under the control of the 6526 CIA #2 device timers and interrupts.
"In the context of the C64, What is the purpose of the RS-232 interface software in machine language programming?",The RS-232 interface software can be accessed from the KERNAL for machine language programming.
"In the context of the C64, What are the commands used for RS-232 communication in machine language programming?",The commands used for RS-232 communication in machine language programming are the same as those used in BASIC.
"In the context of the C64, What is the purpose of the RS-232 interface in the Commodore 64?","The RS-232 interface allows the Commodore 64 to connect to any RS-232 modem, printer, or other device."
"In the context of the C64, What is the role of the 6526 CIA #2 device in the RS-232 interface?",The 6526 chip generates NMI (Non-Maskable Interrupt) requests for RS-232 processing.
"In the context of the C64, What are the built-in hold-offs in the KERNAL, cassette, and serial bus routines?","There are built-in hold-offs in the KERNAL, cassette, and serial bus routines to prevent the disruption of data storage or transmission by the NMIs that are generated by the RS-232 routines."
"In the context of the C64, What happens when an RS-232 channel is opened?",The OPENing of an RS-232 channel automatically allocates 512 bytes of memory for the buffers.
"In the context of the C64, What happens if there is not enough free space beyond the end of your BASIC program?","If there is not enough free space beyond the end of your BASIC program no error message will be printed, and the end of your program will be destroyed."
"In the context of the C64, What happens when an RS-232 channel is closed?",These buffers are automatically removed by using the CLOSE command.
"In the context of the C64, Can you enter a program in HEX or SYMBOLIC codes with 64MON?",You can enter a program in either HEX or SYMBOLIC codes with 64MON.
"In the context of the C64, What is the advantage of using 64MON?","The advantages of this method include easier entry of the machine language routines, debugging aids, and a much faster means of saving and loading."
"In the context of the C64, What is the drawback of using 64MON?",The drawback to this method is that it generally requires the BASIC program to load the machine language routine from tape or disk when it is started.
"In the context of the C64, Can you save the portion of memory the program is in with 64MON?","Yes, you can save the portion of memory the program is in with 64MON."
"In the context of the C64, What is the purpose of 64MON?","This program allows you to enter a program in either HEX or SYMBOLIC codes, and save the portion of memory the program is in."
"In the context of the C64, Can you load a machine language routine from tape with 64MON?","Yes, you can load a machine language routine from tape with 64MON."
"In the context of the C64, What is the benefit of using 64MON for debugging?",The debugging aids are an advantage of using 64MON.
"In the context of the C64, Can you prepare a machine language routine with 64MON?","Yes, you can prepare a machine language routine with 64MON."
"In the context of the C64, Is 64MON a machine language section?","No, 64MON is not a machine language section, but it has a machine language section."
"In the context of the C64, Can you save and load with 64MON?","Yes, you can save and load with 64MON."
"In the context of the C64, Does the SETTMO routine set the timeout flag for the IEEE bus?",Yes
"In the context of the C64, What is the purpose of the SETTMO routine?",Set IEEE bus card timeout flag
"In the context of the C64, What is the call address of the SETTMO routine?",$FFA2 (hex) 65442 (decimal)
"In the context of the C64, What communication registers are affected by the SETTMO routine?",A
"In the context of the C64, What is the stack requirement for the SETTMO routine?",2
"In the context of the C64, Can the SETTMO routine be used with an IEEE add-on card only?",Yes
"In the context of the C64, What happens if the device on the IEEE port does not respond to the DAV signal within 64 milliseconds?",The Commodore 64 will recognize an error condition and leave the handshake sequence
"In the context of the C64, What is the effect of setting bit 7 of the accumulator to 0 when calling the SETTMO routine?",Timeouts are enabled
"In the context of the C64, What is the effect of setting bit 7 of the accumulator to 1 when calling the SETTMO routine?",Timeouts are disabled
"In the context of the C64, What is the purpose of the timeout feature in the Commodore 64?",To communicate that a disk file is not found on an attempt to OPEN a file only with an IEEE card
"In the context of the C64, Operation of LDA instruction",The LDA instruction is used to load the accumulator with a value from memory.
"In the context of the C64, LDA instruction format","The LDA instruction has several formats, including immediate, zero page, zero page X, absolute, absolute X, absolute Y, indirect X, and indirect Y."
"In the context of the C64, LDA instruction opcode","The opcode for the LDA instruction is A9, A5, B5, AD, BD, B9, A1, and B1."
"In the context of the C64, LDA instruction cycles","The number of cycles required to execute the LDA instruction varies depending on the addressing mode, ranging from 2 to 6 cycles."
"In the context of the C64, LDA instruction bytes","The number of bytes required to execute the LDA instruction varies depending on the addressing mode, ranging from 2 to 3 bytes."
"In the context of the C64, LDA instruction addressing modes","The LDA instruction has several addressing modes, including immediate, zero page, zero page X, absolute, absolute X, absolute Y, indirect X, and indirect Y."
"In the context of the C64, LDA instruction indirect addressing","The LDA instruction can use indirect addressing modes, including (indirect,X) and (indirect),Y."
"In the context of the C64, LDA instruction page boundary crossing","The LDA instruction can cross page boundaries, resulting in an additional cycle being added to the instruction's execution time."
"In the context of the C64, LDA instruction zero page addressing","The LDA instruction can use zero page addressing, which allows for faster access to memory locations."
"In the context of the C64, LDA instruction absolute addressing","The LDA instruction can use absolute addressing, which allows for direct access to memory locations."
"In the context of the C64, SBC stands for?",Subtract memory from accumulator with borrow
"In the context of the C64, Subtract memory from accumulator with borrow?",SBC
"In the context of the C64, What is the operation of SBC instruction?",A - M - C -> A
"In the context of the C64, What is the note about C in SBC instruction?",C = Borrow
"In the context of the C64, What is the purpose of SBC instruction?",Subtract memory from accumulator with borrow
"In the context of the C64, What is the number of bytes for SBC #Oper in Immediate mode?",2
"In the context of the C64, What is the number of cycles for SBC Oper in Zero Page mode?",3
"In the context of the C64, What is the number of bytes for SBC Oper,X in Zero Page,X mode?",2
"In the context of the C64, What is the number of cycles for SBC Oper,X in Zero Page,X mode?",4
"In the context of the C64, What is the number of bytes for SBC Oper in Absolute mode?",3
"In the context of the C64, What is the number of cycles for SBC Oper in Absolute mode?",4
"In the context of the C64, What is the fundamental frequency of a note?",The fundamental frequency defines the overall pitch of the note.
"In the context of the C64, What are harmonics in the context of sound waves?",Harmonics are sine waves having frequencies which are integer multiples of the fundamental frequency.
"In the context of the C64, What is the relationship between the fundamental frequency and the harmonics?",The harmonics are integer multiples of the fundamental frequency.
"In the context of the C64, What is the timbre of a note determined by?",The amounts of each harmonic present in a note give it its timbre.
"In the context of the C64, What is the harmonic structure of an acoustic instrument like a guitar or violin?",An acoustic instrument has a very complicated harmonic structure.
"In the context of the C64, What is the difference between a triangular wave and a sine wave?","A triangular wave contains only odd harmonics, while a sine wave oscillates at the fundamental frequency."
"In the context of the C64, What is the relationship between the harmonic number and the amplitude of a harmonic in a triangular wave?",The amount of each harmonic present is proportional to the reciprocal of the square of the harmonic number.
"In the context of the C64, What is the difference between a sawtooth wave and a triangular wave?","A sawtooth wave contains all the harmonics, while a triangular wave contains only odd harmonics."
"In the context of the C64, What is the relationship between the harmonic number and the amplitude of a harmonic in a sawtooth wave?",The amount of each harmonic present is proportional to the reciprocal of the harmonic number.
"In the context of the C64, What is the difference between a square wave and a rectangular wave?","A square wave contains odd harmonics, while a rectangular wave has varying harmonic content."
"In the context of the C64, What is the effect of changing the pulse width on a rectangular wave?",The timbre of the sound of a rectangular wave can be varied tremendously by changing the pulse width.
"In the context of the C64, What is the purpose of filtering in sound quality?",Filtering can be used to refine the sound and achieve the desired sound quality.
"In the context of the C64, What is the relationship between the waveform and the sound quality?",The waveform used can affect the sound quality and timbre of the sound.
"In the context of the C64, What is the role of harmonics in sound waves?",Harmonics are sine waves having frequencies which are integer multiples of the fundamental frequency.
"In the context of the C64, What is the difference between a fundamental frequency and a harmonic frequency?","The fundamental frequency defines the overall pitch of the note, while harmonic frequencies are integer multiples of the fundamental frequency."
"In the context of the C64, What is the relationship between the harmonic structure and the timbre of a note?",The harmonic structure gives a note its timbre.
"In the context of the C64, What is the purpose of choosing the right waveform?",Choosing the right waveform can help achieve the desired sound quality.
"In the context of the C64, What is the effect of filtering on the sound quality?",Filtering can refine the sound and achieve the desired sound quality.
"In the context of the C64, What is the role of the fundamental frequency in sound waves?",The fundamental frequency defines the overall pitch of the note.
"In the context of the C64, What is the relationship between the harmonic structure and the sound quality?",The harmonic structure affects the sound quality and timbre of a note.
"In the context of the C64, What is the difference between a sine wave and a triangular wave?","A sine wave oscillates at the fundamental frequency, while a triangular wave contains only odd harmonics."
"In the context of the C64, What is the purpose of adding filtering to a sound?",Filtering can refine the sound and achieve the desired sound quality.
"In the context of the C64, What is the relationship between the waveform and the sound quality?",The waveform used can affect the sound quality and timbre of the sound.
"In the context of the C64, What is the role of harmonics in the sound quality?",Harmonics are sine waves having frequencies which are integer multiples of the fundamental frequency.
"In the context of the C64, What is the difference between a sawtooth wave and a square wave?","A sawtooth wave contains all the harmonics, while a square wave contains odd harmonics."
"In the context of the C64, What is the purpose of choosing the right waveform?",Choosing the right waveform can help achieve the desired sound quality.
"In the context of the C64, What is the effect of changing the pulse width on a rectangular wave?",The timbre of the sound of a rectangular wave can be varied tremendously by changing the pulse width.
"In the context of the C64, What is the role of filtering in sound quality?",Filtering can refine the sound and achieve the desired sound quality.
"In the context of the C64, What is the relationship between the harmonic structure and the timbre of a note?",The harmonic structure gives a note its timbre.
"In the context of the C64, What is the purpose of adding filtering to a sound?",Filtering can refine the sound and achieve the desired sound quality.
"In the context of the C64, What is the relationship between the waveform and the sound quality?",The waveform used can affect the sound quality and timbre of the sound.
"In the context of the C64, What is the role of harmonics in the sound quality?",Harmonics are sine waves having frequencies which are integer multiples of the fundamental frequency.
"In the context of the C64, Is the status register a collection of flags?","Yes, it is a collection of eight flags."
"In the context of the C64, What does each flag indicate?",Each flag indicates whether something has or has not occurred.
"In the context of the C64, What is the purpose of the flags?",The purpose of the flags is to indicate whether something has or has not occurred.
"In the context of the C64, What is the total number of flags in the status register?",There are eight flags in the status register.
"In the context of the C64, What is the term for something that indicates whether something has or has not occurred?",The term is 'flag'.
"In the context of the C64, What is the status register used for?",The status register is used to indicate whether something has or has not occurred.
"In the context of the C64, What is the function of each flag in the status register?",The function of each flag is to indicate whether something has or has not occurred.
"In the context of the C64, What is the total number of flags in the status register?",There are eight flags in the status register.
"In the context of the C64, What is the purpose of the status register?",The purpose of the status register is to indicate whether something has or has not occurred.
"In the context of the C64, What does the status register consist of?",The status register consists of eight flags.
"In the context of the C64, Output a character to an already opened channel.",This routine outputs a character to an already opened channel.
"In the context of the C64, What is the purpose of the CHROUT routine?",Output a character
"In the context of the C64, What is the call address of the CHROUT routine?",$FFD2 (hex) 65490 (decimal)
"In the context of the C64, What registers are affected by the CHROUT routine?",Registers affected: A
"In the context of the C64, What is the minimum stack requirement for the CHROUT routine?",8+
"In the context of the C64, What is the default output device if the call is omitted?",the screen
"In the context of the C64, What is the data byte to be output loaded into?",the accumulator
"In the context of the C64, What is the routine that must be used to set up the output channel?",KERNAL OPEN and CHKOUT
"In the context of the C64, What is the routine that must be used to close all open output channels?",KERNAL CLRCHN
"In the context of the C64, What is the potential issue when using the CHROUT routine to send data to a specific serial device?",data will be sent to all open output channels on the bus
"In the context of the C64, What are the steps to use the CHROUT routine?","0) Use the CHKOUT KERNAL routine if needed, 1) Load the data to be output into the accumulator, 2) Call this routine"
"In the context of the C64, Purpose of PLOT function",Set cursor location
"In the context of the C64, Call address of PLOT function",$FFF0 (hex) 65520 (decimal)
"In the context of the C64, Registers affected by PLOT function","A, X, Y"
"In the context of the C64, Preparatory routines for PLOT function",
"In the context of the C64, Error returns for PLOT function",
"In the context of the C64, Stack requirements for PLOT function",2
"In the context of the C64, Description of PLOT function","A call to this routine with the accumulator carry flag set loads the current position of the cursor on the screen (in X,Y coordinates) into the Y and X registers."
"In the context of the C64, How to read cursor location using PLOT function","1) Set the carry flag. 2) Call this routine. 3) Get the X and Y position from the Y and X registers, respectively."
"In the context of the C64, How to set cursor location using PLOT function",1) Clear carry flag. 2) Set the Y and X registers to the desired cursor location. 3) Call this routine.
"In the context of the C64, Example of using PLOT function to move cursor",";MOVE THE CURSOR TO ROW 10, COLUMN 5 (5,10) LDX #10 LDY #5 CLC JSR PLOT"
"In the context of the C64, How many different dot positions can be individually programmed onto a TV screen in the Y direction?",200
"In the context of the C64, What is the maximum number that the sprite Y position registers can handle?",255
"In the context of the C64, Can the sprite Y position registers handle moving a sprite up and down?",yes
"In the context of the C64, How many values are needed to smoothly move a sprite on and off the screen?",more than 200
"In the context of the C64, What is the first on-screen value from the top of the screen in the Y direction for an unexpanded sprite?",30
"In the context of the C64, What is the first Y value in which a sprite is fully on the screen?",50
"In the context of the C64, What is the last Y value in which an unexpanded sprite is fully on the screen?",229
"In the context of the C64, What is the last Y value in which an expanded sprite is fully on the screen?",208
"In the context of the C64, What is the first Y value in which a sprite is fully off the screen?",250
"In the context of the C64, Is the initial position of a sprite calculated from the top left corner?",yes
"In the context of the C64, How many possible locations are on the Commodore 64 screen?",There are 1000 possible locations on the Commodore 64 screen.
"In the context of the C64, What is the starting location of the screen memory?",The screen starts at location 1024 ($0400 in HEXadecimal notation) but note that it can be changed programmatically.
"In the context of the C64, What is the width of each location in screen memory?",Each of these locations is 8 bits wide.
"In the context of the C64, How many colors can the Commodore 64 use?",There are 16 possible colors that the Commodore 64 can use.
"In the context of the C64, What determines which character to display at each screen location?",Each of the 1000 locations in screen memory contains a code number which tells the VIC-II chip which character to display at that screen location.
"In the context of the C64, What controls the various graphics modes?",The 47 CONTROL registers in the VIC-II chip select the various graphics modes.
"In the context of the C64, Where is the VIC-II chip located?",The VIC-II chip is located starting at 53248 ($D000 in HEX) through 53294 ($D02E in HEX).
"In the context of the C64, Color TV sets are limited in their ability to place certain colors next to each other on the same line.",This limitation is due to the technical capabilities of the TV set.
"In the context of the C64, Which color combinations produce blurred images?",Certain combinations of screen and character colors produce blurred images.
"In the context of the C64, What is the main limitation of color TV sets?",Color TV sets are limited in their ability to place certain colors next to each other on the same line.
"In the context of the C64, What are the graphics abilities of the Commodore 64 based on?",The 6567 Video Interface Chip (VIC-II chip)
"In the context of the C64, What are the different graphics modes provided by the VIC-II chip?","40 column by 25 line text display, 320 by 200 dot high resolution display, and SPRITES"
"In the context of the C64, Can multiple graphics modes be mixed on the same screen?","Yes, it can be done using some tricks"
"In the context of the C64, What are the three categories of graphics display modes in the VIC-II chip?","A) CHARACTER DISPLAY MODES, B) BIT MAP MODES, C) SPRITES"
"In the context of the C64, What are the two types of character display modes?",Standard Character Mode and Multi-Color Character Mode
"In the context of the C64, What are the two types of bit map modes?",Standard Bit Map Mode and Multi-Color Bit Map Mode
"In the context of the C64, What are the two types of sprites?",Standard Sprites and Multi-Color Sprites
"In the context of the C64, Position of a sprite is calculated from what corner of the 24 dot by 21 dot area?",The TOP LEFT corner
"In the context of the C64, What is the minimum number of dots required to make up a sprite?",One
"In the context of the C64, Is the position of a sprite dependent on the number of dots used?",No
"In the context of the C64, Can a sprite be designed in the middle of the screen with only one dot?",Yes
"In the context of the C64, What is the starting point for calculating the exact positioning of a sprite?",The top left corner location
"In the context of the C64, Is the positioning of a sprite affected by the number of dots used?",No
"In the context of the C64, Can a sprite be designed in the 24 dot by 21 dot area?",Yes
"In the context of the C64, Is the positioning of a sprite dependent on the screen size?",No
"In the context of the C64, Can a sprite be designed in the middle of the screen?",Yes
"In the context of the C64, What is the exact positioning of a sprite calculated from?",The top left corner location
"In the context of the C64, What is the purpose of the OPEN function?",To open a logical file
"In the context of the C64, What is the call address of the OPEN function?",$FFC0 (hex) 65472 (decimal)
"In the context of the C64, What communication registers are used by the OPEN function?",
"In the context of the C64, What preparatory routines are required before using the OPEN function?","SETLFS, SETNAM"
"In the context of the C64, What error returns can occur when using the OPEN function?","1,2,4,5,6,240, READST"
"In the context of the C64, What registers are affected by the OPEN function?","A, X, Y"
"In the context of the C64, What is the description of the OPEN function?","This routine is used to OPEN a logical file. Once the logical file is set up, it can be used for input/output operations."
"In the context of the C64, How many steps are required to use the OPEN function?",3
"In the context of the C64, What are the steps to use the OPEN function?","Use the SETLFS routine, Use the SETNAM routine, Call this routine"
"In the context of the C64, Get a character from the input channel",This routine gets a byte of data from a channel already set up as the input channel by the KERNAL routine CHKIN.
"In the context of the C64, What is the purpose of the CHRIN routine?",Get a character from the input channel
"In the context of the C64, What is the call address of the CHRIN routine?",$FFCF (hex) 65487 (decimal)
"In the context of the C64, What registers are affected by the CHRIN routine?","A, X"
"In the context of the C64, What is the stack requirement for the CHRIN routine?",7+
"In the context of the C64, What is the error return value for the CHRIN routine?",0 (See READST)
"In the context of the C64, What is the description of the CHRIN routine?",This routine gets a byte of data from a channel already set up as the input channel by the KERNAL routine CHKIN.
"In the context of the C64, How does the CHRIN routine handle input from the keyboard?","The cursor is turned on, and blinks until a carriage return is typed on the keyboard."
"In the context of the C64, What is the purpose of the CHKIN routine?",Set up a channel as the input channel
"In the context of the C64, What is the purpose of the OPEN routine?",Set up a channel as the input channel
"In the context of the C64, what is the purpose of the program counter",The program counter contains the address of the current machine language instruction being executed.
"In the context of the C64, What stops the program counter from changing",The program counter could only be stopped by halting the microprocessor in some way.
"In the context of the C64, What is the program counter always executing",The program counter is always executing the current machine language instruction.
"In the context of the C64, What is the program counter always containing",The program counter always contains the address of the current machine language instruction.
"In the context of the C64, What is the program counter always changing to",The program counter is always changing to the address of the next machine language instruction.
"In the context of the C64, What is the program counter always containing in",The program counter is always containing the address of the current machine language instruction in the Commodore 64.
"In the context of the C64, The volume of a musical tone changes from the moment you first hear it, all the way through until it dies out and you can't hear it anymore.","The volume of a musical tone changes from the moment you first hear it, all the way through until it dies out and you can't hear it anymore."
"In the context of the C64, What happens to the volume of a musical tone when it is first struck?",It rises from zero volume to its peak volume.
"In the context of the C64, What is the rate at which the volume of a musical tone rises when it is first struck?",The rate at which this happens is called the ATTACK.
"In the context of the C64, What happens to the volume of a musical tone after it reaches its peak?",It fails from the peak to some middle-ranged volume.
"In the context of the C64, What is the rate at which the volume of a musical tone falls after it reaches its peak?",The rate at which the fall of the note occurs is called the DECAY.
"In the context of the C64, What is the mid-ranged volume of a musical tone?",The mid-ranged volume itself is called the SUSTAIN level.
"In the context of the C64, What happens to the volume of a musical tone when it stops playing?",It fails from the SUSTAIN level to zero volume.
"In the context of the C64, What is the rate at which the volume of a musical tone fails when it stops playing?",The rate at which it fails is called the RELEASE.
"In the context of the C64, What are the parameters that give certain qualities and restrictions to a note?",The bounds are called parameters.
"In the context of the C64, What is the collective name for the parameters ATTACK, DECAY, SUSTAIN, and RELEASE?",The parameters ATTACK/DECAY/SUSTAIN/RELEASE and collectively called ADSR.
"In the context of the C64, SEC does what?",The SEC instruction sets the carry flag.
"In the context of the C64, SEC OP CODE?",The OP code of the SEC instruction is 38.
"In the context of the C64, SEC: No. Bytes",The number of bytes required to execute the SEC instruction is 1.
"In the context of the C64, SEC: No. Cycles",The number of cycles required to execute the SEC instruction is 2.
"In the context of the C64, SEC: Addressing Mode",The addressing mode of the SEC instruction is implied.
"In the context of the C64, SEC: Instruction Description",The SEC instruction sets the carry flag.
"In the context of the C64, SEC: Carry Flag",The SEC instruction sets the carry flag.
"In the context of the C64, SEC: Flag Setting",The SEC instruction sets the carry flag.
"In the context of the C64, SEC: Flag Operation",The SEC instruction sets the carry flag.
"In the context of the C64, what is the operation of LDX instruction",Load index X with memory
"In the context of the C64, what is the addressing mode of LDX #Oper",Immediate
"In the context of the C64, what is the OP CODE of LDX #Oper",A2
"In the context of the C64, how many bytes does LDX #Oper take",2
"In the context of the C64, how many cycles does LDX #Oper take",2
"In the context of the C64, what is the addressing mode of LDX Oper",Zero Page
"In the context of the C64, what is the OP CODE of LDX Oper",A6
"In the context of the C64, how many bytes does LDX Oper take",2
"In the context of the C64, how many cycles does LDX Oper take",3
"In the context of the C64, what is the addressing mode of LDX Oper,Y","Zero Page,Y"
"In the context of the C64, what is the OP CODE of LDX Oper,Y",B6
"In the context of the C64, how many bytes does LDX Oper,Y take",2
"In the context of the C64, how many cycles does LDX Oper,Y take",4
"In the context of the C64, If the STOP key pressed during a UDTIM call?","If the <STOP> key on the keyboard was pressed during a UDTIM call, this call returns the Z flag set."
"In the context of the C64, What is the call address of the STOP function?",$FFE1 (hex) 65505 (decimal)
"In the context of the C64, What registers are affected by the STOP function?","Registers affected: A, X"
"In the context of the C64, What is the purpose of the STOP function?",Check if <STOP> key is pressed
"In the context of the C64, What happens if the STOP key is not pressed during a UDTIM call?",The accumulator will contain a byte representing the lost row of the keyboard scan.
"In the context of the C64, What is the default behavior if the STOP key is pressed during a UDTIM call?",The channels will be reset to default values.
"In the context of the C64, What is the condition to check for the STOP key press?",Test for the zero flag.
"In the context of the C64, What is the sequence of steps to use the STOP function?",0) UDTIM should be called before this routine. 1) Call this routine. 2) Test for the zero flag.
"In the context of the C64, What is the effect of pressing the STOP key during a UDTIM call on the accumulator?",The accumulator will contain a byte representing the lost row of the keyboard scan.
"In the context of the C64, What is the purpose of the UDTIM call before using the STOP function?",UDTIM should be called before this routine.
"In the context of the C64, By what method can machine language programs be added to a BASIC program?",DATA STATEMENTS
"In the context of the C64, How many methods are there to add machine language programs to a BASIC program?",3
"In the context of the C64, What is the easiest method to add machine language routines?",DATA STATEMENTS
"In the context of the C64, What is the drawback of using DATA STATEMENTS method?",taking up more memory space
"In the context of the C64, What is the advantage of using DATA STATEMENTS method?",fairly easy to debug
"In the context of the C64, What is the drawback of using DATA STATEMENTS method?",the wait while the program is POKED in
"In the context of the C64, What is the best use of DATA STATEMENTS method?",for smaller routines
"In the context of the C64, Is the printer an output device?","Yes, it is similar to the screen."
"In the context of the C64, What is the main concern when sending output to the printer?",To create a format that is easy on the eyes.
"In the context of the C64, What are the tools available for formatting output to the printer?","Reversed, double-width, capital and lower case letters, as well as dot-programmable graphics."
"In the context of the C64, Does the SPC function work the same way on the printer as it does on the screen?","Yes, it works in the same way."
"In the context of the C64, Why does the TAB function not work correctly on the printer?","Because it calculates the current position on the line based on the cursor's position on the screen, not on the paper."
"In the context of the C64, What is the purpose of the OPEN statement for the printer?",It creates the channel for communication and specifies which character set will be used.
"In the context of the C64, What are the examples of OPEN statements for the printer?","OPEN 1,4: REM UPPER CASE/GRAPHICS and OPEN 1,4,7: REM UPPER AND LOWER CASE"
"In the context of the C64, Can individual lines be printed in the opposite character set when working with one character set?","Yes, they can."
"In the context of the C64, What is the character that switches the characters to the upper and lower case set when in upper case with graphics?",CHR$(17)
"In the context of the C64, What is the character that allows upper case and graphics characters to be printed when in upper and lower case?",CHR$(145)
"In the context of the C64, What are the special functions in the printer controlled through character codes?",All these codes are simply printed just like any other character.
"In the context of the C64, What is the purpose of the CHR$ CODE 10?",Line feed
"In the context of the C64, What is the purpose of the CHR$ CODE 13?",RETURN (automatic line feed on CBM printers)
"In the context of the C64, What is the purpose of the CHR$ CODE 14?",Begin double-width character mode
"In the context of the C64, What is the purpose of the CHR$ CODE 15?",End double-width character mode
"In the context of the C64, What is the purpose of the CHR$ CODE 18?",Begin reverse character mode
"In the context of the C64, What is the purpose of the CHR$ CODE 146?",End reverse character mode
"In the context of the C64, What is the purpose of the CHR$ CODE 17?",Switch to upper/lower case character set
"In the context of the C64, What is the purpose of the CHR$ CODE 145?",Switch to upper case/graphics character set
"In the context of the C64, What is the purpose of the CHR$ CODE 16?",Tab to position in next 2 characters
"In the context of the C64, What is the purpose of the CHR$ CODE 27?",Move to specified dot position
"In the context of the C64, What is the purpose of the CHR$ CODE 8?",Begin dot-programmable graphic mode
"In the context of the C64, What is the purpose of the CHR$ CODE 26?",Repeat graphics data
"In the context of the C64, Is the accumulator the most important register in the microprocessor?",Yes
"In the context of the C64, What can you do with the accumulator?","Copy the contents of a memory location into the accumulator, copy the contents of the accumulator into a memory location, modify the contents of the accumulator or some other register directly, without affecting any memory"
"In the context of the C64, What instructions allow you to copy the contents of a memory location into the accumulator?",Various machine language instructions
"In the context of the C64, What instructions allow you to copy the contents of the accumulator into a memory location?",Various machine language instructions
"In the context of the C64, What can you do with the accumulator without affecting any memory?",Modify the contents of the accumulator or some other register directly
"In the context of the C64, What is the only register that has instructions for performing math?",The accumulator
"In the context of the C64, What is the most important register in the microprocessor?",The accumulator
"In the context of the C64, What can you do with the accumulator in terms of math?",Perform math
"In the context of the C64, What are the instructions for performing math?",Instructions for the accumulator
"In the context of the C64, What is the accumulator used for?",To perform math and other operations
"In the context of the C64, what is the ORA operation used for",The ORA operation is used for performing a bitwise OR operation on the accumulator with the contents of a memory location.
"In the context of the C64, what is the ORA operation used for in assembly language",The ORA operation is used in assembly language to perform a bitwise OR operation on the accumulator with the contents of a memory location.
"In the context of the C64, what is the ORA operation used for in computer programming",The ORA operation is used in computer programming to perform a bitwise OR operation on the accumulator with the contents of a memory location.
"In the context of the C64, what is the ORA operation used for in programming languages",The ORA operation is used in programming languages to perform a bitwise OR operation on the accumulator with the contents of a memory location.
"In the context of the C64, what is the ORA operation used for in programming",The ORA operation is used in programming to perform a bitwise OR operation on the accumulator with the contents of a memory location.
"In the context of the C64, what is the ORA operation used for in computer science",The ORA operation is used in computer science to perform a bitwise OR operation on the accumulator with the contents of a memory location.
"In the context of the C64, what is the ORA operation used for in programming languages",The ORA operation is used in programming languages to perform a bitwise OR operation on the accumulator with the contents of a memory location.
"In the context of the C64, what is the ORA operation used for in computer programming",The ORA operation is used in computer programming to perform a bitwise OR operation on the accumulator with the contents of a memory location.
"In the context of the C64, what is the ORA operation used for in assembly language programming",The ORA operation is used in assembly language programming to perform a bitwise OR operation on the accumulator with the contents of a memory location.
"In the context of the C64, what is the ORA operation used for in programming languages",The ORA operation is used in programming languages to perform a bitwise OR operation on the accumulator with the contents of a memory location.
"In the context of the C64, What is the purpose of ROR instruction?",Rotate one bit right (memory or accumulator)
"In the context of the C64, What are the addressing modes for ROR instruction?","Accumulator, Zero Page, Zero Page,X, Absolute, Absolute,X"
"In the context of the C64, What is the number of bytes for ROR instruction in Accumulator mode?",1
"In the context of the C64, What is the number of cycles for ROR instruction in Accumulator mode?",2
"In the context of the C64, What is the number of bytes for ROR instruction in Zero Page mode?",2
"In the context of the C64, What is the number of cycles for ROR instruction in Zero Page mode?",5
"In the context of the C64, What is the number of bytes for ROR instruction in Zero Page,X mode?",2
"In the context of the C64, What is the number of cycles for ROR instruction in Zero Page,X mode?",6
"In the context of the C64, What is the number of bytes for ROR instruction in Absolute mode?",3
"In the context of the C64, What is the number of cycles for ROR instruction in Absolute mode?",6
"In the context of the C64, What is the number of bytes for ROR instruction in Absolute,X mode?",3
"In the context of the C64, What is the number of cycles for ROR instruction in Absolute,X mode?",7
"In the context of the C64, Unexpanded sprites are visible in which column mode?","40 column, by 25 row mode"
"In the context of the C64, What is the minimum X value for unexpanded sprites?",1
"In the context of the C64, What is the maximum Y value for unexpanded sprites in 40 column mode?",249
"In the context of the C64, What is the range of X values for expanded sprites in 38 column mode?",496 >= X <= 334
"In the context of the C64, What is the minimum Y value for expanded sprites in 24 row mode?",13
"In the context of the C64, What is the maximum X value for unexpanded sprites in 40 column mode?",343
"In the context of the C64, What is the range of Y values for unexpanded sprites in 24 row mode?",34 <= Y <= 245
"In the context of the C64, What is the minimum X value for expanded sprites in 40 column mode?",489
"In the context of the C64, What is the maximum Y value for unexpanded sprites in 38 column mode?",249
"In the context of the C64, What is the range of X values for unexpanded sprites in 38 column mode?",8 <= X <= 334
"In the context of the C64, Where is the Operating System contained?",in Read Only Memory (ROM) chips
"In the context of the C64, What are the three separate program modules that make up the Operating System?","The BASIC Interpreter, The KERNAL, and The Screen Editor"
"In the context of the C64, What is the purpose of the BASIC Interpreter?",to analyse BASIC statement syntax and perform required calculations and/or data manipulation
"In the context of the C64, How big is the vocabulary of the BASIC Interpreter?",65 keywords
"In the context of the C64, What are the special characters used in the BASIC Interpreter?","upper and lower case alphabet, digits 0-9, punctuation characters, and special symbols"
"In the context of the C64, What does the KERNAL handle in the system?",interrupt level processing
"In the context of the C64, What does the Screen Editor control?",output to the video screen and editing of BASIC program text
"In the context of the C64, What does the Screen Editor intercept?",keyboard input
"In the context of the C64, What does the Screen Editor decide about keyboard input?",whether to act upon characters immediately or pass them on to the BASIC Interpreter
"In the context of the C64, Bit 4 of the VIC-II control register controls what function?",screen blanking function
"In the context of the C64, What happens to the screen when bit 4 is set to 1?",the screen is normal
"In the context of the C64, What happens to the screen when bit 4 is set to 0?",the entire screen changes to border color
"In the context of the C64, What is the location of the control register?",53265
"In the context of the C64, What is the hexadecimal value of the control register location?",$D011
"In the context of the C64, What happens to the processor when the screen is turned off?",it speeds up
"In the context of the C64, What is the POKE command to blank the screen?","POKE 53265,PEEK(53265)AND 239"
"In the context of the C64, What is the POKE command to bring back the screen?","POKE 53265,PEEK(53265)OR 16"
"In the context of the C64, What is the purpose of turning off the screen?",to speed up the processor
"In the context of the C64, What happens to program running when the screen is turned off?",it is sped up
"In the context of the C64, What is the purpose of the CLALL function?",Close all files
"In the context of the C64, What is the call address of the CLALL function?",$FFE7 (hex) 65511 (decimal)
"In the context of the C64, What communication registers are used by the CLALL function?",
"In the context of the C64, What preparatory routines are used by the CLALL function?",
"In the context of the C64, What is the error return value of the CLALL function?",
"In the context of the C64, What is the stack requirement of the CLALL function?",11
"In the context of the C64, What registers are affected by the CLALL function?","A, X"
"In the context of the C64, What is the description of the CLALL function?",This routine closes all open files.
"In the context of the C64, What is the effect of calling the CLRCHN routine?",reset the I/O channels
"In the context of the C64, How do you use the CLALL function?",Call this routine
"In the context of the C64, What is an example of using the CLALL function?",JSR CLALL   ;CLOSE ALL FILES AND SELECT DEFAULT I/O CHANNELS
"In the context of the C64, What is the purpose of the LISTEN function?",Command a device on the serial bus to listen
"In the context of the C64, What is the call address of the LISTEN function?",$FFB1 (hex) 65457 (decimal)
"In the context of the C64, What communication registers are affected by the LISTEN function?",A
"In the context of the C64, What is the purpose of the preparatory routines in the LISTEN function?",
"In the context of the C64, What is the error return for the LISTEN function?",See READST
"In the context of the C64, What is the stack requirement for the LISTEN function?",
"In the context of the C64, What registers are affected by the LISTEN function?",A
"In the context of the C64, What is the description of the LISTEN function?",This routine will command a device on the serial bus to receive data
"In the context of the C64, How do you load the accumulator with the number of the device to command to LISTEN?",Load the accumulator with the number of the device to command to LISTEN
"In the context of the C64, What is the example of how to use the LISTEN function?",;COMMAND DEVICE #8 TO LISTEN LDA #8 JSR LISTEN
"In the context of the C64, What is the purpose of the LOAD routine?",Load RAM from device
"In the context of the C64, What is the call address of the LOAD routine?",$FFD5 (hex) 65493 (decimal)
"In the context of the C64, What registers are affected by the LOAD routine?","A, X, Y"
"In the context of the C64, What are the preparatory routines for the LOAD routine?","SETLFS, SETNAM"
"In the context of the C64, What are the possible error returns for the LOAD routine?","0,4,5,8,9, READST"
"In the context of the C64, What is the purpose of setting the accumulator to 0 or 1?",For a LOAD operation or a verify operation
"In the context of the C64, What happens if the input device is opened with a secondary address of 0?",The header information from the device is ignored
"In the context of the C64, What happens if the input device is addressed with a secondary address of 1?",The data is loaded into memory starting at the location specified by the header
"In the context of the C64, What routines must be called before using the LOAD routine?","KERNAL SETLFS, and SETNAM routines"
"In the context of the C64, What devices cannot be used for loading data?","Keyboard (0), RS-232 (2), or the screen (3)"
"In the context of the C64, Load the accumulator with the number of the logical file to be closed.",Load the accumulator with the number of the logical file to be closed.
"In the context of the C64, Call this routine after loading the accumulator with the logical file number.",Call this routine after loading the accumulator with the logical file number.
"In the context of the C64, What is the purpose of the CLOSE routine?",Close a logical file.
"In the context of the C64, What is the call address of the CLOSE routine?",$FFC3 (hex) 65475 (decimal)
"In the context of the C64, What registers are affected by the CLOSE routine?","A, X, Y"
"In the context of the C64, What is the minimum stack requirement for the CLOSE routine?",2+
"In the context of the C64, What is the error return value for the CLOSE routine?","0,240 (See READST)"
"In the context of the C64, What is the preparatory routine for the CLOSE routine?",
"In the context of the C64, What is the communication register for the CLOSE routine?",A
"In the context of the C64, What is the description of the CLOSE routine?",This routine is used to close a logical file after all I/O operations have been completed on that file.
"In the context of the C64, Where is the raster register located in the VIC-II chip?",The raster register is found in the VIC-II chip at location 53266 ($D012).
"In the context of the C64, What is the purpose of the raster register when reading it?",It returns the lower 8 bits of the current raster position.
"In the context of the C64, What is the most significant bit of the raster position located at?",Register location 53265 ($D011).
"In the context of the C64, What is the purpose of the raster register in setting up timing changes?",To get rid of screen flicker.
"In the context of the C64, When should the changes on the screen be made?","When the raster is not in the visible display area, which is when your dot positions fall between 51 and 251."
"In the context of the C64, What happens when the raster register is written to?",The number written to is saved for use with the raster compare function.
"In the context of the C64, What happens when the actual raster value becomes the same as the number written to the raster register?",A bit in the VIC-II chip interrupt register 53273 ($D019) is turned ON by setting it to 1.
"In the context of the C64, What happens if the proper interrupt bit is enabled?",An interrupt (IRQ) will occur.
"In the context of the C64, What is the purpose of the raster compare function?",To compare the actual raster value with the number written to the raster register.
"In the context of the C64, What is the purpose of the VIC-II chip interrupt register?",To handle interrupts.
"In the context of the C64, What is the purpose of the raster register in the VIC-II chip?",To set up timing changes in your display to get rid of screen flicker.
"In the context of the C64, Can sprites cross each other's paths?","Yes, sprites have the ability to cross each other's paths."
"In the context of the C64, What is the highest priority sprite number?",Sprite 0 has the highest priority.
"In the context of the C64, Can sprites be positioned in front of or behind other objects on the screen?","Yes, sprites can be positioned in front of or behind other objects on the screen."
"In the context of the C64, What determines the priority of sprites?",Sprite priority is fixed and determined by the sprite number.
"In the context of the C64, Can sprites have 'holes' in them?","Yes, sprites can have 'holes' in them."
"In the context of the C64, What happens when a sprite with higher priority has 'holes' in it?",The sprite with the lower priority will show through.
"In the context of the C64, What is the effect of assigning lower sprite numbers?",Sprites assigned lower sprite numbers will appear in the foreground.
"In the context of the C64, What is the effect of assigning higher sprite numbers?",Sprites assigned higher sprite numbers will appear in the background.
"In the context of the C64, Can a sprite with higher priority show through a sprite with lower priority?","Yes, a sprite with higher priority can show through a sprite with lower priority."
"In the context of the C64, What is the 'window' effect in sprite display?",The 'window' effect is when a sprite with higher priority shows through a sprite with lower priority.
"In the context of the C64, ROL instruction rotates one bit left in memory or accumulator",The ROL instruction rotates one bit left in memory or accumulator.
"In the context of the C64, ROL instruction has different addressing modes","The ROL instruction has different addressing modes such as Accumulator, Zero Page, Zero Page,X, Absolute, and Absolute,X."
"In the context of the C64, ROL instruction has different operation codes","The ROL instruction has different operation codes such as 2A, 26, 36, 2E, and 3E."
"In the context of the C64, ROL instruction has different number of bytes","The ROL instruction has different number of bytes such as 1, 2, and 3."
"In the context of the C64, ROL instruction has different number of cycles","The ROL instruction has different number of cycles such as 2, 5, 6, and 7."
"In the context of the C64, ROL instruction is used in assembly language",The ROL instruction is used in assembly language to rotate one bit left in memory or accumulator.
"In the context of the C64, ROL instruction is used in different addressing modes","The ROL instruction is used in different addressing modes such as Accumulator, Zero Page, Zero Page,X, Absolute, and Absolute,X."
"In the context of the C64, ROL instruction is used in different operation codes","The ROL instruction is used in different operation codes such as 2A, 26, 36, 2E, and 3E."
"In the context of the C64, ROL instruction is used in different number of bytes","The ROL instruction is used in different number of bytes such as 1, 2, and 3."
"In the context of the C64, ROL instruction is used in different number of cycles","The ROL instruction is used in different number of cycles such as 2, 5, 6, and 7."
"In the context of the C64, what is the purpose of the NOP instruction","The purpose of the NOP instruction is to perform a No Operation, which means that the instruction does not perform any actual operation."
"In the context of the C64, What is the number of cycles required to execute the NOP instruction",The NOP instruction requires 2 cycles to execute.
"In the context of the C64, What is the addressing mode used by the NOP instruction",The NOP instruction uses the Implied addressing mode.
"In the context of the C64, What is the assembly language form of the NOP instruction",The assembly language form of the NOP instruction is NOP.
"In the context of the C64, What is the number of bytes required to encode the NOP instruction",The NOP instruction requires 1 byte to encode.
"In the context of the C64, What is the opcode of the NOP instruction",The opcode of the NOP instruction is EA.
"In the context of the C64, What is the purpose of the NOP instruction in assembly language programming","The purpose of the NOP instruction in assembly language programming is to perform a No Operation, which means that the instruction does not perform any actual operation."
"In the context of the C64, What is the number of bytes required to encode the NOP instruction in assembly language programming",The NOP instruction in assembly language programming requires 1 byte to encode.
"In the context of the C64, What is the purpose of the NOP instruction in computer architecture","The purpose of the NOP instruction in computer architecture is to perform a No Operation, which means that the instruction does not perform any actual operation."
"In the context of the C64, What is the number of cycles required to execute the NOP instruction in computer architecture",The NOP instruction in computer architecture requires 2 cycles to execute.
"In the context of the C64, Where are the 6510 Registers stored?",0 & 1
"In the context of the C64, What is the start of memory?",2
"In the context of the C64, What is the purpose of the memory from 2-1023?",Memory used by the operating system.
"In the context of the C64, What is stored in the screen memory?",Screen memory.
"In the context of the C64, What are the SPRITE pointers used for?",SPRITE pointers.
"In the context of the C64, What is the purpose of the memory from 2048-40959?","This is YOUR memory. This is where your BASIC or machine language programs, or both, are stored."
"In the context of the C64, What is stored in the 8K CBM BASIC Interpreter?",8K CBM BASIC Interpreter.
"In the context of the C64, What is the purpose of the special programs RAM area?",Special programs RAM area.
"In the context of the C64, What is the purpose of the VIC-II?",VIC-II.
"In the context of the C64, What are the SID Registers used for?",SID Registers.
"In the context of the C64, What is stored in the Color RAM?",Color RAM.
"In the context of the C64, What are the I/O Registers used for?",I/O Registers.
"In the context of the C64, What is the purpose of the 8K CBM KERNAL Operating System?",8K CBM KERNAL Operating System.
"In the context of the C64, What is stored in the memory from 40960-49151?",8K CBM BASIC Interpreter.
"In the context of the C64, What is stored in the memory from 49152-53247?",Special programs RAM area.
"In the context of the C64, What is stored in the memory from 53248-53294?",VIC-II.
"In the context of the C64, What is stored in the memory from 54272-55295?",SID Registers.
"In the context of the C64, What is stored in the memory from 55296-56296?",Color RAM.
"In the context of the C64, What is stored in the memory from 56320-57343?",I/O Registers.
"In the context of the C64, What is stored in the memory from 57344-65535?",8K CBM KERNAL Operating System.
"In the context of the C64, Can the SID chip's parameters be changed dynamically during a note or sound?","Yes, the SID chip's parameters can be changed dynamically during a note or sound to create many interesting and fun effects."
"In the context of the C64, What are the digitized outputs available for you in registers?","Digitized outputs from oscillator three and envelope generator three are available for you in registers 27 and 28, respectively."
"In the context of the C64, What is the relationship between the output of oscillator 3 and the waveform selected?",The output of oscillator 3 is directly related to the waveform selected.
"In the context of the C64, What happens to the output of oscillator 3 when the sawtooth waveform is chosen?",The output will present a series of numbers incremented (increased step by step) from 0 to 255 at a rate determined by the frequency of oscillator 3.
"In the context of the C64, What happens to the output of oscillator 3 when the triangle waveform is chosen?","The output will increment from 0 up to 255, then decrement (decrease step by step) back down to 0."
"In the context of the C64, What happens to the output of oscillator 3 when the pulse wave is chosen?",The output will jump back-and-forth between 0 and 255.
"In the context of the C64, What happens to the output of oscillator 3 when the noise waveform is chosen?",The output will give you a series of random numbers.
"In the context of the C64, What is the purpose of setting bit 7 of register 24?",Setting bit 7 of register 24 turns the audio output of voice 3 off.
"In the context of the C64, What is the function of register 25?",Register 25 gives you access to the output of the envelope generator of oscillator 3.
"In the context of the C64, How can vibrato be achieved?",Vibrato can be achieved by adding the output of oscillator 3 to the frequency of another oscillator.
"In the context of the C64, What is the format of the OPEN statement parameters?","FORMAT: OPEN file#, device#, number, string"
"In the context of the C64, What is the purpose of the DEVICE column in the table?",File Name
"In the context of the C64, What is the purpose of the NUMBER column in the table?",Control Registers
"In the context of the C64, What is the purpose of the STRING column in the table?",Text Is PRINTed
"In the context of the C64, What is the range of DEVICE# values?",8 to 11
"In the context of the C64, What is the purpose of the MODEM device?",Control Registers
"In the context of the C64, What is the purpose of the SCREEN device?",Text Is PRINTed
"In the context of the C64, What is the purpose of the PRINTER device?",Text Is PRINTed
"In the context of the C64, What is the purpose of the DISK device?","Drive #, File Name"
"In the context of the C64, What is the purpose of the CASSETTE device?",File Name
"In the context of the C64, Where is the best place to put machine language routines on the Commodore 64?",from $C000-$CFFF
"In the context of the C64, What happens to the machine language routine if it's larger than 4K bytes?",it then becomes necessary to reserve an area at the top of memory
"In the context of the C64, What is the top of memory normally?",$9FFF
"In the context of the C64, How can the top of memory be changed?","through the KERNAL routine MEMTOP, or by the following BASIC statements"
"In the context of the C64, What is the purpose of the MEMTOP routine?",to change the top of memory
"In the context of the C64, What is the primary function of a modem?",translate character codes into audio pulses and vice-versa
"In the context of the C64, What is the purpose of the OPEN statement in a modem?",sets up the parameters to match the speed and format of the other computer
"In the context of the C64, What determines the baud rate, number of data bits, and number of stop bits in a modem?",the bit positions of the first character code
"In the context of the C64, What is the optional second code in a modem used for?",specifies the parity and duplex of the transmission
"In the context of the C64, What is the standard set of character codes used by most computers?",ASCII
"In the context of the C64, Why is character translation necessary when communicating with other computers?",because Commodore 64 character codes are different from ASCII
"In the context of the C64, What is the importance of knowing the receiving device when writing programs that communicate with other computers?",to ensure the receiving computer knows what to do with the characters
"In the context of the C64, What is an example of a program that automatically types in account numbers and secret passwords?",a terminal program
"In the context of the C64, Why is it important to carefully count the number of characters and RETURN characters in a program?",so the receiving computer knows what to do with them
"In the context of the C64, What is the main difference between outputting to a modem and outputting to a screen?",the need for character translation
"In the context of the C64, What can you do with the X Index Register?",There are instructions for nearly all of the transformations you can make to the accumulator.
"In the context of the C64, What can you copy into the X register?",copy the contents of a memory location into the X register
"In the context of the C64, What can you copy from the X register?",copy the contents of the X register into a memory location
"In the context of the C64, What is the purpose of the CHKIN routine?",Open a channel for input
"In the context of the C64, What is the call address of the CHKIN routine?",$FFC6 (hex) 65478 (decimal)
"In the context of the C64, What registers are affected by the CHKIN routine?","A, X"
"In the context of the C64, What is the error return #3 for?",File not open
"In the context of the C64, What is the error return #5 for?",Device not present
"In the context of the C64, What is the error return #6 for?",File not an input file
"In the context of the C64, What is the purpose of the OPEN routine in relation to the CHKIN routine?",To open a logical file
"In the context of the C64, What is the purpose of loading the X register with the number of the logical file?",To specify the logical file to be used
"In the context of the C64, What is the purpose of the JSR command in the CHKIN routine?",To call the CHKIN routine
"In the context of the C64, What is the effect of using the CHKIN routine with a device on the serial bus?",It automatically sends the talk address and secondary address over the bus
"In the context of the C64, What is the 'brain' of a microcomputer?",The central microprocessor is the 'brain' of a microcomputer.
"In the context of the C64, What is machine language?",Machine language is the ONLY programming language that your Commodore 64 understands.
"In the context of the C64, What is the native language of the machine?",Machine language is the NATIVE language of the machine.
"In the context of the C64, How does the Commodore 64 understand CBM BASIC instructions?",The Commodore 64 understands CBM BASIC instructions through an operating system.
"In the context of the C64, What is stored in a special type of memory?",A machine language program is stored in a special type of memory.
"In the context of the C64, What is the OPERATING SYSTEM of the Commodore 64?",The OPERATING SYSTEM of the Commodore 64 is a machine language program.
"In the context of the C64, What happens when the Commodore 64 is turned on?",The OPERATING SYSTEM (program) is automatically 'RUN' when the Commodore 64 is turned on.
"In the context of the C64, What is the purpose of the OPERATING SYSTEM?",The OPERATING SYSTEM is a machine language program that tells the Commodore 64 what to do when it's turned on.
"In the context of the C64, What is the difference between a program and the OPERATING SYSTEM?","A program can be changed or disappear when the Commodore 64 is turned off, unlike the OPERATING SYSTEM."
"In the context of the C64, What is PLA doing?",Pull accumulator
"In the context of the C64, PLA operation is used in what addressing mode",Implied
"In the context of the C64, What is the OP CODE for PLA operation",68
"In the context of the C64, How many bytes does PLA operation use",1
"In the context of the C64, How many cycles does PLA operation take",4
"In the context of the C64, What is the purpose of PLA operation",Pull accumulator from stack
"In the context of the C64, What is the assembly language form of PLA operation",PLA
"In the context of the C64, What is the number of cycles PLA operation takes",4
"In the context of the C64, What is the number of bytes PLA operation uses",1
"In the context of the C64, What is the OP CODE for PLA operation in hexadecimal",0x44
"In the context of the C64, What is the purpose of PLA operation in assembly language",Pull accumulator from stack
"In the context of the C64, what is the operation of LDY instruction",Load index Y with memory
"In the context of the C64, what is the addressing mode of LDY #Oper",Immediate
"In the context of the C64, what is the assembly language form of LDY #Oper",LDY #Oper
"In the context of the C64, what is the OP CODE of LDY #Oper",A0
"In the context of the C64, how many bytes does LDY #Oper instruction occupy",2
"In the context of the C64, how many cycles does LDY #Oper instruction take",2
"In the context of the C64, what is the addressing mode of LDY Oper",Zero Page
"In the context of the C64, what is the assembly language form of LDY Oper",LDY Oper
"In the context of the C64, what is the OP CODE of LDY Oper",A4
"In the context of the C64, how many bytes does LDY Oper instruction occupy",2
"In the context of the C64, how many cycles does LDY Oper instruction take",3
"In the context of the C64, what is the addressing mode of LDY Oper,X","Zero Page,X"
"In the context of the C64, what is the assembly language form of LDY Oper,X","LDY Oper,X"
"In the context of the C64, what is the OP CODE of LDY Oper,X",B4
"In the context of the C64, how many bytes does LDY Oper,X instruction occupy",2
"In the context of the C64, how many cycles does LDY Oper,X instruction take",4
"In the context of the C64, what is the addressing mode of LDY Oper",Absolute
"In the context of the C64, what is the assembly language form of LDY Oper",LDY Oper
"In the context of the C64, what is the OP CODE of LDY Oper",AC
"In the context of the C64, how many bytes does LDY Oper instruction occupy",3
"In the context of the C64, how many cycles does LDY Oper instruction take",4
"In the context of the C64, what is the addressing mode of LDY Oper,X","Absolute,X"
"In the context of the C64, what is the assembly language form of LDY Oper,X","LDY Oper,X"
"In the context of the C64, what is the OP CODE of LDY Oper,X",BC
"In the context of the C64, how many bytes does LDY Oper,X instruction occupy",3
"In the context of the C64, how many cycles does LDY Oper,X instruction take",4
"In the context of the C64, Is there a specific register in the VIC-II chip control register where sprite to data collisions are detected?",The sprite to data collisions are detected in the sprite to data collision register at location 53279 ($D01F in HEX) of the VIC-II chip control register.
"In the context of the C64, What happens to the bits in the sprite to data collision register once they are read?","The bits in this register remain set until read (PEEKed). Once read, the register is automatically cleared."
"In the context of the C64, Is it a good idea to save the value in a variable until you are finished with it after reading the sprite to data collision register?","Yes, it is a good idea to save the value in a variable until you are finished with it."
"In the context of the C64, Is MULTI-COLOR data 01 considered transparent for collisions?","Yes, MULTI-COLOR data 01 is considered transparent for collisions, even though it shows up on the screen."
"In the context of the C64, What should you make in multi-color mode when setting up a background screen to avoid collisions?",Make everything that should not cause a collision 01 in multi-color mode.
"In the context of the C64, Can a sprite be involved in a collision if its bit in the sprite to data collision register is a 0?","No, if that bit is a 0, then that sprite is not involved in a collision."
"In the context of the C64, Is it possible for a sprite to be involved in a collision even if it shows up on the screen?","Yes, a sprite can be involved in a collision even if it shows up on the screen."
"In the context of the C64, What happens to the sprite to data collision register after it is read?",The register is automatically cleared after it is read.
"In the context of the C64, Is it necessary to read the sprite to data collision register to clear it?","No, the register is automatically cleared after it is read."
"In the context of the C64, Can a sprite be involved in a collision if its bit in the sprite to data collision register is a 1?","Yes, if that bit is a 1, then that sprite is involved in a collision."
"In the context of the C64, What character sets are available on the Commodore 64?",The Commodore 64 has two complete character sets that you can use either from the keyboard or in your programs.
"In the context of the C64, What happens when you hold down the <SHIFT> key while typing?",Holding down the <SHIFT> key while typing any character that doesn't have graphic symbols on the front of the key gives you the symbol on the top most part of the key.
"In the context of the C64, What is the purpose of the <C=> key?","The graphic symbols on the LEFT side of the front of the keys are displayed by pressing the <C=> key, while the symbols on the top most part of any key without graphics characters are selected when you hold down the <SHIFT> key while typing."
"In the context of the C64, What happens when you hold down the <C=> key while typing?","The graphic symbols on the LEFT side of the front of the keys are displayed by pressing the <C=> key, while the symbols on the top most part of any key without graphics characters are selected when you hold down the <SHIFT> key while typing."
"In the context of the C64, What is the effect of holding down the <SHIFT> key while typing any character?",Holding down the <SHIFT> key while typing any character that doesn't have graphic symbols on the front of the key gives you the symbol on the top most part of the key.
"In the context of the C64, What are the available characters in SET 1?",The upper case alphabet and the numbers 0-9 are available without pressing the <SHIFT> key.
"In the context of the C64, What are the available characters in SET 2?",The lower case alphabet and the numbers 0-9 are available without pressing the <SHIFT> key.
"In the context of the C64, How do you switch from one character set to the other?",To switch from one character set to the other press the <C=> and the <SHIFT> keys together.
"In the context of the C64, What happens when you hold down the <SHIFT> key while typing an uppercase letter?",The upper case alphabet is available when you hold down the <SHIFT> key while typing.
"In the context of the C64, What happens when you hold down the <C=> key while typing a lowercase letter?",The lower case alphabet is available without pressing the <SHIFT> key.
"In the context of the C64, Set the top of RAM?",This routine is used to set the top of RAM.
"In the context of the C64, What is the call address of MEMTOP?",$FF99 (hex) 65433 (decimal)
"In the context of the C64, What registers are affected by MEMTOP?","X, Y"
"In the context of the C64, What is the purpose of MEMTOP?",Set the top of RAM
"In the context of the C64, What happens when MEMTOP is called with the accumulator carry bit set?",the pointer to the top of RAM will be loaded into the X and Y registers
"In the context of the C64, What happens when MEMTOP is called with the accumulator carry bit clear?","the contents of the X and Y registers are loaded in the top of memory pointer, changing the top of memory"
"In the context of the C64, What is the stack requirement for MEMTOP?",2
"In the context of the C64, What are the communication registers for MEMTOP?","X, Y"
"In the context of the C64, What is the preparatory routine for MEMTOP?",
"In the context of the C64, What are the error returns for MEMTOP?",
"In the context of the C64, GetIN function purpose",Get a character
"In the context of the C64, GetIN call address",$FFE4 (hex) 65508 (decimal)
"In the context of the C64, Registers affected by GetIN","A (X, Y)"
"In the context of the C64, Preparatory routines for GetIN","CHKIN, OPEN"
"In the context of the C64, Error returns for GetIN",See READST
"In the context of the C64, Stack requirements for GetIN",7+
"In the context of the C64, Description of GetIN",Removes one character from the keyboard queue and returns it as an ASCII value
"In the context of the C64, Characters in the keyboard buffer",Up to ten
"In the context of the C64, Channel types supported by GetIN","Keyboard, RS-232, serial, cassette, screen"
"In the context of the C64, Routine to call for serial, cassette, or screen channels",BASIN
"In the context of the C64, What is the purpose of the CLRCHN routine?",Clear I/O channels
"In the context of the C64, What is the call address of the CLRCHN routine?",$FFCC (hex) 65484 (decimal)
"In the context of the C64, What registers are affected by the CLRCHN routine?","A, X"
"In the context of the C64, What is the default input device?",0 (keyboard)
"In the context of the C64, What is the default output device?",3 (the Commodore 64 screen)
"In the context of the C64, What signal is sent to clear the input channel on the serial port?",UNTALK
"In the context of the C64, What signal is sent to clear the output channel on the serial port?",UNLISTEN
"In the context of the C64, What is the effect of not calling the CLRCHN routine?",Several devices can receive the same data from the Commodore 64 at the same time
"In the context of the C64, What is the KERNAL CLALL routine?",A routine that automatically calls the CLRCHN routine
"In the context of the C64, How to use the CLRCHN routine?",Call it using the JSR instruction
"In the context of the C64, Set bottom of memory",This routine is used to set the bottom of the memory.
"In the context of the C64, What is the purpose of MEMBOT routine",This routine is used to set the bottom of the memory.
"In the context of the C64, What is the call address of MEMBOT routine",$FF9C (hex) 65436 (decimal)
"In the context of the C64, What registers are affected by MEMBOT routine","Registers affected: X, Y"
"In the context of the C64, What is the initial value of the pointer to the lowest byte of RAM on the unexpanded Commodore 64",$0800 (2048 in decimal)
"In the context of the C64, What happens when the accumulator carry bit is set when calling MEMBOT routine",a pointer to the lowest byte of RAM is returned in the X and Y registers
"In the context of the C64, What happens when the accumulator carry bit is clear when calling MEMBOT routine","the values of the X and Y registers are transferred to the low and high bytes, respectively, of the pointer to the beginning of RAM"
"In the context of the C64, How to read the bottom of RAM",TO READ THE BOTTOM OF RAM 1) Set the carry. 2) Call this routine.
"In the context of the C64, How to set the bottom of memory",TO SET THE BOTTOM OF MEMORY 1) Clear the carry. 2) Call this routine.
"In the context of the C64, What is the example of moving the bottom of memory up 1 page",;MOVE BOTTOM OF MEMORY UP 1 PAGE SEC ;READ MEMORY BOTTOM JSR MEMBOT INY CLC ;SET MEMORY BOTTOM TO NEW VALUE JSR MEMBOT
"In the context of the C64, Positioning in the horizontal direction is more complicated because?","There are more than 256 positions, which is more than a byte."
"In the context of the C64, What is the maximum number of possible positions in the left/right direction?",512 possible positions.
"In the context of the C64, For a sprite,What is the range of visible positions on the screen?",Between 24 and 343.
"In the context of the C64, What happens if the X position of a sprite is greater than 255?",The bit in the X MOST SIGNIFICANT BIT POSITION register must be set to a 1.
"In the context of the C64, What happens if the X position of a sprite is less than 256?",The X MSB of that sprite must be 0.
"In the context of the C64, What do bits 0 to 7 of the X MSB register correspond to?",Sprites 0 to 7.
"In the context of the C64, What is the purpose of the X MSB register?",To control the X position of a sprite.
"In the context of the C64, What is the range of sprite positions?",From 0 to 511.
"In the context of the C64, What is the significance of the 9th bit?",It is used to control the X position.
"In the context of the C64, Sprite to sprite collisions are recognized by the computer in which register?",in the sprite to sprite collision register at location 53278 ($D01E in HEX)
"In the context of the C64, Is the bit in the register set to 1 if a sprite is involved in a collision?",yes
"In the context of the C64, What happens to the bits in the register once they are read?",they are automatically cleared
"In the context of the C64, Why is it a good idea to save the value in a variable until you are finished with it?",because the register is automatically cleared once read
"In the context of the C64, Can collisions take place even when the sprites are off screen?",yes
"In the context of the C64, What is the purpose of the sprite to sprite collision register?",to recognize sprite to sprite collisions
"In the context of the C64, Is the sprite to sprite collision register automatically cleared after being read?",yes
"In the context of the C64, What happens to the bits in the register if they are not read?",they remain set
"In the context of the C64, Can a sprite be involved in a collision even if it is off screen?",yes
"In the context of the C64, What is the location of the sprite to sprite collision register in the VIC-II chip control register?",53278 ($D01E in HEX)
"In the context of the C64, Is it necessary to read the sprite to sprite collision register to clear it?",no
"In the context of the C64, What is the first mode of BASIC operation?",DIRECT Mode
"In the context of the C64, What happens when you press the <RETURN> key in DIRECT mode?",BASIC statements are executed
"In the context of the C64, What is the second mode of BASIC operation?",PROGRAM Mode
"In the context of the C64, What is required for BASIC statements in PROGRAM mode?",line numbers in front of the statement
"In the context of the C64, What is the limit on the number of characters on a logical screen line?",80 characters
"In the context of the C64, What happens if you go over the 80 character limit?",you have to put the entire BASIC statement on a new line
"In the context of the C64, What should you do before starting a new program?",type NEW and hit <RETURN>
"In the context of the C64, What is important to remember when starting a new program?",to type NEW and hit <RETURN>
"In the context of the C64, What is the purpose of the PROGRAM mode?",to run programs
"In the context of the C64, What is the main difference between DIRECT and PROGRAM mode?",line numbers are required in PROGRAM mode
"In the context of the C64, what is LSR doing?",LSR Shift right one bit (memory or accumulator)
"In the context of the C64, What is the operation of PLP",PLP Pull processor status from stack
"In the context of the C64, What is the addressing mode of PLP",Implied
"In the context of the C64, What is the assembly language form of PLP",Assembly Language Form
"In the context of the C64, What is the OP CODE of PLP",PLP
"In the context of the C64, What is the number of bytes of PLP",1
"In the context of the C64, What is the number of cycles of PLP",4
"In the context of the C64, What is the purpose of PLP",Pull processor status from stack
"In the context of the C64, What is the status pulled by PLP",processor status
"In the context of the C64, What is the stack used for in PLP",From Stack
"In the context of the C64, What is the operation of PLA",PLA
"In the context of the C64, What is the purpose of the CHKOUT routine?",Open a channel for output
"In the context of the C64, What is the call address of the CHKOUT routine?",$FFC9 (hex) 65481 (decimal)
"In the context of the C64, What communication registers are affected by the CHKOUT routine?",X
"In the context of the C64, What is the preparatory routine for the CHKOUT routine?",(OPEN)
"In the context of the C64, What are the possible error returns for the CHKOUT routine?","0,3,5,7 (See READST)"
"In the context of the C64, What is the minimum stack requirement for the CHKOUT routine?",4+
"In the context of the C64, What registers are affected by the CHKOUT routine?","A, X"
"In the context of the C64, What is the purpose of calling the CHKOUT routine before sending data to an output device?",To open a channel for output
"In the context of the C64, What happens if the device intended to be opened is not an output device?",An error will occur and the routine will be aborted
"In the context of the C64, What is the purpose of the LISTEN address specified by the OPEN routine?",To automatically send the LISTEN address to the device on the serial bus
"In the context of the C64, What is the main function of the OPERATING SYSTEM?",organizing all the memory in your machine for various tasks
"In the context of the C64, What happens when you turn on your Commodore 64?",the OPERATING SYSTEM takes control of your machine
"In the context of the C64, What does the OPERATING SYSTEM say after it finishes its housework?",READY
"In the context of the C64, What can you do with the contents of the Y Index Register?",copy the contents of the Y register into a memory location
"In the context of the C64, What is the purpose of the instructions for the Y Index Register?","There are instructions for nearly all of the transformations you can make to the accumulator, and the X register"
"In the context of the C64, What can you do with the Y Index Register and the X register?",There are instructions for nearly all of the transformations you can make
"In the context of the C64, What is the purpose of the light pen input?",The light pen input latches the current screen position into a pair of registers.
"In the context of the C64, What are the two registers that store the screen position?",The two registers are LPX and LPY.
"In the context of the C64, How many bits does the X position register contain?",The X position register contains 9 bits.
"In the context of the C64, What is the resolution of the X position?",The resolution of the X position is 2 horizontal dots.
"In the context of the C64, What is the purpose of the 8 MSB of the X position?",The 8 MSB of the X position define the X position at the time of transition.
"In the context of the C64, What is the purpose of the Y position register?",The Y position register latches in its register 20 ($14).
"In the context of the C64, What is the resolution of the Y position?",The resolution of the Y position is single raster resolution within the visible display.
"In the context of the C64, How many times can the light pen latch be triggered in a frame?",The light pen latch can only be triggered once per frame.
"In the context of the C64, Why is it important to take several samples before turning the pen to the screen?",It is important to take several samples because subsequent triggers within the same frame will have no effect.
"In the context of the C64, What is the minimum number of samples required before turning the pen to the screen?",The minimum number of samples required is 3 or more.
"In the context of the C64, Can cassette tapes store a large amount of data?","Yes, the longer the tape, the more information it can store."
"In the context of the C64, What is the limitation of cassette tapes?","Tapes are limited in time, the more data on the tape, the longer the time it takes to find the information."
"In the context of the C64, What is the common practice when working with tape storage?","Reading the entire cassette data file into RAM, then processing it, and then re-writing all the data on the tape."
"In the context of the C64, Why is it necessary to minimize the time factor when working with tape storage?","Because the more data on the tape, the longer the time it takes to find the information."
"In the context of the C64, What is the advantage of using floppy disks over cassette tapes?","Floppy disks can read data at any position on the disk, without needing to read through all the other data."
"In the context of the C64, Why are floppy disks used for business applications?",Because they can write data over old data without disturbing the rest of the file.
"In the context of the C64, What is the difference between the PRINT and PRINT# statements?","The PRINT statement formats data for the screen, while the PRINT# statement formats data for cassette tapes."
"In the context of the C64, Why is formatting important when working with cassette tapes?","Because the formatting must be done with the INPUT# statement in mind, and the wrong formatting can waste space on the tape."
"In the context of the C64, What happens when the INPUT# statement tries to read strings without separators?","The statement will discover no data for the variables, and the first variable will contain all the variables, plus the spaces between them."
"In the context of the C64, What is the problem with using commas as separators in cassette tapes?","Commas are not recognized as separators on the tape, and the data items are not separated."
"In the context of the C64, Why is it important to use a proper separator in cassette tapes?","Because a proper separator is necessary to separate the data items, and without it, the data items are not separated."
"In the context of the C64, What is the purpose of the RETURN code in cassette tapes?","The RETURN code is used to mark the end of a line, and it is automatically put at the end of a PRINT or PRINT# statement."
"In the context of the C64, Why is it important to use a proper tape file format?",Because a proper tape file format is necessary to ensure that the data is stored correctly and can be read correctly.
"In the context of the C64, What is the difference between the GET# and INPUT# statements?","The GET# statement reads data from the tape one character at a time, while the INPUT# statement reads data from the tape as a string."
"In the context of the C64, Why is it important to use the CHR$(0) code when reading data from cassette tapes?","Because the CHR$(0) code is received as an empty string, and using it helps to avoid error messages."
"In the context of the C64, What is the purpose of the line GET# 1, A$: A= ASC(A$) in programs?","The line is used to examine tape data, but it can cause error messages if the tape data is empty."
"In the context of the C64, Why is it important to modify the line GET# 1, A$: A= ASC(A$) to GET#1, A$: A=ASC(A$+CHR$(0))?",Because the modification helps to avoid error messages by adding the CHR$(0) code to the end of the string.
"In the context of the C64, Are zero-page memory locations used locally?","Yes, they are used locally and are only given as a guide to understand the associated routines."
"In the context of the C64, What is the purpose of the zero-page locations?",They are used to understand the associated routines.
"In the context of the C64, Can the zero-page locations be used directly by the BASIC or KERNAL level programmer?","No, they cannot be used directly by the BASIC or KERNAL level programmer to do RS-232 type things."
"In the context of the C64, What are the zero-page locations used for?",They are used locally and are only given as a guide to understand the associated routines.
"In the context of the C64, Are the zero-page locations used for RS-232 type things?","No, the system RS-232 routines must be used."
"In the context of the C64, What is the significance of the zero-page locations?",They are used locally and are only given as a guide to understand the associated routines.
"In the context of the C64, Can the zero-page locations be used to do RS-232 type things?","No, the system RS-232 routines must be used."
"In the context of the C64, What is the purpose of the $00A7 location?",It is used as Receiver input bit temp storage.
"In the context of the C64, What is the purpose of the $00B6 location?",It is used as Transmitter byte buffer/disassembly location.
"In the context of the C64, What is the purpose of the $00AA location?",It is used as Receiver byte buffer/assembly location.
"In the context of the C64, POKE 55296,2",To change the color of a character located at the upper left-hand corner of the screen to red.
"In the context of the C64, Change color of character",To change the color of a character located at the upper left-hand corner of the screen to red.
"In the context of the C64, What is the value to change a character's color to red",2
"In the context of the C64, What is the value to change a character's color to black",0
"In the context of the C64, What is the value to change a character's color to purple",4
"In the context of the C64, What is the value to change a character's color to orange",8
"In the context of the C64, What is the value to change a character's color to gray",12
"In the context of the C64, What is the value to change a character's color to light green",13
"In the context of the C64, What is the value to change a character's color to light blue",14
"In the context of the C64, What is the value to change a character's color to brown",9
"In the context of the C64, What is the value to change a character's color to yellow",7
"In the context of the C64, Multi-color mode provides how many colors within each character?",up to four colors
"In the context of the C64, What is the bit in register 22 that selects multi-color mode?",MCM bit
"In the context of the C64, What happens when the MSB of the color nybble is a '0' in multi-color mode?",the character will be displayed as described in standard character mode
"In the context of the C64, What happens when the MSB of the color nybble is a '1' in multi-color mode?",the character bits are interpreted in the multi-color mode
"In the context of the C64, What are the two modes that can be inter-mixed?",standard character mode and multi-color mode
"In the context of the C64, What is the maximum number of colors available in standard character mode?",8 colors
"In the context of the C64, What is the size of each dot in multi-color mode compared to standard mode?",twice the horizontal size
"In the context of the C64, What is the maximum number of colors that can be displayed in each character region in multi-color mode?",4 different colors
"In the context of the C64, What are the two types of colors that can be specified in multi-color mode?",foreground and background
"In the context of the C64, What is the purpose of the 3 LSB of the color nybble in multi-color mode?",to specify the color
"In the context of the C64, What is the size of the character matrix in multi-color mode?",4*8 matrix
"In the context of the C64, Screen blanking is achieved by setting which register bit to 0?",DEN bit in register 17
"In the context of the C64, What happens to the screen when it is blanked?",The entire screen will be filled with the exterior color
"In the context of the C64, What is the purpose of blanking the screen?",To permit full processor utilization of the system bus
"In the context of the C64, What type of memory accesses are required when the screen is blanked?",Transparent (Phase 1) memory accesses
"In the context of the C64, What happens to sprite data when the screen is blanked?",Sprite data will be accessed if the sprites are not also disabled
"In the context of the C64, What is the default state of the DEN bit?","The DEN bit must be set to 1"" for normal video display"""
"In the context of the C64, What happens to the system bus when the screen is blanked?",The system bus is utilized fully
"In the context of the C64, What is the effect of setting the DEN bit to 0?",The screen is blanked
"In the context of the C64, What is the purpose of setting the DEN bit to 1?",For normal video display
"In the context of the C64, What happens to the exterior color when the screen is blanked?",The exterior color is displayed on the entire screen
"In the context of the C64, EOR operation",The EOR operation is used to perform an Exclusive-OR operation between the accumulator and the memory location.
"In the context of the C64, EOR instruction",The EOR instruction is used to perform an Exclusive-OR operation between the accumulator and the memory location.
"In the context of the C64, Assembly language form",The assembly language form of the EOR instruction is EOR #Oper.
"In the context of the C64, OP CODE",The OP CODE of the EOR instruction is 49.
"In the context of the C64, Number of bytes",The number of bytes required to execute the EOR instruction is 2.
"In the context of the C64, Number of cycles",The number of cycles required to execute the EOR instruction is 2.
"In the context of the C64, Addressing mode",The addressing mode of the EOR instruction is Immediate.
"In the context of the C64, Assembly language form of EOR",The assembly language form of the EOR instruction is EOR #Oper.
"In the context of the C64, Number of cycles for EOR",The number of cycles required to execute the EOR instruction is 2.
"In the context of the C64, What is the operation of BPL branch instruction?",Branch on result plus
"In the context of the C64, What is the addressing mode of BPL instruction?",Relative
"In the context of the C64, What is the assembly language form of BPL instruction?",BPL Oper
"In the context of the C64, What is the OP CODE of BPL instruction?",10
"In the context of the C64, How many bytes does the BPL instruction occupy?",2
"In the context of the C64, How many cycles does the BPL instruction take?",2*
"In the context of the C64, What is the condition for adding 1 to the branch count?",branch occurs to same page
"In the context of the C64, What is the condition for adding 2 to the branch count?",branch occurs to different page
"In the context of the C64, What is the significance of the asterisk (*) in the BPL instruction?",Add 1 or 2 to the branch count
"In the context of the C64, What is the effect of the BPL instruction on the program flow?",Branch to a new location
"In the context of the C64, Multi-color bit map mode allows you to display how many different colors in each 8 by 8 section of bit map?",up to four
"In the context of the C64, Multi-color bit map mode uses how much memory for the bit map?",an 8K section
"In the context of the C64, What are the three ways to select colors for multi-color bit map mode?","(1) the background color register 0, (2) the video matrix, and (3) color memory"
"In the context of the C64, What is the purpose of setting bit 5 of 53265 and bit 4 at location 53270 to a 1?",to turn ON multi-color bit mapped mode
"In the context of the C64, What is the purpose of setting bit 5 of 53265 and bit 4 at location 53270 to a 0?",to turn OFF multi-color bit mapped mode
"In the context of the C64, What is the correspondence between the 8K section of memory and the display?",one to one
"In the context of the C64, How wide are the horizontal dots in multi-color bit mapped mode?",two bits
"In the context of the C64, What is the maximum number of colors that can be displayed in each 2 bits?",4
"In the context of the C64, What is the purpose of the POKE 53265,PEEK(53265)OR 32 command?",to turn ON multi-color bit mapped mode
"In the context of the C64, What is the purpose of the POKE 53265,PEEK(53265)AND 223 command?",to turn OFF multi-color bit mapped mode
"In the context of the C64, FC LO and FC HI registers form an 11-bit number which linearly controls the Cutoff Frequency of the programmable Filter.",The approximate Cutoff Frequency ranges from 30 Hz to 12 KHz.
"In the context of the C64, Resonance is a peaking effect which emphasizes frequency components at the Cutoff Frequency of the Filter.",causing a sharper sound.
"In the context of the C64, Bits 4-7 of RES/FILT register control the resonance of the filter.",There are 16 resonance settings ranging linearly from no resonance (0) to maximum resonance (15 or $F).
"In the context of the C64, Bits 0-3 of RES/FILT register determine which signals will be routed through the Filter.","FILT 1 (Bit 0), FILT 2 (Bit 1), FILT 3 (Bit 2), and FILTEX (Bit 3) control the routing of signals."
"In the context of the C64, Voice 1 will be processed through the Filter when FILT 1 is set to a one.",the harmonic content of Voice 1 will be altered according to the selected Filter parameters.
"In the context of the C64, External audio input (pin 26) will be processed through the Filter when FILTEX is set to a one.",the harmonic content of External audio input will be altered according to the selected Filter parameters.
"In the context of the C64, FC LO and FC HI registers are used to form an 11-bit number.",which linearly controls the Cutoff Frequency of the programmable Filter.
"In the context of the C64, Resonance settings range from no resonance to maximum resonance.",There are 16 resonance settings ranging linearly from no resonance (0) to maximum resonance (15 or $F).
"In the context of the C64, Bits 4-7 of RES/FILT register control the resonance of the filter.",There are 16 resonance settings ranging linearly from no resonance (0) to maximum resonance (15 or $F).
"In the context of the C64, FC LO and FC HI registers are used to form an 11-bit number which linearly controls the Cutoff Frequency of the programmable Filter.",The approximate Cutoff Frequency ranges from 30 Hz to 12 KHz.
"In the context of the C64, Is the R/W input used to determine the direction of data transfer?","The read/write input, R/W, is used to determine the direction of data transfer on the data bus, in conjunction with /CS."
"In the context of the C64, What happens when R/W is high?",data is transferred from the selected register to the data bus output.
"In the context of the C64, What happens when R/W is low?",data presented on the data bus pins is loaded into the selected register.
"In the context of the C64, What is the purpose of the R/W input?","The read/write input, R/W, is used to determine the direction of data transfer on the data bus, in conjunction with /CS."
"In the context of the C64, Is data transferred from the register to the data bus when R/W is high?",Yes
"In the context of the C64, Is data loaded into the register from the data bus when R/W is low?",Yes
"In the context of the C64, What happens to the data on the data bus when R/W is high?",data is transferred from the selected register to the data bus output.
"In the context of the C64, What happens to the data on the data bus when R/W is low?",data presented on the data bus pins is loaded into the selected register.
"In the context of the C64, Is the R/W input used in conjunction with /CS?",Yes
"In the context of the C64, Is the R/W input used to determine the direction of data transfer?",Yes
"In the context of the C64, what is the purpose of Bit 4 in the MODE/VOL register?",Low-Pass output selection
"In the context of the C64, What happens to frequency components below the Filter Cutoff Frequency when Bit 4 is set to a one?",they are passed unaltered
"In the context of the C64, What is the rate of attenuation for frequency components above the Cutoff when Bit 4 is set to a one?",12 dB/Octave
"In the context of the C64, What type of sounds does the Low-Pass mode produce?",fullbodied sounds
"In the context of the C64, What is the purpose of Bit 5 in the MODE/VOL register?",Bandpass output selection
"In the context of the C64, What happens to frequency components above and below the Cutoff when Bit 5 is set to a one?",they are attenuated at a rate of 6 dB/Octave
"In the context of the C64, What type of sounds does the Bandpass mode produce?","thin, open sounds"
"In the context of the C64, What is the purpose of Bit 6 in the MODE/VOL register?",High-Pass output selection
"In the context of the C64, What happens to frequency components below the Cutoff when Bit 6 is set to a one?",they are attenuated at a rate of 12 dB/Octave
"In the context of the C64, What type of sounds does the High-Pass mode produce?","tinny, buzzy sounds"
"In the context of the C64, What is the purpose of Bit 7 in the MODE/VOL register?",disconnection of Voice 3 from the direct audio path
"In the context of the C64, What happens when Bit 7 is set to a one?",the output of Voice 3 is disconnected from the direct audio path
"In the context of the C64, What is the purpose of the Filter in the SID?",to generate complex tone colors via subtractive synthesis
"In the context of the C64, What is the most important element in the SID?",the Filter
"In the context of the C64, What is the purpose of varying the Cutoff Frequency in real-time?",to achieve the best results
"In the context of the C64, What are the 16 overall Volume levels for the final composite audio output?",0 to 15 or $F in 16 linear steps
"In the context of the C64, What is the purpose of the Volume control?",to balance levels in multi-chip systems or create dynamic volume effects
"In the context of the C64, What must be selected in order for the SID to produce any sound?",a Volume level other than zero
"In the context of the C64, What is the purpose of the Tremolo effect?",to create dynamic volume effects
"In the context of the C64, What is the range of the overall Volume levels?",0 to maximum volume
"In the context of the C64, What is the purpose of the Filter output modes?",to produce complex tone colors
"In the context of the C64, What is the purpose of the Filter Cutoff Frequency?",to determine the frequency components passed or attenuated
"In the context of the C64, What is the purpose of the Filter modes?",to produce different tone colors
"In the context of the C64, What is the purpose of the Filter output modes being additive?",to allow multiple Filter modes to be selected simultaneously
"In the context of the C64, what is bit mapping used for",It is used to create highly detailed pictures.
"In the context of the C64, what is the resolution of standard bit mapped mode",320-dot by 200-dot resolution
"In the context of the C64, what is the resolution of multi-color bit mapped mode",160-dot by 200-dot resolution
"In the context of the C64, what is the difference between standard and multi-color bit mapping","Standard has greater resolution, but fewer color selections, while multi-color trades horizontal resolution for a greater number of colors"
"In the context of the C64, how do you select bit map mode",By setting bit 5 of the VIC-II control register to a 1 at location 53265
"In the context of the C64, how do you turn off bit map mode",By setting bit 5 of the VIC-II control register to 0 at location 53265
"In the context of the C64, what is the purpose of the POKE command in bit map mode",To set the bit pattern of a character stored in RAM
"In the context of the C64, what is the basis of bit-mapping","The entire screen is filled with programmable characters, and you make your changes directly into the memory that the programmable characters get their patterns from"
"In the context of the C64, what is the difference between color memory and screen memory in bit map mode","Colors are taken from screen memory, not color memory"
"In the context of the C64, what is the formula to calculate the correct bit in the character memory to set to a 1",X and Y to stand for the horizontal and vertical positions of a dot
"In the context of the C64, Can a sprite be expanded in both the vertical and horizontal directions?","The VIC-II chip has the ability to expand a sprite in the vertical direction, the horizontal direction, or both at once."
"In the context of the C64, Can a sprite be expanded in the vertical direction?","The VIC-II chip has the ability to expand a sprite in the vertical direction, the horizontal direction, or both at once."
"In the context of the C64, What happens to the resolution when a sprite is expanded?",Resolution doesn't actually increase... the sprite just gets bigger.
"In the context of the C64, Can a sprite be expanded in the horizontal direction?","The VIC-II chip has the ability to expand a sprite in the vertical direction, the horizontal direction, or both at once."
"In the context of the C64, What happens to each dot in a sprite when it is expanded?",each dot in the sprite is twice as wide or twice as tall.
"In the context of the C64, Can a sprite be expanded in both the vertical and horizontal directions at once?","The VIC-II chip has the ability to expand a sprite in the vertical direction, the horizontal direction, or both at once."
"In the context of the C64, What is the effect of expanding a sprite on its size?",the sprite just gets bigger.
"In the context of the C64, Can a sprite be expanded in the vertical direction only?","The VIC-II chip has the ability to expand a sprite in the vertical direction, the horizontal direction, or both at once."
"In the context of the C64, What happens to the size of a sprite when it is expanded?",the sprite just gets bigger.
"In the context of the C64, Can a sprite be expanded in the horizontal direction only?","The VIC-II chip has the ability to expand a sprite in the vertical direction, the horizontal direction, or both at once."
"In the context of the C64, Can a BRK command be masked by setting I?",No
"In the context of the C64, What is the number of bytes used by the BRK command?",1
"In the context of the C64, What is the number of cycles used by the BRK command?",7
"In the context of the C64, What is the assembly language form of the BRK command?",BRK
"In the context of the C64, What is the operation of the BRK command?",Forced Interrupt
"In the context of the C64, What is the effect of setting I on a BRK command?",Cannot be masked
"In the context of the C64, What is the opcode of the BRK command?",00
"In the context of the C64, What is the addressing mode of the BRK command?",Implied
"In the context of the C64, What is the purpose of the BRK command?",Forced Interrupt PC + 2 to S P to S
"In the context of the C64, What is the number of cycles used by the BRK command in hexadecimal?",7
"In the context of the C64, INC Operates on what type of memory?",Increment memory by one
"In the context of the C64, What is the operation of INC?",M + 1 -> M
"In the context of the C64, What is the purpose of INC?",Increment memory by one
"In the context of the C64, What is the assembly language form of INC?",INC Oper
"In the context of the C64, What is the OP CODE of INC in Zero Page mode?",E6
"In the context of the C64, What is the number of bytes required for INC in Zero Page mode?",2
"In the context of the C64, What is the number of cycles required for INC in Zero Page mode?",5
"In the context of the C64, What is the assembly language form of INC in Absolute mode?",INC Oper
"In the context of the C64, What is the OP CODE of INC in Absolute mode?",EE
"In the context of the C64, What is the number of bytes required for INC in Absolute mode?",3
"In the context of the C64, What is the number of cycles required for INC in Absolute mode?",6
"In the context of the C64, Each sprite data block is stored in how many consecutive bytes of memory?",63
"In the context of the C64, Where are the sprite pointers stored in memory?",At the end of the VIDEO MATRIX
"In the context of the C64, What is the range of video matrix locations used for sprite pointers?",$3F8 to $3FF
"In the context of the C64, What is the total address field size in bits?",14
"In the context of the C64, What are the bits from the video matrix used for?",sprite pointer bits
"In the context of the C64, What are the bits from the sprite byte counter used for?",addressing 63 bytes
"In the context of the C64, What is the purpose of the sprite pointer bits?",defining the 14-bit address field
"In the context of the C64, What is the purpose of the internally generated sprite counter bits?",addressing 63 bytes
"In the context of the C64, When are the sprite pointers read from the video matrix?",at the end of every raster line
"In the context of the C64, What happens when the Y position register matches the current raster line count?",actual fetches of sprite data begin
"In the context of the C64, What is displayed on each raster line?",three bytes of sprite data
"In the context of the C64, Character display mode fetches what from the VIDEO MATRIX area of memory?",Character pointers
"In the context of the C64, What is the purpose of the 4-bit COLOR NYBBLE associated with each video matrix location?",Defines one of sixteen colors for each character
"In the context of the C64, What is the width of the VIDEO MATRIX memory?",12 bits
"In the context of the C64, What is the range of the 8-bit character pointer?",0-255
"In the context of the C64, What is the purpose of the 3-bit raster counter (RC2-RC0) in the character base address?",Selects one of the eight character bytes
"In the context of the C64, What is the purpose of the 4-bit color nybble in the character display mode?",Defines the foreground color
"In the context of the C64, What is the purpose of the 8-bit character pointer in the character display mode?",Selects a particular character
"In the context of the C64, What is the range of the 3-bit raster counter (RC2-RC0) in the character base address?",0-7
"In the context of the C64, What is the purpose of the 4 MSB of the video matrix address?",Defines the location of the video matrix within memory
"In the context of the C64, What is the purpose of the internal counter (VC9-VC0) in the video matrix address?",Steps through the 1000 character locations
"In the context of the C64, What is the purpose of the 14 address outputs of the 6566/6567?",Provides additional system memory decodes
"In the context of the C64, What is the purpose of the 8-bit character pointer in the character display mode?",Selects a particular character
"In the context of the C64, What is the range of the 4-bit color nybble in the character display mode?",0-15
"In the context of the C64, What is the purpose of the 3 most significant bits (MSB) of the character base address?",Defines the location of the character base
"In the context of the C64, What is the purpose of the 8*8 dot matrix in the character base?",Stores character definitions
"In the context of the C64, What is the purpose of the 8 sequential bytes from the character base in the standard character mode?",Displays directly on the 8 lines in each character region
"In the context of the C64, What is the purpose of the background #0 color in the standard character mode?",Displays when a '0' bit is present
"In the context of the C64, What is the purpose of the color selected by the 4-bit color nybble in the standard character mode?",Displays when a '1' bit is present
"In the context of the C64, What is the purpose of the 4-bit color nybble in the standard character mode?",Defines the foreground color
"In the context of the C64, What is the purpose of the 4-bit color nybble in the character display mode?",Defines the foreground color
"In the context of the C64, What is the purpose of the 8-bit character pointer in the character display mode?",Selects a particular character
"In the context of the C64, What is the purpose of the 3-bit raster counter (RC2-RC0) in the character base address?",Selects one of the eight character bytes
"In the context of the C64, What is the purpose of the 4 MSB of the character base address?",Defines the location of the character base
"In the context of the C64, What is the purpose of the 4-bit color nybble in the standard character mode?",Defines the foreground color
"In the context of the C64, What is the purpose of the 8-bit character pointer in the character display mode?",Selects a particular character
"In the context of the C64, What is the purpose of the 4-bit color nybble in the character display mode?",Defines the foreground color
"In the context of the C64, What is the purpose of the 4-bit color nybble in the standard character mode?",Defines the foreground color
"In the context of the C64, Is there a pseudo 6551 control register in the RS-232 storage?","Yes, it is located at $0293-M51CTR-Pseudo 6551 control register."
"In the context of the C64, What is the purpose of the two bytes following the control and command registers in the file name field?",They contain the baud rate for the start of the bit test during the interface activity.
"In the context of the C64, What is the function of the RS-232 status register?",It is used to calculate baud rate.
"In the context of the C64, What is the purpose of the number of bits to be sent/received?",It is used to calculate baud rate.
"In the context of the C64, What is the purpose of the two bytes that are equal to the time of one bit cell?",They are used to calculate baud rate.
"In the context of the C64, What is the purpose of the byte index to the end of the receiver FIFO buffer?",It is used to calculate baud rate.
"In the context of the C64, What is the purpose of the byte index to the start of the receiver FIFO buffer?",It is used to calculate baud rate.
"In the context of the C64, What is the purpose of the byte index to the start of the transmitter FIFO buffer?",It is used to calculate baud rate.
"In the context of the C64, What is the purpose of the byte index to the end of the transmitter FIFO buffer?",It is used to calculate baud rate.
"In the context of the C64, What is the function of the CIA #2 ICR?",It holds current active interrupts in the CIA #2 ICR.
"In the context of the C64, Is the VIC chip register map a table of registers?",Yes
"In the context of the C64, What is the starting address of the VIC chip register map?",53248 ($D000)
"In the context of the C64, What is the purpose of the SPRITE 0 X register?",Defines the X coordinate of the first sprite
"In the context of the C64, What is the purpose of the SPRITE 0 Y register?",Defines the Y coordinate of the first sprite
"In the context of the C64, What is the purpose of the SPRITE 1 X register?",Defines the X coordinate of the second sprite
"In the context of the C64, What is the purpose of the SPRITE 1 Y register?",Defines the Y coordinate of the second sprite
"In the context of the C64, What is the purpose of the SPRITE 2 X register?",Defines the X coordinate of the third sprite
"In the context of the C64, What is the purpose of the SPRITE 2 Y register?",Defines the Y coordinate of the third sprite
"In the context of the C64, What is the purpose of the SPRITE 3 X register?",Defines the X coordinate of the fourth sprite
"In the context of the C64, What is the purpose of the SPRITE 3 Y register?",Defines the Y coordinate of the fourth sprite
"In the context of the C64, What is the purpose of the SPRITE 4 X register?",Defines the X coordinate of the fifth sprite
"In the context of the C64, What is the purpose of the SPRITE 4 Y register?",Defines the Y coordinate of the fifth sprite
"In the context of the C64, What is the purpose of the SPRITE 5 X register?",Defines the X coordinate of the sixth sprite
"In the context of the C64, What is the purpose of the SPRITE 5 Y register?",Defines the Y coordinate of the sixth sprite
"In the context of the C64, What is the purpose of the SPRITE 6 X register?",Defines the X coordinate of the seventh sprite
"In the context of the C64, What is the purpose of the SPRITE 6 Y register?",Defines the Y coordinate of the seventh sprite
"In the context of the C64, What is the purpose of the SPRITE 7 X register?",Defines the X coordinate of the eighth sprite
"In the context of the C64, What is the purpose of the SPRITE 7 Y register?",Defines the Y coordinate of the eighth sprite
"In the context of the C64, What is the purpose of the MSB of X register?",Defines the most significant bit of the X coordinate
"In the context of the C64, What is the purpose of the Y SCROLL MODE register?",Controls the scrolling of the sprites
"In the context of the C64, What is the purpose of the RASTER register?",Controls the raster beam
"In the context of the C64, What is the purpose of the LIGHT PEN X register?",Defines the X coordinate of the light pen
"In the context of the C64, What is the purpose of the LIGHT PEN Y register?",Defines the Y coordinate of the light pen
"In the context of the C64, What is the purpose of the SPRITE ENABLE register?",Enables or disables the sprites
"In the context of the C64, What is the purpose of the X SCROLL MODE register?",Controls the scrolling of the sprites
"In the context of the C64, What is the purpose of the SPRITE EXPAND Y register?",Expands the Y coordinate of the sprites
"In the context of the C64, What is the purpose of the SCREEN and CHARACTER MEMORY BASE register?",Defines the base address of the screen and character memory
"In the context of the C64, What is the purpose of the INTERRUPT REQUEST register?",Requests an interrupt
"In the context of the C64, What is the purpose of the IRQ MASKS register?",Masks the interrupt requests
"In the context of the C64, What is the purpose of the BACKGROUND SPRITE register?",Defines the background sprite
"In the context of the C64, What is the purpose of the MULTICOLOR SPRITE SELECT register?",Selects the color of the sprite
"In the context of the C64, What is the purpose of the SPRITE EXPAND X register?",Expands the X coordinate of the sprites
"In the context of the C64, What is the purpose of the SPRITE COLLISION register?",Detects collisions between sprites
"In the context of the C64, What is the purpose of the BORDER COLOR register?",Defines the color of the border
"In the context of the C64, What is the purpose of the BACKGROUND COLOR register?",Defines the color of the background
"In the context of the C64, What is the purpose of the SPRITE COLOR register?",Defines the color of the sprite
"In the context of the C64, what is the serial bus designed for",a daisy chain arrangement to let the Commodore 64 communicate with devices
"In the context of the C64, What is the advantage of the serial bus",more than one device can be connected to the port
"In the context of the C64, How many devices can be connected to the serial bus at one time",up to 5 devices
"In the context of the C64, What are the three types of operation over a serial bus","CONTROL, TALK, and LISTEN"
"In the context of the C64, What is a CONTROLLER device",a device which controls operation of the serial bus
"In the context of the C64, What is a TALKER device",a device that transmits data onto the bus
"In the context of the C64, What is a LISTENER device",a device that receives data from the bus
"In the context of the C64, Who is the controller of the serial bus",the Commodore 64
"In the context of the C64, What are the three roles the Commodore 64 plays on the serial bus","controller, TALKER, and LISTENER"
"In the context of the C64, What is the purpose of a bus ADDRESS",to allow the Commodore 64 to route data to its intended destination
"In the context of the C64, What is the range of addresses on the serial bus",from 4 to 31
"In the context of the C64, What can the Commodore 64 COMMAND a device to do",to TALK or LISTEN
"In the context of the C64, What happens if more than one device tries to TALK on the bus at the same time",the system will crash in confusion
"In the context of the C64, How many devices can LISTEN to one TALKER at the same time",any number
"In the context of the C64, What is the purpose of the SECONDARY ADDRESS",to let the Commodore 64 transmit setup information to a device
"In the context of the C64, What is an example of using the SECONDARY ADDRESS","OPEN 1,4,7"
"In the context of the C64, What are the 6 lines used in serial bus operations",input and 3 output
"In the context of the C64, What are the 3 input lines used for","data, control, and timing signals into the Commodore 64"
"In the context of the C64, What are the 3 output lines used for","data, control, and timing signals from the Commodore 64 to external devices"
"In the context of the C64, What is the purpose of the serial bus",to let the Commodore 64 communicate with devices
"In the context of the C64, Can the priority of each sprite be individually controlled?","Yes, the priority of each sprite may be individually controlled with respect to the other displayed information from character or bit map modes."
"In the context of the C64, What determines the priority of each sprite?",The priority of each sprite is set by the corresponding bit (MnDP) of register 27 ($1B) as follows:
"In the context of the C64, What happens when sprite data bits of '0' are used?","Sprite data bits of '0' are transparent, always permitting any other information to be displayed."
"In the context of the C64, What is the highest priority sprite?",Sprite 0 has the highest priority.
"In the context of the C64, What happens when two sprites have coincident data?","When sprite data (except transparent data) of two sprites are coincident, the data from the lower number sprite will be displayed."
"In the context of the C64, What is the lowest priority sprite?",Sprite 7 has the lowest priority.
"In the context of the C64, What is prioritized first in sprite vs. sprite data?",Sprite vs. sprite data is prioritized before priority resolution with character or bit map data.
"In the context of the C64, What happens when sprite data is coincident with character or bit map data?",Sprite vs. sprite data is prioritized before priority resolution with character or bit map data.
"In the context of the C64, Can transparent sprite data be displayed?","Yes, transparent sprite data will be displayed."
"In the context of the C64, What is the purpose of the MnDP register?",The MnDP register is used to set the priority of each sprite.
"In the context of the C64, What is the range of sprite numbers?","The sprites have a fixed priority with respect to each other, with sprite 0 having the highest priority and sprite 7 the lowest."
"In the context of the C64, what is the operation of the BNE instruction?",Branch on result not zero
"In the context of the C64, what is the condition for the BNE instruction to execute?",result not zero
"In the context of the C64, what is the abbreviation for the BNE instruction?",BNE
"In the context of the C64, what is the purpose of the BNE instruction?",Branch on result not zero
"In the context of the C64, what is the condition for the BNE instruction to execute?",result not zero
"In the context of the C64, what is the operation of the BNE instruction in assembly language?",BMI Oper
"In the context of the C64, what is the opcode for the BNE instruction?",D0
"In the context of the C64, what is the number of bytes required for the BNE instruction?",2
"In the context of the C64, what is the number of cycles required for the BNE instruction?",2
"In the context of the C64, what is the condition for the BNE instruction to execute?",result not zero
"In the context of the C64, DEY operation is used to decrement what index?",Y
"In the context of the C64, DEY operation is used to decrement the index by how many?",1
"In the context of the C64, What is the opcode for DEY operation?",88
"In the context of the C64, How many bytes does DEY operation use?",1
"In the context of the C64, How many cycles does DEY operation take?",2
"In the context of the C64, What is the addressing mode for DEY operation?",Implied
"In the context of the C64, What is the assembly language form for DEY operation?",DEY
"In the context of the C64, What is the operation performed by DEY operation?",Decrement
"In the context of the C64, What is the result of DEY operation?",Y - 1
"In the context of the C64, Is DEY operation used to increment or decrement?",Decrement
"In the context of the C64, What is the purpose of DEY operation?",To decrement the index Y by one
"In the context of the C64, Extended color mode is turned OFF by setting what bit of the VIC-II register?",bit 6
"In the context of the C64, What is the location of the VIC-II register that needs to be modified to turn off extended color mode?",53265
"In the context of the C64, What is the hexadecimal value that needs to be written to the VIC-II register to turn off extended color mode?",191
"In the context of the C64, What is the condition to turn off extended color mode?",setting bit 6 of the VIC-II register to a 0
"In the context of the C64, What is the statement that turns off extended color mode?","POKE 53265,PEEK(53265)AND 191"
"In the context of the C64, What is the register that needs to be modified to turn off extended color mode?",VIC-II register
"In the context of the C64, Multi-color mode allows how many different colors in each sprite?",up to 4
"In the context of the C64, What happens to the horizontal resolution in multi-color mode?",it is cut in half
"In the context of the C64, What is the term for a pair of dots in multi-color mode?",a bit pair
"In the context of the C64, What is the total number of dots across the sprite in multi-color mode?",12 pairs
"In the context of the C64, What is the term for the values needed to turn ON each of the four colors?",bit pair values
"In the context of the C64, What is the purpose of the sprite foreground color?",it is a 10
"In the context of the C64, What is the purpose of the character foreground color?",it is a 11
"In the context of the C64, POTY is used for",POTY (Register $1A) is used for tying the clock signal to the POTX pin 23.
"In the context of the C64, Pin 23 is used for",Pin 23 is used for tying the clock signal to POTY.
"In the context of the C64, POTY is tied to",POTY is tied to pin 23.
"In the context of the C64, POTX is same as",POTX is same as POTY for the pot tied to POTY.
"In the context of the C64, POTY is register",POTY is a register $1A.
"In the context of the C64, Pin 23 is tied to",Pin 23 is tied to POTY.
"In the context of the C64, POTY is used for what",POTY is used for tying the clock signal to the POTX pin 23.
"In the context of the C64, POTY is register $1A",POTY is a register $1A.
"In the context of the C64, POTX is tied to",POTX is tied to POTY pin 23.
"In the context of the C64, Can the POTX register read the position of a potentiometer?",This register allows the microprocessor to read the position of the potentiometer tied to POTX (pin 24)
"In the context of the C64, What is the range of values for the POTX register?","values ranging from 0 at minimum resistance, to 255 ($FF) at maximum resistance"
"In the context of the C64, What is the minimum value for the POTX register?",0 at minimum resistance
"In the context of the C64, What is the maximum value for the POTX register?",255 ($FF) at maximum resistance
"In the context of the C64, What is the validity of the POTX register value?",The value is always valid
"In the context of the C64, How often is the POTX register value updated?",updated every 512 (02 clock cycles
"In the context of the C64, What is the clock cycle frequency for POTX register updates?",02 clock cycles
"In the context of the C64, What is the purpose of the POTX register?",allows the microprocessor to read the position of the potentiometer
"In the context of the C64, What is the pin number for the POTX register?",pin 24
"In the context of the C64, What is the unit of measurement for the POTX register?",resistance
"In the context of the C64, How do you switch a sprite into multi-color mode?",To switch a sprite into multi-color mode you must turn ON the VIC-II control register at location 53276 ($D01C).
"In the context of the C64, What is the location of the VIC-II control register?",53276 ($D01C)
"In the context of the C64, What is the POKE command to switch a sprite into multi-color mode?","POKE 53276,PEEK(53276)OR(2^SN)"
"In the context of the C64, What is the POKE command to switch a sprite out of multi-color mode?","POKE 53276,PEEK(53276)AND(255-2^SN)"
"In the context of the C64, What is the condition to switch a sprite into multi-color mode?",To turn ON the VIC-II control register at location 53276 ($D01C)
"In the context of the C64, What is the condition to switch a sprite out of multi-color mode?",To turn OFF the VIC-II control register at location 53276 ($D01C)
"In the context of the C64, What is bit mapping in the context of graphics?",Bit mapping is the method in which each possible dot (pixel) of resolution on the screen is assigned its own bit (location) in memory.
"In the context of the C64, What is the main advantage of using bit mapping?",The main advantage is that it allows for high-resolution displays.
"In the context of the C64, Why is bit mapping not used all the time?",It takes lots of memory to bit map the entire screen.
"In the context of the C64, How much memory is needed to map the whole screen?",8000 bytes of memory are needed to map the whole screen.
"In the context of the C64, What is the resolution of the Commodore 64 screen?",The resolution is 320 pixels by 200 pixels for the whole screen.
"In the context of the C64, Why are high-resolution operations slow in BASIC?","High-resolution operations are slow in BASIC because they are made of many short, simple, repetitive routines."
"In the context of the C64, What is the solution to the slow performance of high-resolution operations in BASIC?","The solution is to either write your programs entirely in machine language, or call machine language, high-resolution sub-routines from your BASIC program using the SYS command from BASIC."
"In the context of the C64, What is the VSP cartridge used for?",The VSP cartridge is used to add high-resolution commands to COMMODORE 64 BASIC.
"In the context of the C64, What is the main difference between writing in BASIC and machine language?",Machine language is faster than BASIC for graphics.
"In the context of the C64, What is the main advantage of using machine language for graphics?",Machine language is faster than BASIC for graphics.
"In the context of the C64, What is the main disadvantage of using machine language for graphics?",Machine language is more difficult to write than BASIC for graphics.
"In the context of the C64, What is the main advantage of using the SYS command?","The main advantage is that it allows you to call machine language, high-resolution sub-routines from your BASIC program."
"In the context of the C64, What is the main disadvantage of using the SYS command?",The main disadvantage is that it requires you to write your programs in machine language.
"In the context of the C64, What is the main advantage of using the VSP cartridge?",The main advantage is that it adds high-resolution commands to COMMODORE 64 BASIC.
"In the context of the C64, What is the main disadvantage of using the VSP cartridge?",The main disadvantage is that it requires additional hardware.
"In the context of the C64, What is the main advantage of using high-resolution graphics?",The main advantage is that it allows for high-resolution displays.
"In the context of the C64, What is the main disadvantage of using high-resolution graphics?",The main disadvantage is that it takes lots of memory to bit map the entire screen.
"In the context of the C64, What is the main advantage of using machine language for graphics?",Machine language is faster than BASIC for graphics.
"In the context of the C64, What is the main disadvantage of using machine language for graphics?",Machine language is more difficult to write than BASIC for graphics.
"In the context of the C64, What is the main advantage of using the SYS command?","The main advantage is that it allows you to call machine language, high-resolution sub-routines from your BASIC program."
"In the context of the C64, What is the main disadvantage of using the SYS command?",The main disadvantage is that it requires you to write your programs in machine language.
"In the context of the C64, What is the instruction to call a subroutine in machine language?",JSR (Jump to Sub-Routine)
"In the context of the C64, What is the address of the machine language subroutine that prints a character to the screen?",$FFD2
"In the context of the C64, What is the purpose of the CBM ASCII code in the accumulator before calling the print subroutine?",To specify the character to be printed
"In the context of the C64, what is DEX doing?",Operation:  X - 1 -> X
"In the context of the C64, DEX: OP CODE",CA
"In the context of the C64, DEX: No. Bytes",1
"In the context of the C64, DEX: No. Cycles",2
"In the context of the C64, DEX: Addressing Mode",Implied
"In the context of the C64, DEX: Assembly Language Form",DEX
"In the context of the C64, DEX: Operation",X - 1 -> X
"In the context of the C64, DEX: Number of Cycles",2
"In the context of the C64, DEX: Number of Bytes",1
"In the context of the C64, DEX: OP CODE",CA
"In the context of the C64, Is the BMI operation used in assembly language?","Yes, it is used in BMI Oper"
"In the context of the C64, What is the OP CODE for the BMI operation?",The OP CODE is 30
"In the context of the C64, What is the number of bytes used by the BMI operation?",The number of bytes is 2
"In the context of the C64, What is the number of cycles used by the BMI operation?",The number of cycles is 2
"In the context of the C64, Is the BMI operation used in relative addressing mode?","Yes, it is used in relative addressing mode"
"In the context of the C64, What is the purpose of adding 1 if the branch occurs to the same page?",To add 1 if branch occurs to same page
"In the context of the C64, What is the purpose of adding 1 if the branch occurs to a different page?",To add 1 if branch occurs to different page
"In the context of the C64, What is the purpose of the BMI operation?",To branch on result minus BMI
"In the context of the C64, Is the BMI operation used in assembly language form?","Yes, it is used in assembly language form"
"In the context of the C64, What is the number of cycles used by the BMI operation when branching to the same page?",The number of cycles is 2*
"In the context of the C64, What is the purpose of the 6566/6567 devices?",multi-purpose color video controller devices for use in both computer video terminals and video game applications
"In the context of the C64, What is the size of the memory that can be accessed by the devices?",up to 16K of memory for display information
"In the context of the C64, What type of bus is used to access the control registers?",a standard 8-bit microprocessor bus (65XX)
"In the context of the C64, How many control registers are present in the devices?",47 control registers
"In the context of the C64, What is the purpose of the microprocessor bus in the devices?",to access the control registers
"In the context of the C64, What are the two types of sprite collision?",Sprite to sprite collision and sprite to display data collision.
"In the context of the C64, What is the purpose of the sprite-DATA COLLISION register?",To detect sprite to display data collisions.
"In the context of the C64, What happens when a collision occurs between two sprites?",The sprite bits (MnM) in the sprite-sprite COLLISION register are set to '1' for both colliding sprites.
"In the context of the C64, What happens when a collision occurs between a sprite and foreground display data?",The sprite-DATA COLLISION register has a 'bit (MnD) for each sprite which is set to '1' when both the sprite and non-background display data are coincident.
"In the context of the C64, Can transparent data generate a collision?","No, coincidence of transparent data will not generate a collision."
"In the context of the C64, Can a sprite-DATA collision occur off-screen?","Yes, a sprite-DATA collision can occur off-screen in the horizontal direction if actual display data has been scrolled to an off-screen position."
"In the context of the C64, What happens when the first bit of either register is set to '1'?",The collision interrupt latches are set.
"In the context of the C64, Do subsequent collisions set the interrupt latch?","No, subsequent collisions will not set the interrupt latch until that collision register has been cleared to all '0s' by a read."
"In the context of the C64, What happens when a collision register is read?",The collision bits are automatically cleared.
"In the context of the C64, Can a sprite collision occur off-screen?","Yes, sprites collisions are detected even if positioned off-screen."
"In the context of the C64, What is the purpose of the scrolling feature?",To allow sprite collisions to be detected even if positioned off-screen.
"In the context of the C64, Can the 0-1 multicolor bit pair be used as background display data?","Yes, the 0-1 multicolor bit pair can be used as background display data without interfering with true sprite collisions."
"In the context of the C64, What is the purpose of the scrolling feature in sprite collisions?",To allow sprite collisions to be detected even if positioned off-screen.
"In the context of the C64, Can a sprite-DATA collision occur off-screen?","Yes, a sprite-DATA collision can occur off-screen in the horizontal direction if actual display data has been scrolled to an off-screen position."
"In the context of the C64, What happens when a collision register is read?",The collision bits are automatically cleared.
"In the context of the C64, Can a sprite collision occur off-screen in the vertical direction?","No, sprite collisions are detected even if positioned off-screen, but not in the vertical direction."
"In the context of the C64, What is the purpose of the sprite-sprite COLLISION register?",To detect sprite to sprite collisions.
"In the context of the C64, What is the purpose of the sprite-DATA COLLISION register?",To detect sprite to display data collisions.
"In the context of the C64, Can a sprite collision occur off-screen in the vertical direction?","No, sprite collisions are detected even if positioned off-screen, but not in the vertical direction."
"In the context of the C64, Can the Commodore 64 connect to the outside world?","Yes, through the user port."
"In the context of the C64, What is the user port used for?","To connect the Commodore 64 to a printer, a Votrax Type and Talk, a MODEM, even another computer."
"In the context of the C64, What chip is the user port directly connected to?",The 6526 CIA chip.
"In the context of the C64, What is the purpose of the CIA chip?",To connect to many other devices.
"In the context of the C64, What is the user port pin description?",A table showing the pin numbers and their descriptions.
"In the context of the C64, What is the purpose of the reset pin?","To do a cold start, resetting the Commodore 64 completely."
"In the context of the C64, What is the purpose of the serial port counter pins?",To count the number of serial port transmissions.
"In the context of the C64, What is the purpose of the handshaking line?",To handshake with an outside device.
"In the context of the C64, What is the purpose of the ATN line?",To connect to the serial bus.
"In the context of the C64, What is the purpose of the 9 VAC phase pin?",To connect to the Commodore 64 transformer.
"In the context of the C64, What is the purpose of the GND pin?",To ground the circuit.
"In the context of the C64, What is the purpose of the DATA DIRECTION REGISTER?",To control whether a line is an input or an output.
"In the context of the C64, What is the purpose of the PORT?",To connect to an outside device.
"In the context of the C64, What is the purpose of the FLAG1 line?",For handshaking and as a general purpose interrupt input.
"In the context of the C64, What is the purpose of the PA2 line?",To control bit 2 of PORT A of the CIA.
"In the context of the C64, What is the purpose of the interrupt register?",To poll the interrupt register under program control.
"In the context of the C64, What is the purpose of the 6526 chip specifications?",To provide more information on the chip's specifications.
"In the context of the C64, What is the purpose of the user port?",To connect the Commodore 64 to the outside world.
"In the context of the C64, What is the purpose of the CIA chip?",To connect to many other devices.
"In the context of the C64, What is the purpose of the user port pin description?",To show the pin numbers and their descriptions.
"In the context of the C64, What is the purpose of the reset pin?","To do a cold start, resetting the Commodore 64 completely."
"In the context of the C64, What is the purpose of the serial port counter pins?",To count the number of serial port transmissions.
"In the context of the C64, What is the purpose of the handshaking line?",To handshake with an outside device.
"In the context of the C64, What is the purpose of the ATN line?",To connect to the serial bus.
"In the context of the C64, What is the purpose of the 9 VAC phase pin?",To connect to the Commodore 64 transformer.
"In the context of the C64, What is the purpose of the GND pin?",To ground the circuit.
"In the context of the C64, What is the purpose of the DATA DIRECTION REGISTER?",To control whether a line is an input or an output.
"In the context of the C64, What is the purpose of the PORT?",To connect to an outside device.
"In the context of the C64, What is the purpose of the FLAG1 line?",For handshaking and as a general purpose interrupt input.
"In the context of the C64, What is the purpose of the PA2 line?",To control bit 2 of PORT A of the CIA.
"In the context of the C64, What is the purpose of the interrupt register?",To poll the interrupt register under program control.
"In the context of the C64, What is the purpose of the 6526 chip specifications?",To provide more information on the chip's specifications.
"In the context of the C64, What is the purpose of the user port?",To connect the Commodore 64 to the outside world.
"In the context of the C64, What is the purpose of the CIA chip?",To connect to many other devices.
"In the context of the C64, What is the purpose of the user port pin description?",To show the pin numbers and their descriptions.
"In the context of the C64, What is the purpose of the reset pin?","To do a cold start, resetting the Commodore 64 completely."
"In the context of the C64, What is the purpose of the serial port counter pins?",To count the number of serial port transmissions.
"In the context of the C64, What is the purpose of the handshaking line?",To handshake with an outside device.
"In the context of the C64, What is the purpose of the ATN line?",To connect to the serial bus.
"In the context of the C64, What is the purpose of the 9 VAC phase pin?",To connect to the Commodore 64 transformer.
"In the context of the C64, What is the purpose of the GND pin?",To ground the circuit.
"In the context of the C64, What is the purpose of the DATA DIRECTION REGISTER?",To control whether a line is an input or an output.
"In the context of the C64, What is the purpose of the PORT?",To connect to an outside device.
"In the context of the C64, What is the purpose of the FLAG1 line?",For handshaking and as a general purpose interrupt input.
"In the context of the C64, What is the purpose of the PA2 line?",To control bit 2 of PORT A of the CIA.
"In the context of the C64, What is the purpose of the interrupt register?",To poll the interrupt register under program control.
"In the context of the C64, What is the purpose of the 6526 chip specifications?",To provide more information on the chip's specifications.
"In the context of the C64, about SID: Is the cutoff frequency adjustable?","Yes, it is adjustable between 0-7"
"In the context of the C64, about SID: What is the range of the high cutoff frequency?",The range is 0-255
"In the context of the C64, about SID: What determines the resonance of the filter?",It is determined by bits 4-7
"In the context of the C64, about SID: Can the filter voice be adjusted?","Yes, it can be adjusted through bit 2"
"In the context of the C64, about SID: What is the purpose of the high pass filter?",It is used to filter out high frequencies
"In the context of the C64, about SID: What is the purpose of the bandpass filter?",It is used to filter out specific frequency ranges
"In the context of the C64, about SID: What is the purpose of the low pass filter?",It is used to filter out low frequencies
"In the context of the C64, about SID: What is the range of the volume?",The range is 0-3
"In the context of the C64, about SID: Can the filter voice be adjusted independently?","Yes, it can be adjusted independently through bits 1 and 0"
"In the context of the C64, about SID: What is the purpose of the filter settings?",It is used to customize the filter's behavior
"In the context of the C64, Each sprite is positioned via its X and Y position register with a resolution of what?",Each sprite is positioned via its X and Y position register with a resolution of 512 horizontal and 256 vertical positions.
"In the context of the C64, What is the resolution of the X position register?",The resolution of the X position register is 512 horizontal positions.
"In the context of the C64, What is the resolution of the Y position register?",The resolution of the Y position register is 256 vertical positions.
"In the context of the C64, What is the range of X locations that are visible?",The range of X locations that are visible is 23 to 347 ($17-$157).
"In the context of the C64, What is the range of Y locations that are visible?",The range of Y locations that are visible is 50 to 249 ($32-$F9).
"In the context of the C64, Can all available sprite positions be entirely visible on the screen?","No, not all available sprite positions are entirely visible on the screen."
"In the context of the C64, Can sprites be moved smoothly on and off the display screen?","Yes, sprites may be moved smoothly on and off the display screen."
"In the context of the C64, Is the BEQ instruction used for branching?","Yes, it is used for branching."
"In the context of the C64, What is the purpose of the BEQ instruction?",The purpose of the BEQ instruction is to branch on the result being zero.
"In the context of the C64, What is the format of the BEQ instruction?",The format of the BEQ instruction is BEQ Branch on result zero.
"In the context of the C64, What is the addressing mode of the BEQ instruction?",The addressing mode of the BEQ instruction is Relative.
"In the context of the C64, What is the assembly language form of the BEQ instruction?",The assembly language form of the BEQ instruction is BEQ Oper.
"In the context of the C64, What is the OP CODE of the BEQ instruction?",The OP CODE of the BEQ instruction is F0.
"In the context of the C64, How many bytes does the BEQ instruction occupy?",The BEQ instruction occupies 2 bytes.
"In the context of the C64, How many cycles does the BEQ instruction take?",The BEQ instruction takes 2 cycles.
"In the context of the C64, What happens if the branch occurs to the same page?","If the branch occurs to the same page, add 1 to the cycle count."
"In the context of the C64, What happens if the branch occurs to the next page?","If the branch occurs to the next page, add 2 to the cycle count."
"In the context of the C64, Is the BVC instruction used for branch on overflow clear?",Yes
"In the context of the C64, What is the operation of the BVC instruction?",Branch on V = 0
"In the context of the C64, What is the addressing mode of the BVC instruction?",Relative
"In the context of the C64, What is the assembly language form of the BVC instruction?",BVC Oper
"In the context of the C64, What is the OP CODE of the BVC instruction?",50
"In the context of the C64, How many bytes does the BVC instruction occupy?",2
"In the context of the C64, How many cycles does the BVC instruction take?",2*
"In the context of the C64, What is the condition for adding 1 to the branch count?",Add 1 if branch occurs to same page
"In the context of the C64, What is the condition for adding 2 to the branch count?",Add 2 if branch occurs to different page
"In the context of the C64, What is the purpose of the BVC instruction?",Branch on overflow clear
"In the context of the C64, What is the format of the BVC instruction?",Assembly Language Form
"In the context of the C64, Compare memory and accumulator",CMP Compare memory and accumulator
"In the context of the C64, CMP: Number of bytes in immediate addressing mode",2
"In the context of the C64, CMP: Number of cycles in immediate addressing mode",2
"In the context of the C64, CMP: Number of bytes in zero page addressing mode",2
"In the context of the C64, CMP: Number of cycles in zero page addressing mode",3
"In the context of the C64, CMP: Number of bytes in zero page,X addressing mode",2
"In the context of the C64, CMP: Number of cycles in zero page,X addressing mode",4
"In the context of the C64, CMP: Number of bytes in absolute addressing mode",3
"In the context of the C64, CMP: Number of cycles in absolute addressing mode",4
"In the context of the C64, CMP: Number of bytes in absolute,X addressing mode",3
"In the context of the C64, CMP: Number of cycles in absolute,X addressing mode",4
"In the context of the C64, CMP: Number of bytes in absolute,Y addressing mode",3
"In the context of the C64, CMP: Number of cycles in absolute,Y addressing mode",4
"In the context of the C64, What is the name of the VIC-II control register that controls sprite enable?",The VIC-II control register at location 53269 ($D015 in HEX) is known as the SPRITE ENABLE register.
"In the context of the C64, What is the purpose of the SPRITE ENABLE register?",Each of the sprites has a bit in this register which controls whether that sprite is ON or OFF.
"In the context of the C64, How do you turn on sprite 1?","To turn on sprite 1, for example, it is necessary to turn that bit to a 1."
"In the context of the C64, What is the command to turn on sprite 1?","POKE 53269,PEEK(53269)OR 2"
"In the context of the C64, What is the general statement to turn on a sprite?","POKE 53269,PEEK(53269)OR (2^SN)"
"In the context of the C64, What is the importance of turning on a sprite?",A sprite must be turned ON before it can be seen.
"In the context of the C64, What is the range of sprite numbers?",from 0 to 7
"In the context of the C64, What is the purpose of the POKE command?",To turn on a sprite
"In the context of the C64, What is the role of the OR operator in the POKE command?",To turn on a sprite
"In the context of the C64, What is the significance of the 2 in the POKE command?",To turn on sprite 1
"In the context of the C64, Extended color mode is turned ON by setting which bit of the VIC-II register?",bit 6
"In the context of the C64, Which register is used to turn ON extended color mode?",VIC-II register
"In the context of the C64, What is the hexadecimal value of the location where the bit is set?",$D011
"In the context of the C64, What is the POKE command used to turn ON extended color mode?","POKE 53265,PEEK(53265)OR 64"
"In the context of the C64, What is the purpose of setting bit 6 of the VIC-II register?",to turn ON extended color mode
"In the context of the C64, What are the pins used to connect the two integrating capacitors?","CAP1A,CAP1B, (Pins 1,2)/ CAP2A,CAP2B (Pins 3,4)"
"In the context of the C64, What is the normal operation frequency range of the Filter?",audio range (approximately 30 Hz-12 kHz)
"In the context of the C64, What is the recommended capacitor value for C1 and C2 for normal operation?",2200 pF
"In the context of the C64, What type of capacitors are preferred for the Filter?",Polystyrene capacitors
"In the context of the C64, Why are matched capacitors recommended in complex polyphonic systems?",to track each other
"In the context of the C64, What is the frequency range of the Filter that can be tailored to specific applications?",the choice of capacitor values
"In the context of the C64, What is the maximum Cutoff Frequency of the Filter?",FCmax = 2.6E-5/C
"In the context of the C64, What is the range of the Filter extends below the maximum Cutoff Frequency?",9 octaves
"In the context of the C64, What is the formula to calculate the maximum Cutoff Frequency?",FCmax = 2.6E-5/C
"In the context of the C64, Why may a low-cost game not require full high-frequency response?",to provide more control over the bass frequencies
"In the context of the C64, Should the ground line between SID and the power supply be separate?","Yes, for best results."
"In the context of the C64, What is the purpose of separating the ground line between SID and the power supply?",To minimize digital noise at the audio output.
"In the context of the C64, What should be done to minimize digital noise at the audio output?",Separate the ground line between SID and the power supply.
"In the context of the C64, What is the recommended approach for the ground line between SID and the power supply?",Make it separate from ground lines to other digital circuitry.
"In the context of the C64, Why is it important to separate the ground line between SID and the power supply?",To minimize digital noise at the audio output.
"In the context of the C64, What happens if the ground line between SID and the power supply is not separate?",Digital noise at the audio output may occur.
"In the context of the C64, What is the consequence of not separating the ground line between SID and the power supply?",Digital noise at the audio output.
"In the context of the C64, What is the recommended way to prevent digital noise at the audio output?",Separate the ground line between SID and the power supply.
"In the context of the C64, Why is digital noise at the audio output a problem?",It may affect the quality of the audio output.
"In the context of the C64, What is the recommended approach to prevent digital noise at the audio output?",Separate the ground line between SID and the power supply.
"In the context of the C64, What is the purpose of the RES pin?",The RES pin is the reset control for the SID.
"In the context of the C64, What happens when the RES pin is brought low for at least 10 clock cycles?",All internal registers are reset to zero and the audio output is silenced.
"In the context of the C64, What is the typical connection for the RES pin?",The RES pin is normally connected to the reset line of the microprocessor or a power-on-clear circuit.
"In the context of the C64, What happens to the audio output when the RES pin is brought low?",The audio output is silenced.
"In the context of the C64, What is the minimum duration for the RES pin to be low to reset the SID?",At least 10 clock cycles.
"In the context of the C64, What is the effect of bringing the RES pin low for at least 10 clock cycles?",All internal registers are reset to zero.
"In the context of the C64, What is the typical use of the RES pin?",The RES pin is used as a reset control for the SID.
"In the context of the C64, What happens to the internal registers when the RES pin is brought low?",All internal registers are reset to zero.
"In the context of the C64, What is the typical connection for the RES pin in a microprocessor?",The RES pin is connected to the reset line of the microprocessor.
"In the context of the C64, What is the purpose of the RES pin in a microprocessor?",The RES pin is used as a reset control for the SID.
"In the context of the C64, What is the formula to calculate the start of the 64 bytes of the sprite definition block?",LOCATION = (BANK * 16384) + (SPRITE POINTER VALUE * 64)
"In the context of the C64, What is the range of the BANK value in the formula?",from 0 to 3
"In the context of the C64, What is the purpose of the ROM IMAGE in the BANK 0 or BANK 2?",there is a ROM IMAGE of the character set present in certain locations
"In the context of the C64, What is the limitation of placing sprite definitions in certain locations?",Sprite definitions can NOT be placed there
"In the context of the C64, What is the reason to use BANK 1 or BANK 3 for sprite definitions?",you should use one of the banks without the ROM IMAGE
"In the context of the C64, What is the value of the sprite pointer #0 at location 2040?",14
"In the context of the C64, What is the location of the sprite definition block for sprite 0?",896
"In the context of the C64, What is the formula to calculate the location of the sprite definition block?",LOCATION = (BANK * 16384) + (SPRITE POINTER VALUE * 64)
"In the context of the C64, What is the purpose of the cassette buffer?",it is used to store the 64 bytes of the sprite definition block
"In the context of the C64, What is the size of the sprite definition block?",64 bytes
"In the context of the C64, Can the VIC-II chip support smooth scrolling?","Yes, it supports smooth scrolling in both horizontal and vertical directions."
"In the context of the C64, What is smooth scrolling?",It is a one pixel movement of the entire screen in one direction.
"In the context of the C64, What are the directions of smooth scrolling?","It can move either UP, or down, or left, or right."
"In the context of the C64, Why is smooth scrolling used?","It is used to move new information smoothly onto the screen, while smoothly removing characters from the other side."
"In the context of the C64, What are the steps for SMOOTH SCROLLING?","Shrink the screen, set the scrolling register to maximum, place new data, increment the register, and shift the screen."
"In the context of the C64, What is the purpose of the scrolling registers?",To control the positioning of the video screen.
"In the context of the C64, What are the modes of the VIC-II chip?",38 column mode and 24 row mode.
"In the context of the C64, How do you go into 38 column mode?",By setting bit 3 of location 53270 to a 0.
"In the context of the C64, How do you return to 40 column mode?",By setting bit 3 of location 53270 to a 1.
"In the context of the C64, How do you go into 24 row mode?",By setting bit 3 of location 53265 to a 0.
"In the context of the C64, How do you return to 25 row mode?",By setting bit 3 of location 53265 to a 1.
"In the context of the C64, What is the purpose of 38 column mode?",To give new data a place to scroll from.
"In the context of the C64, What is the purpose of 24 row mode?",To place new data in the LAST row.
"In the context of the C64, What is the difference between X and Y scrolling?","X scrolling has covered areas on each side of the screen, while Y scrolling has only one covered area."
"In the context of the C64, What is the scroll register for X direction?",Located in bits 2 to 0 of the VIC-II control register at location 53270.
"In the context of the C64, What is the scroll register for Y direction?",Located in bits 2 to 0 of the VIC-II control register at location 53265.
"In the context of the C64, How do you scroll text onto the screen from the bottom?",By stepping the low-order 3 bits of location 53265 from 0-7.
"In the context of the C64, How do you scroll characters onto the screen from left to right?",By stepping the low-order 3 bits of location 53270 from 0 to 7.
"In the context of the C64, What happens if you step the scroll bits by -1?",Your text will move in the opposite direction.
"In the context of the C64, CPX has how many addressing modes?","Immediate, Zero Page, and Absolute"
"In the context of the C64, CPX has how many bytes in its opcode?",2
"In the context of the C64, CPX has how many cycles in its execution?",2
"In the context of the C64, CPX has how many bytes in its execution?",2
"In the context of the C64, CPX has how many cycles in its execution?",4
"In the context of the C64, CPX has what type of addressing mode?",Immediate
"In the context of the C64, CPX has what type of addressing mode?",Zero Page
"In the context of the C64, CPX has what type of addressing mode?",Absolute
"In the context of the C64, CPX has what is the opcode for Immediate mode?",E0
"In the context of the C64, CPX has what is the opcode for Zero Page mode?",E4
"In the context of the C64, Is the BVS instruction used for branching?",Yes
"In the context of the C64, What is the purpose of the BVS instruction?",Branching
"In the context of the C64, What is the BVS instruction short for?",Branch on Overflow Set
"In the context of the C64, What happens to the program counter when a branch occurs?",It increments
"In the context of the C64, What is the default value of the V flag?",1
"In the context of the C64, What is the purpose of the N flag?",To indicate if the result of the operation is negative
"In the context of the C64, What is the purpose of the C flag?",To indicate if the result of the operation is carry
"In the context of the C64, What is the purpose of the I flag?",To indicate if the result of the operation is interrupt
"In the context of the C64, What is the purpose of the D flag?",To indicate if the result of the operation is decimal
"In the context of the C64, What is the purpose of the V flag?",To indicate if the result of the operation is overflow
"In the context of the C64, BIT Test bits in memory with accumulator",The operation is used to test bits in memory with the accumulator.
"In the context of the C64, Accumulator is used in BIT operation","Yes, the accumulator is used in the BIT operation."
"In the context of the C64, Result of A /\ M is transferred to status register","Yes, the result of A /\ M is transferred to the status register."
"In the context of the C64, Z = 1 if result of A /\ M is zero","Yes, Z = 1 if the result of A /\ M is zero."
"In the context of the C64, Z = 0 if result of A /\ M is not zero","Yes, Z = 0 if the result of A /\ M is not zero."
"In the context of the C64, Addressing modes for BIT operation",The addressing modes for the BIT operation are Zero Page and Absolute.
"In the context of the C64, OP CODE for Zero Page BIT operation",The OP CODE for the Zero Page BIT operation is 24.
"In the context of the C64, Number of bytes for Zero Page BIT operation",The number of bytes for the Zero Page BIT operation is 2.
"In the context of the C64, Number of cycles for Zero Page BIT operation",The number of cycles for the Zero Page BIT operation is 3.
"In the context of the C64, Number of bytes for Absolute BIT operation",The number of bytes for the Absolute BIT operation is 3.
"In the context of the C64, Is the extended color mode enabled by setting a specific register bit?","Yes, it is enabled by setting the ECM bit of register 17 to 1."
"In the context of the C64, What is the purpose of the 2 MSB of the character pointer in extended color mode?",They are used to select the background color for each character region.
"In the context of the C64, Can the 6566/6567 force CB10 and CB9 to specific values?","Yes, they will force CB10 and CB9 to '0' regardless of the original pointer values."
"In the context of the C64, How many different character definitions are available in extended color mode?",Only 64 different character definitions are available.
"In the context of the C64, Can a character have multiple foreground colors in extended color mode?","No, each character has only one individually defined foreground color."
"In the context of the C64, Are there any restrictions on enabling extended color mode?","Yes, it should not be enabled simultaneously with multi-color mode."
"In the context of the C64, What is the maximum number of background colors available in extended color mode?",There are four available background colors.
"In the context of the C64, Can the background color of a character be changed in extended color mode?","Yes, the background color can be selected for each character region."
"In the context of the C64, Is the character dot data displayed differently in extended color mode?","No, it is displayed as in the standard mode."
"In the context of the C64, What is the purpose of the color nybble in extended color mode?",The color nybble determines the foreground color for a '1' data bit.
"In the context of the C64, Can a sprite be selectively enabled for display?",Each sprite can be selectively enabled for display by setting its corresponding enable bit to 1 in register 21 ($15).
"In the context of the C64, Is the enable bit a binary value?","The enable bit is a binary value, where 1 enables the sprite and 0 disables it."
"In the context of the C64, What happens if the MnE bit is 0?","If the MnE bit is 0, no sprite operations will occur involving the disabled sprite."
"In the context of the C64, Can a sprite be disabled?","Yes, a sprite can be disabled by setting its corresponding enable bit to 0."
"In the context of the C64, What is the purpose of the enable bit?",The purpose of the enable bit is to selectively enable or disable sprites for display.
"In the context of the C64, Is the enable bit used in register 21?","Yes, the enable bit is used in register 21 ($15)."
"In the context of the C64, Can a sprite be enabled for display?","Yes, a sprite can be enabled for display by setting its corresponding enable bit to 1."
"In the context of the C64, What happens when a sprite is enabled?","When a sprite is enabled, it can be used for display."
"In the context of the C64, Is the enable bit used to control sprite operations?","Yes, the enable bit is used to control sprite operations."
"In the context of the C64, Can a sprite be disabled for display?","Yes, a sprite can be disabled for display by setting its corresponding enable bit to 0."
"In the context of the C64, Can I add peripherals to my Commodore 64?","Peripherals are things like Datassette(TM) recorders, disk drives, printers, and modems. All these items can be added to your Commodore 64 through the various ports and sockets on the back of your machine."
"In the context of the C64, What makes Commodore peripherals special?",The thing that makes Commodore peripherals so good is the fact that they don't take up valuable Random Access Memory space when they're in use. You're free to use all 64K of memory in your Commodore 64.
"In the context of the C64, Can I use all 64K of memory in my Commodore 64?",The thing that makes Commodore peripherals so good is the fact that they don't take up valuable Random Access Memory space when they're in use. You're free to use all 64K of memory in your Commodore 64.
"In the context of the C64, What is the advantage of writing programs on my Commodore 64?",Most programs you write on your Commodore 64 today will be upwardly compatible with any new Commodore computer you buy in the future. This is partially because of the qualities of the computer's Operating System (OS).
"In the context of the C64, Can I use software from another company on my Commodore 64?","However, there is one thing that the Commodore OS can't do: make your programs compatible with a computer made by another company."
"In the context of the C64, What is the Commodore CP/M(R) cartridge?","CP/M(R) is not a computer dependent"" operating system. Instead it uses some of the memory space normally available for programming to run its own operating system."""
"In the context of the C64, Why would I want to use the Commodore CP/M(R) cartridge?","The advantages are that you can now use a large amount of software that has been specifically designed for CP/M(R) and the Z-80 microprocessor, and the programs that you write using the CP/M(R) operating system can be transported and run on any other computer that has CP/M(R) and a Z-80 card."
"In the context of the C64, Can I install a Z-80 card in my Commodore 64?","By the way, most computers that have a Z-80 microprocessor require that you go inside the computer to actually install a Z-80 card."
"In the context of the C64, How does the Commodore CP/M(R) cartridge make it easier to install a Z-80 card?","The Commodore CP/M& cartridge eliminates this hassle because our Z-80 cartridge plugs into the back of your Commodore 64 quickly and easily, without any messy wires that can cause problems later."
"In the context of the C64, Can I use my Commodore 64 with a Z-80 card?","Yes, you can use your Commodore 64 with a Z-80 card using the Commodore CP/M(R) cartridge."
"In the context of the C64, Is the Commodore 64 easy to use?","Most of the time you won't even have to think about using another company's computer, because your Commodore 64 is so easy to use."
"In the context of the C64, Can I use software that is not available in Commodore 64 format?","Most of the time you won't even have to think about using another company's computer, because your Commodore 64 is so easy to use. But for the occasional user who wants to take advantage of software that may not be available in Commodore 64 format we have created a Commodore CP/M(R) cartridge."
"In the context of the C64, What are the advantages of using the Commodore CP/M(R) cartridge?","The advantages are that you can now use a large amount of software that has been specifically designed for CP/M(R) and the Z-80 microprocessor, and the programs that you write using the CP/M(R) operating system can be transported and run on any other computer that has CP/M(R) and a Z-80 card."
"In the context of the C64, What are the disadvantages of using the Commodore CP/M(R) cartridge?","The disadvantages are that the programs you write will have to be shorter than the programs you can write using the Commodore 64's built-in operating system. In addition, you can NOT use the Commodore 64's powerful screen editing capabilities."
"In the context of the C64, Can I use the Commodore 64's screen editing capabilities with the CP/M(R) cartridge?","No, you can NOT use the Commodore 64's powerful screen editing capabilities."
"In the context of the C64, Can I write longer programs with the CP/M(R) cartridge?",The programs you write will have to be shorter than the programs you can write using the Commodore 64's built-in operating system.
"In the context of the C64, Can I use the Commodore 64's memory with the CP/M(R) cartridge?","There are advantages and disadvantages to this. The disadvantages are that the programs you write will have to be shorter than the programs you can write using the Commodore 64's built-in operating system. In addition, you can NOT use the Commodore 64's powerful screen editing capabilities."
"In the context of the C64, Is there a control register associated with TIMER A?",The CRA control register is associated with TIMER A.
"In the context of the C64, What is the function of bit 0 in the CRA register?",Bit 0 in the CRA register is used to start or stop TIMER A.
"In the context of the C64, What is the function of bit 1 in the CRA register?",Bit 1 in the CRA register is used to control the output of TIMER A on PB6.
"In the context of the C64, What is the function of bit 2 in the CRA register?",Bit 2 in the CRA register is used to toggle or pulse the TIMER A output.
"In the context of the C64, What is the function of bit 3 in the CRA register?",Bit 3 in the CRA register is used to select one-shot or continuous mode for TIMER A.
"In the context of the C64, What is the function of bit 4 in the CRA register?",Bit 4 in the CRA register is used to force a load of TIMER A.
"In the context of the C64, What is the function of bit 5 in the CRA register?",Bit 5 in the CRA register is used to select the input mode for TIMER A.
"In the context of the C64, What is the function of bit 6 in the CRA register?",Bit 6 in the CRA register is used to select the output mode for TIMER A.
"In the context of the C64, What is the function of bit 7 in the CRA register?",Bit 7 in the CRA register is used to select the clock source for TIMER A.
"In the context of the C64, What is the function of the CRB register?",The CRB register is associated with TIMER B.
"In the context of the C64, What is the function of bit 5 and 6 in the CRB register?",Bits 5 and 6 in the CRB register are used to select one of four input modes for TIMER B.
"In the context of the C64, What is the function of bit 7 in the CRB register?",Bit 7 in the CRB register is used to set the alarm or TOD clock.
"In the context of the C64, What happens to unused register bits?",Unused register bits are unaffected by a write and are forced to zero on a read.
"In the context of the C64, Who reserves the right to make changes to the product?",COMMODORE SEMICONDUCTOR GROUP reserves the right to make changes to the product.
"In the context of the C64, What is the purpose of the disclaimer?",The disclaimer is to inform that COMMODORE SEMICONDUCTOR GROUP does not assume any liability arising out of the application or use of the product.
"In the context of the C64, what is the purpose of the SERIAL ATN OUT signal in the Commodore 64",The Commodore 64 uses this signal to start a command sequence for a device on the serial bus.
"In the context of the C64, What happens when the Commodore 64 brings the SERIAL ATN OUT signal LOW",All other devices on the bus start listening for the Commodore 64 to transmit an address.
"In the context of the C64, What happens if the device addressed does not respond in a preset period of time","The Commodore 64 will assume that the device addressed is not on the bus, and will return an error in the STATUS WORD."
"In the context of the C64, What is the consequence of not responding to the address in the preset period of time",The Commodore 64 will return an error in the STATUS WORD.
"In the context of the C64, What is the purpose of the preset period of time in the SERIAL ATN OUT signal",The device addressed must respond in this period of time.
"In the context of the C64, What happens when the Commodore 64 brings the SERIAL ATN OUT signal LOW",All other devices on the bus start listening for the Commodore 64 to transmit an address.
"In the context of the C64, What is the purpose of the SERIAL ATN OUT signal in the Commodore 64",The Commodore 64 uses this signal to start a command sequence for a device on the serial bus.
"In the context of the C64, What happens when the device addressed does not respond in the preset period of time","The Commodore 64 will assume that the device addressed is not on the bus, and will return an error in the STATUS WORD."
"In the context of the C64, What is the consequence of not responding to the address in the preset period of time",The Commodore 64 will return an error in the STATUS WORD.
"In the context of the C64, What is the purpose of the preset period of time in the SERIAL ATN OUT signal",The device addressed must respond in this period of time.
"In the context of the C64, What happens when the device addressed does not respond in the preset period of time","The Commodore 64 will assume that the device addressed is not on the bus, and will return an error in the STATUS WORD."
"In the context of the C64, VCx denotes the video matrix counter outputs, what does RCx denote?",The 3-bit raster line counter
"In the context of the C64, Video matrix counter steps through how many locations?",40
"In the context of the C64, What is the increment of the raster counter?",once for each horizontal video line
"In the context of the C64, What is the purpose of the video matrix counter?",to step through the same 40 locations
"In the context of the C64, What is the purpose of the raster counter?",to increment once for each horizontal video line
"In the context of the C64, How many locations are formatted as an 8*8 dot block on the video display?",8
"In the context of the C64, What is the addressing result of the video matrix and raster counters?",each eight sequential memory locations being formatted as an 8*8 dot block
"In the context of the C64, What is the frequency of the raster counter increment?",once for each horizontal video line
"In the context of the C64, What is the range of the video matrix counter?",40 locations
"In the context of the C64, What is the purpose of the raster line counter?",to increment once for each horizontal video line
"In the context of the C64, What happens when a '0' bit is displayed in standard mode?",Standard mode allows any background data to show through when a '0' bit is displayed.
"In the context of the C64, How is sprite data interpreted in multi-color mode?","In multi-color mode, sprite data is interpreted in pairs."
"In the context of the C64, What is the interpretation of sprite data in multi-color mode?",The sprite data is interpreted as follows: BIT PAIR | COLOR DISPLAYED.
"In the context of the C64, How many colors can be displayed in each sprite in multi-color mode?",Up to 3 colors can be displayed in each sprite in addition to transparent.
"In the context of the C64, Which colors are shared among all the sprites in multi-color mode?",Two of the colors are shared among all the sprites in the multi-color mode.
"In the context of the C64, What is the resolution of the sprite in multi-color mode?",The resolution of the sprite is reduced to 12X21 in multi-color mode.
"In the context of the C64, How are horizontal dots affected in multi-color mode?",Each horizontal dot is expanded to twice the standard size in multi-color mode.
"In the context of the C64, How many colors can be displayed in each sprite in addition to transparent?",Up to 3 colors can be displayed in each sprite in addition to transparent.
"In the context of the C64, DEC instruction decreases the value of what memory location?",memory location
"In the context of the C64, What is the operation performed by the DEC instruction?",decrement
"In the context of the C64, What is the effect of the DEC instruction on the N flag?",no change
"In the context of the C64, What is the effect of the DEC instruction on the Z flag?",no change
"In the context of the C64, What is the effect of the DEC instruction on the C flag?",no change
"In the context of the C64, What is the effect of the DEC instruction on the I flag?",no change
"In the context of the C64, What is the effect of the DEC instruction on the D flag?",no change
"In the context of the C64, What is the effect of the DEC instruction on the V flag?",no change
"In the context of the C64, What is the number of bytes required to execute the DEC instruction?",2
"In the context of the C64, What is the number of cycles required to execute the DEC instruction?",5
"In the context of the C64, CLD operation mode",Clear decimal mode
"In the context of the C64, What is the purpose of the CLD operation?",To clear the decimal mode
"In the context of the C64, What is the assembly language form of the CLD operation?",CLD
"In the context of the C64, What is the OP CODE of the CLD operation?",D8
"In the context of the C64, How many bytes does the CLD operation use?",1
"In the context of the C64, How many cycles does the CLD operation take?",2
"In the context of the C64, What is the addressing mode of the CLD operation?",Implied
"In the context of the C64, What is the purpose of the CLD operation in decimal mode?",To clear the decimal mode
"In the context of the C64, What is the assembly language form of the CLD operation in decimal mode?",CLD
"In the context of the C64, What is the OP CODE of the CLD operation in decimal mode?",D8
"In the context of the C64, How many bytes does the CLD operation in decimal mode use?",1
"In the context of the C64, How many cycles does the CLD operation in decimal mode take?",2
"In the context of the C64, Can a sprite be turned off by setting its bit in the VIC-II control register?",A sprite is turned off by setting its bit in the VIC-II control register at 53269 ($D015 in HEX) to a 0.
"In the context of the C64, What is the address of the VIC-II control register?",The VIC-II control register is located at address 53269 ($D015 in HEX).
"In the context of the C64, How do you turn off a sprite?",A sprite is turned off by setting its bit in the VIC-II control register at 53269 ($D015 in HEX) to a 0.
"In the context of the C64, What is the POKE command to turn off a sprite?","The POKE command to turn off a sprite is POKE 53269,PEEK(53269)AND(255-2^SN), where SN is the sprite number from 0 to 7."
"In the context of the C64, What is the purpose of the POKE command in turning off a sprite?",The POKE command is used to turn off a sprite by setting its bit in the VIC-II control register at 53269 ($D015 in HEX) to a 0.
"In the context of the C64, Can you turn off a sprite using a POKE command?","Yes, a sprite can be turned off using a POKE command, such as POKE 53269,PEEK(53269)AND(255-2^SN), where SN is the sprite number from 0 to 7."
"In the context of the C64, Can you turn off multiple sprites using a single POKE command?","No, a separate POKE command is required for each sprite to be turned off."
"In the context of the C64, Can a sprite be displayed anywhere on the screen?","Yes, a sprite can be displayed anywhere on the screen."
"In the context of the C64, What chip maintains sprites?",The VIC-II chip maintains sprites.
"In the context of the C64, What information do you need to tell a sprite?","You need to tell a sprite what to look like, what color to be, and where to appear."
"In the context of the C64, Can sprites be used with any graphics mode?","Yes, sprites can be used with any of the other graphics modes."
"In the context of the C64, Can a sprite carry its own color definition?","Yes, a sprite can carry its own color definition."
"In the context of the C64, How many sprites can be maintained by the VIC-II chip at a time?",Up to 8 sprites can be maintained by the VIC-II chip at a time.
"In the context of the C64, What are the features of sprites?","The features of sprites include 24 horizontal dot by 21 vertical dot size, individual color control, sprite multi-color mode, magnification, and more."
"In the context of the C64, Can sprites be magnified?","Yes, sprites can be magnified in horizontal, vertical, or both directions."
"In the context of the C64, Can sprite priorities be selected?","Yes, sprite to background priority can be selected."
"In the context of the C64, Can sprite collisions be detected?","Yes, sprite to sprite and sprite to background collisions can be detected."
"In the context of the C64, Bits 4-7 of Register 05 select one of how many ATTACK rates?",16
"In the context of the C64, What determines the rate at which the output of Voice 1 rises from zero to peak amplitude?",The ATTACK rate
"In the context of the C64, What is the purpose of the Gate bit in the Envelope Generator?",To gate and release the envelope
"In the context of the C64, What is the function of the SUSTAIN cycle?",To maintain the output of Voice 1 at a selected amplitude
"In the context of the C64, What determines the rate at which the output of Voice 1 falls from the SUSTAIN amplitude to zero?",The RELEASE rate
"In the context of the C64, What is the purpose of the SYNC function in Voice 2 and 3?",To synchronize Oscillators
"In the context of the C64, What is the function of the RING MOD function in Voice 2 and 3?",To replace the Triangle output with a ring modulated combination of Oscillators
"In the context of the C64, What determines the rate at which the output of Voice 1 rises from zero to peak amplitude?",The ATTACK rate
"In the context of the C64, What is the purpose of the DECAY cycle?",To determine how rapidly the output falls from the peak amplitude to the selected SUSTAIN level
"In the context of the C64, What is the function of the RELEASE cycle?",To determine how rapidly the output falls from the SUSTAIN amplitude to zero
"In the context of the C64, What determines the rate at which the output of Voice 1 falls from the SUSTAIN amplitude to zero?",The RELEASE rate
"In the context of the C64, What is the purpose of the SUSTAIN level?",To maintain the output of Voice 1 at a selected amplitude
"In the context of the C64, What determines the rate at which the output of Voice 1 rises from zero to peak amplitude?",The ATTACK rate
"In the context of the C64, What is the function of the Envelope Generator?",To generate an envelope for Voice 1
"In the context of the C64, What determines the rate at which the output of Voice 1 falls from the SUSTAIN amplitude to zero?",The RELEASE rate
"In the context of the C64, What is the purpose of the Gate bit?",To gate and release the envelope
"In the context of the C64, What determines the rate at which the output of Voice 1 rises from zero to peak amplitude?",The ATTACK rate
"In the context of the C64, What is the function of the SYNC function?",To synchronize Oscillators
"In the context of the C64, What determines the rate at which the output of Voice 1 falls from the SUSTAIN amplitude to zero?",The RELEASE rate
"In the context of the C64, What is the purpose of the RING MOD function?",To replace the Triangle output with a ring modulated combination of Oscillators
"In the context of the C64, What determines the rate at which the output of Voice 1 rises from zero to peak amplitude?",The ATTACK rate
"In the context of the C64, What is the function of the Envelope Generator?",To generate an envelope for Voice 1
"In the context of the C64, What determines the rate at which the output of Voice 1 falls from the SUSTAIN amplitude to zero?",The RELEASE rate
"In the context of the C64, What is the purpose of the SUSTAIN level?",To maintain the output of Voice 1 at a selected amplitude
"In the context of the C64, What determines the rate at which the output of Voice 1 rises from zero to peak amplitude?",The ATTACK rate
"In the context of the C64, What is the function of the RELEASE cycle?",To determine how rapidly the output falls from the SUSTAIN amplitude to zero
"In the context of the C64, What determines the rate at which the output of Voice 1 falls from the SUSTAIN amplitude to zero?",The RELEASE rate
"In the context of the C64, What is the purpose of the Gate bit?",To gate and release the envelope
"In the context of the C64, What determines the rate at which the output of Voice 1 rises from zero to peak amplitude?",The ATTACK rate
"In the context of the C64, What is the function of the SYNC function?",To synchronize Oscillators
"In the context of the C64, What determines the rate at which the output of Voice 1 falls from the SUSTAIN amplitude to zero?",The RELEASE rate
"In the context of the C64, What is the purpose of the RING MOD function?",To replace the Triangle output with a ring modulated combination of Oscillators
"In the context of the C64, Which pins are used to select one of the 29 SID registers?",These TTL-Level inputs
"In the context of the C64, What happens when a Write is performed to any of the three unused locations?",A Write is ignored and a Read returns invalid data
"In the context of the C64, What is the purpose of connecting the pins to the corresponding address lines of the micro-processor?",So that SID may be addressed in the same manner as memory
"In the context of the C64, How many registers can be selected using the provided addresses?",1 of 32 registers
"In the context of the C64, What happens when a Read is performed on the three unused locations?",A Read returns invalid data
"In the context of the C64, Why are the three remaining register locations not used?",The remaining three register locations are not used
"In the context of the C64, What is the significance of the three unused locations?",These pins are normally connected to the corresponding address lines of the micro-processor
"In the context of the C64, What is the function of the TTL-Level inputs?",These TTL-Level inputs are used to select one of the 29 SID registers
"In the context of the C64, What happens when a Write is performed to any of the three locations?",A Write is ignored
"In the context of the C64, What is the purpose of the provided addresses?",Enough addresses are provided to select 1 of 32 registers
"In the context of the C64, Can the Voice 3 Envelope Generator be read by the microprocessor?",The output of the Voice 3 Envelope Generator can be read by the microprocessor.
"In the context of the C64, What is the purpose of the ENV 3 register?",This register allows the microprocessor to read the output of the Voice 3 Envelope Generator.
"In the context of the C64, Can the ENV 3 register produce harmonic envelopes?","Yes, the output of the Voice 3 Envelope Generator can be added to the Filter Frequency to produce harmonic envelopes."
"In the context of the C64, Can the ENV 3 register produce WAH-WAH effects?","Yes, the output of the Voice 3 Envelope Generator can be added to the Filter Frequency to produce WAH-WAH effects."
"In the context of the C64, Can the ENV 3 register produce 'Phaser' sounds?","Yes, the output of the Voice 3 Envelope Generator can be added to the frequency control registers of an oscillator to produce 'Phaser' sounds."
"In the context of the C64, Is the OSC 3 register affected by the Envelope Generator?","No, the OSC 3 register always reflects the changing output of the oscillator and is not affected in any way by the Envelope Generator."
"In the context of the C64, Is the Voice 3 Envelope Generator required to produce output from the ENV 3 register?","Yes, the Voice 3 Envelope Generator must be Gated in order to produce any output from the ENV 3 register."
"In the context of the C64, Can the ENV 3 register produce any output without the Voice 3 Envelope Generator?","No, the ENV 3 register requires the output of the Voice 3 Envelope Generator to produce any output."
"In the context of the C64, Is the ENV 3 register always reflecting the changing output of the oscillator?","No, the OSC 3 register always reflects the changing output of the oscillator, not the ENV 3 register."
"In the context of the C64, Can the ENV 3 register be used to produce different sounds?","Yes, the output of the Voice 3 Envelope Generator can be used to produce different sounds such as harmonic envelopes, WAH-WAH, and 'Phaser' sounds."
"In the context of the C64, Can the OSC 3 register be used as a random number generator?","Yes, it can be used as a random number generator for games."
"In the context of the C64, What is the range of numbers generated by the OSC 3 register when the Sawtooth waveform is selected?",The range is from 0 to 255 ($FF).
"In the context of the C64, What happens to the output of the OSC 3 register when the Triangle waveform is selected?","The output will increment from 0 up to 255, then decrement down to 0."
"In the context of the C64, What is the purpose of the OSC 3 register in modulation?",The purpose is to generate modulation for various audio effects.
"In the context of the C64, What is the effect of adding the OSC 3 Sawtooth output to the frequency control of another oscillator?",It can create siren-like sounds.
"In the context of the C64, What is the effect of adding the OSC 3 Noise output to the Filter Frequency control registers?","It can produce synthesizer Sample and Hold"" effects."""
"In the context of the C64, What is the effect of adding the OSC 3 Triangle output to the Frequency control of another oscillator?",It can produce vibrato.
"In the context of the C64, What is the range of effects available by altering the frequency of Oscillator 3 and scaling the OSC 3 output?",The range is unlimited.
"In the context of the C64, What happens to the audio output of Voice 3 when Oscillator 3 is used for modulation?",The audio output should be eliminated (3 OFF = 1).
"In the context of the C64, Does the GATE bit control the Envelope Generator for Voice 1?",Yes
"In the context of the C64, What happens when the GATE bit is set to a one?",The Envelope Generator is triggered and the ATTACK/DECAY/SUSTAIN cycle is initiated
"In the context of the C64, What is the purpose of the SYNC bit?",To synchronize the fundamental frequency of Oscillator 1 with the fundamental frequency of Oscillator 3
"In the context of the C64, What is the effect of varying the frequency of Oscillator 1 with respect to Oscillator 3?",It produces a wide range of complex harmonic structures from Voice I at the frequency of Oscillator 3
"In the context of the C64, What is the purpose of the RING MOD bit?",To replace the Triangle waveform output of Oscillator 1 with a 'Ring Modulated' combination of Oscillators 1 and 3
"In the context of the C64, What is the effect of varying the frequency of Oscillator 1 with respect to Oscillator 3 in Ring Modulation?",It produces a wide range of non-harmonic overtone structures for creating bell or gong sounds and for special effects
"In the context of the C64, What is the purpose of the TEST bit?",To reset and lock Oscillator 1 at zero until the TEST bit is cleared
"In the context of the C64, What is the effect of setting the TEST bit to a one?",The Noise waveform output of Oscillator 1 is reset and the Pulse waveform output is held at a DC level
"In the context of the C64, What is the purpose of the (Bit 4) bit?",To select the Triangle waveform output of Oscillator 1
"In the context of the C64, What is the characteristic of the Triangle waveform output?","It is low in harmonics and has a mellow, flute-like quality"
"In the context of the C64, What is the purpose of the (Bit 5) bit?",To select the Sawtooth waveform output of Oscillator 1
"In the context of the C64, What is the characteristic of the Sawtooth waveform output?","It is rich in even and odd harmonics and has a bright, brassy quality"
"In the context of the C64, What is the purpose of the (Bit 6) bit?",To select the Pulse waveform output of Oscillator 1
"In the context of the C64, What is the effect of adjusting the Pulse Width registers?","It produces tone qualities ranging from a bright, hollow square wave to a nasal, reedy pulse"
"In the context of the C64, What is the purpose of the NOISE bit?",To select the Noise output waveform of Oscillator 1
"In the context of the C64, What is the characteristic of the Noise output waveform?",It is a random signal which changes at the frequency of Oscillator 1
"In the context of the C64, What is the effect of sweeping the oscillator frequency with Noise selected?",It produces a dramatic rushing effect
"In the context of the C64, What happens when more than one output waveform is selected simultaneously?",The result is a logical ANDing of the waveforms
"In the context of the C64, What is the effect of selecting Noise while another waveform is selected?",The Noise output can 'lock up' and remain silent until reset by the TEST bit or by bringing RES low
"In the context of the C64, What is the purpose of the Envelope Generator?",To control the amplitude of Oscillator 1 appearing at the audio output
"In the context of the C64, What is the purpose of the GATE bit in the Envelope Generator?",To initiate the ATTACK/DECAY/SUSTAIN cycle
"In the context of the C64, What is the purpose of the SYNC bit in the Envelope Generator?",To synchronize the fundamental frequency of Oscillator 1 with the fundamental frequency of Oscillator 3
"In the context of the C64, What is the purpose of the RING MOD bit in the Envelope Generator?",To replace the Triangle waveform output of Oscillator 1 with a 'Ring Modulated' combination of Oscillators 1 and 3
"In the context of the C64, Can sprites be used to program arcade style games?","Yes, it is simple to program many arcade style games using sprites."
"In the context of the C64, What is the advantage of using sprites for game development?","Because the sprites are maintained by hardware, it is even possible to write a good quality game in BASIC!"
"In the context of the C64, How many sprites are supported directly by the VIC-II chip?",There are 8 sprites supported directly by the VIC-II chip.
"In the context of the C64, What is the range of sprite numbers?",The sprites are numbered from 0 to 7.
"In the context of the C64, What are the components of a sprite definition?","Each of the sprites has its own definition location, position registers and color register."
"In the context of the C64, What are the additional features of a sprite?",Each of the sprites has its own bits for enable and collision detection.
"In the context of the C64, Can sprites be used for collision detection?","Yes, sprites have its own bits for collision detection."
"In the context of the C64, What is the purpose of the enable bit in a sprite?",The enable bit is used to enable or disable a sprite.
"In the context of the C64, Can sprites be used for game development in BASIC?","Yes, it is even possible to write a good quality game in BASIC!"
"In the context of the C64, What is the benefit of using sprites for game development?",It is simple to program many arcade style games using sprites.
"In the context of the C64, Can a sprite have any color?",A sprite can be any of the 16 colors generated by the VIC-II chip.
"In the context of the C64, Are there specific memory locations for sprite color registers?",Each of the sprites has its own sprite color register. These are the memory locations of the color registers...
"In the context of the C64, Can a sprite have the same color as another sprite?",Each of the sprites has its own sprite color register.
"In the context of the C64, Are there 16 possible colors for a sprite?",A sprite can be any of the 16 colors generated by the VIC-II chip.
"In the context of the C64, Can a sprite be transparent?","The rest of the sprite will be transparent, and will show whatever is behind the sprite."
"In the context of the C64, Are sprite colors stored in memory locations?",These are the memory locations of the color registers...
"In the context of the C64, Can a sprite have the same color as the background?","The rest of the sprite will be transparent, and will show whatever is behind the sprite."
"In the context of the C64, Are there specific memory locations for sprite 0, 1, 2, 3, 4, 5, 6, 7 color registers?",These are the memory locations of the color registers...
"In the context of the C64, Can a sprite have a color that is not in the 16 possible colors?",A sprite can be any of the 16 colors generated by the VIC-II chip.
"In the context of the C64, Are sprite colors determined by the VIC-II chip?",A sprite can be any of the 16 colors generated by the VIC-II chip.
"In the context of the C64, CLC operation",CLC operation clears the carry flag
"In the context of the C64, What is the purpose of CLC operation",The purpose of CLC operation is to clear the carry flag
"In the context of the C64, What is the effect of CLC operation on the carry flag",The effect of CLC operation is to clear the carry flag
"In the context of the C64, What is the opcode of CLC operation",The opcode of CLC operation is 18
"In the context of the C64, What is the number of bytes required for CLC operation",The number of bytes required for CLC operation is 1
"In the context of the C64, What is the number of cycles required for CLC operation",The number of cycles required for CLC operation is 2
"In the context of the C64, What is the addressing mode of CLC operation",The addressing mode of CLC operation is implied
"In the context of the C64, What is the purpose of clearing the carry flag",The purpose of clearing the carry flag is to reset the carry flag to zero
"In the context of the C64, CPY instruction has how many addressing modes?","Immediate, Zero Page, Absolute"
"In the context of the C64, CPY instruction uses how many bytes in Zero Page mode?",2
"In the context of the C64, CPY instruction uses how many cycles in Zero Page mode?",3
"In the context of the C64, CPY instruction uses how many bytes in Absolute mode?",3
"In the context of the C64, CPY instruction uses how many cycles in Absolute mode?",4
"In the context of the C64, What is the OP CODE for CPY instruction in Immediate mode?",C0
"In the context of the C64, What is the OP CODE for CPY instruction in Zero Page mode?",C4
"In the context of the C64, What is the OP CODE for CPY instruction in Absolute mode?",CC
"In the context of the C64, How many bytes does CPY instruction use in Immediate mode?",2
"In the context of the C64, How many cycles does CPY instruction take in Immediate mode?",2
"In the context of the C64, Can sprites be selectively expanded?","Yes, each sprite can be selectively expanded in both the horizontal and vertical directions."
"In the context of the C64, What are the control bits for magnification control?",The control bits are MnXE and MnYE.
"In the context of the C64, What is the function of register 23?",Register 23 ($17) is used for horizontal expand MnXE.
"In the context of the C64, What is the function of register 29?",Register 29 ($1D) is used for vertical expand MnYE.
"In the context of the C64, Does expanding sprites increase resolution?","No, expanding sprites does not increase resolution."
"In the context of the C64, What is the size of the sprite array when expanded?",The sprite array is the same 24*21 array (12X21 if multi-colored) when expanded.
"In the context of the C64, What is the maximum sprite dot dimension?",The smallest sprite dot may be up to 4X standard dot dimension if a sprite is both multi-colored and expanded.
"In the context of the C64, Are there any limitations to sprite expansion?","Yes, there are limitations to sprite expansion, such as the smallest sprite dot dimension."
"In the context of the C64, What is the purpose of magnification control?",The purpose of magnification control is to selectively expand sprites in both the horizontal and vertical directions.
"In the context of the C64, Can sprites be expanded in both directions?","Yes, sprites can be selectively expanded in both the horizontal and vertical directions."
"In the context of the C64, Standard bit map mode is used when?",When the color information is derived only from the data stored in the video matrix.
"In the context of the C64, When color nybble is disregarded in standard bit map mode?",The color nybble is disregarded.
"In the context of the C64, How many colors can be independently selected in each 8*8 dot block?",Two colors can be independently selected.
"In the context of the C64, What happens when a bit in the display memory is a '0' in standard bit map mode?",The color of the output dot is set by the least significant nybble.
"In the context of the C64, What happens when a bit in the display memory is a '1' in standard bit map mode?",The output color is determined by the most significant nybble.
"In the context of the C64, What is the least significant nybble used for in standard bit map mode?",The least significant nybble is used to set the output dot color.
"In the context of the C64, What is the most significant nybble used for in standard bit map mode?",The most significant nybble is used to determine the output color.
"In the context of the C64, What is the purpose of dividing the 8 bits into two 4-bit nybbles in standard bit map mode?",To allow two colors to be independently selected in each 8*8 dot block.
"In the context of the C64, In standard bit map mode, what happens to the color information?",The color information is derived only from the data stored in the video matrix.
"In the context of the C64, What is the significance of the video matrix pointer in standard bit map mode?",The video matrix pointer determines the output color.
"In the context of the C64, Any device on the serial bus can bring this signal LOW when it requires attention from the Commodore 64.",The Commodore 64 will then take care of the device.
"In the context of the C64, What is the purpose of bringing the signal LOW on the serial bus?",Any device on the serial bus can bring this signal LOW when it requires attention from the Commodore 64.
"In the context of the C64, What happens when a device brings the signal LOW on the serial bus?",The Commodore 64 will then take care of the device.
"In the context of the C64, What is the role of the Commodore 64 in this scenario?",The Commodore 64 will then take care of the device.
"In the context of the C64, What happens when a device requires attention from the Commodore 64?",The Commodore 64 will then take care of the device.
"In the context of the C64, What is the signal LOW used for on the serial bus?",Any device on the serial bus can bring this signal LOW when it requires attention from the Commodore 64.
"In the context of the C64, What is the purpose of the Commodore 64 in this scenario?",The Commodore 64 will then take care of the device.
"In the context of the C64, What happens when a device brings the signal LOW on the serial bus?",The Commodore 64 will then take care of the device.
"In the context of the C64, What is the role of the device in this scenario?",Any device on the serial bus can bring this signal LOW when it requires attention from the Commodore 64.
"In the context of the C64, What happens when the Commodore 64 receives a signal LOW on the serial bus?",The Commodore 64 will then take care of the device.
"In the context of the C64, What are the five sources of interrupts on the 6526?","underflow from TIMER A, underflow from TIMER B, TOD ALARM, Serial Port full/empty and /FLAG."
"In the context of the C64, What is the purpose of the MASK register?",provides convenient control of individual mask bits.
"In the context of the C64, What happens when writing to the MASK register with bit 7 as ZERO?","any mask bit written with a one will be cleared, while those mask bits written with a zero will be unaffected."
"In the context of the C64, What happens when writing to the MASK register with bit 7 as ONE?","any mask bit written with a one will be set, while those mask bits written with a zero will be unaffected."
"In the context of the C64, What is the condition for an interrupt flag to set IR and generate an Interrupt Request?",the corresponding MASK bit must be set.
"In the context of the C64, What is the purpose of the DATA register?",any interrupt will set the corresponding bit in the DATA register.
"In the context of the C64, What happens to the DATA register after a read?",it is cleared.
"In the context of the C64, What is the purpose of the /IRQ pin?",bring the /IRQ pin low.
"In the context of the C64, What is the purpose of polling the IR bit?",detect which chip has generated an interrupt request.
"In the context of the C64, What is the limitation of polling the IR bit?",it will cause the DATA register to clear.
"In the context of the C64, What is the responsibility of the user when polled interrupts are present?",preserve the information contained in the DATA register if any polled interrupts were present.
"In the context of the C64, Is the 6510 a low-cost microcomputer system?","Yes, the 6510 is a low-cost microcomputer system capable of solving a broad range of small-systems and peripheral-control problems at minimum cost to the user."
"In the context of the C64, What is the type of I/O Port on the 6510?",The 6510 has an 8-bit Bi-Directional I/O Port.
"In the context of the C64, What is the architecture of the 6510 processor?",The internal processor architecture of the 6510 is identical to the MOS Technology 6502 to provide software compatibility.
"In the context of the C64, What is the addressable memory range of the 6510?",The addressable memory range of the 6510 is up to 64K bytes.
"In the context of the C64, What is the clock speed of the 6510?",The 6510 operates at 1-MHz and 2-MHz.
"In the context of the C64, What is the type of supply voltage required by the 6510?",The 6510 requires a single +5-volt supply.
"In the context of the C64, What is the type of technology used in the 6510?","The 6510 uses N-channel, silicon gate, depletion load technology."
"In the context of the C64, What is the number of instructions in the 6510?",The 6510 has 56 instructions.
"In the context of the C64, What is the type of arithmetic supported by the 6510?",The 6510 supports decimal and binary arithmetic.
"In the context of the C64, What is the number of addressing modes in the 6510?",The 6510 has 13 addressing modes.
"In the context of the C64, What is the capability of the 6510 regarding indexing?",The 6510 has true indexing capability.
"In the context of the C64, What is the type of stack pointer in the 6510?",The 6510 has a programmable stack pointer.
"In the context of the C64, What is the type of memory access capability in the 6510?",The 6510 has direct memory access capability.
"In the context of the C64, What is the compatibility of the 6510 with other processors?",The 6510 is bus compatible with the M6800.
"In the context of the C64, What is the pipeline architecture of the 6510?",The 6510 has a pipeline architecture.
"In the context of the C64, What is the interrupt capability of the 6510?",The 6510 has interrupt capability.
"In the context of the C64, What is the type of data bus in the 6510?",The 6510 has an 8-bit Bi-Directional Data Bus.
"In the context of the C64, What is the type of bus configuration in the 6510?",The 6510 has a three-state sixteen-bit Address Bus.
"In the context of the C64, What is the type of memory access in the 6510?",The 6510 has direct memory access capability.
"In the context of the C64, What is the type of memory in the 6510?",The 6510 can use any type or speed memory.
"In the context of the C64, What is the type of configuration in the 6510?",The 6510 has a pin configuration.
"In the context of the C64, BCS Branch on carry set",BCS Branch on carry set operation
"In the context of the C64, BCS Branch on carry set operation explanation",BCS Branch on carry set operation explanation: Branch on C = 1
"In the context of the C64, What is the purpose of BCS Branch on carry set",The purpose of BCS Branch on carry set is to branch on carry set operation
"In the context of the C64, What is the format of BCS Branch on carry set",The format of BCS Branch on carry set is BCS Oper
"In the context of the C64, What is the number of bytes in BCS Branch on carry set",The number of bytes in BCS Branch on carry set is 2
"In the context of the C64, What is the number of cycles in BCS Branch on carry set",The number of cycles in BCS Branch on carry set is 2*
"In the context of the C64, What is the condition for adding 1 in BCS Branch on carry set",The condition for adding 1 in BCS Branch on carry set is if branch occurs to same page
"In the context of the C64, What is the condition for adding 2 in BCS Branch on carry set",The condition for adding 2 in BCS Branch on carry set is if branch occurs to next page
"In the context of the C64, what is the purpose of the stack in the 6510 microprocessor",to temporarily remember things and to remember an order of events
"In the context of the C64, what is the GOSUB statement used for",to call a subroutine and remember where it is being called from
"In the context of the C64, what happens when a GOSUB statement is encountered",the BASIC interpreter pushes its current position onto the stack
"In the context of the C64, what happens when a RETURN statement is executed",the interpreter pulls off the stack the information that tells it where it was before the subroutine call was made
"In the context of the C64, what are the instructions used to push and pull values onto the stack",PHA and PLA
"In the context of the C64, what is the status register used for",to store and retrieve values
"In the context of the C64, what is the stack pointer used for",to point to the next available location in the stack
"In the context of the C64, what happens when something is pushed onto the stack","it is placed where the stack pointer points to, and the stack pointer is moved down to the next position"
"In the context of the C64, what happens when something is pulled off the stack","the stack pointer is incremented, and the byte pointed to by the stack pointer is placed into the specified register"
"In the context of the C64, what is the implied mode in the 6510 microprocessor",a mode where information is implied by an instruction itself
"In the context of the C64, what are some examples of implied mode instructions","PHA, PLA, PHP, and PLP"
"In the context of the C64, what is the X register used for",to store and retrieve values
"In the context of the C64, what is the A register used for",to store and retrieve values
"In the context of the C64, what is the Y register used for",to store and retrieve values
"In the context of the C64, what is the S register used for",to store and retrieve values
"In the context of the C64, what is the P register used for",to store and retrieve values
"In the context of the C64, what is the purpose of the stack in the 6510 microprocessor",to temporarily remember things and to remember an order of events
"In the context of the C64, what is the size of the stack in the 6510 microprocessor",256 bytes
"In the context of the C64, where is the stack located in memory",in page one of memory
"In the context of the C64, what is the range of the stack in memory",from $01 00 to $01 FF
"In the context of the C64, what is the organization of the stack in memory",organized backwards in memory
"In the context of the C64, what is the stack pointer used for",to point to the next available location in the stack
"In the context of the C64, what happens when the stack pointer is incremented",the byte pointed to by the stack pointer is placed into the specified register
"In the context of the C64, what happens when the stack pointer is decremented",the stack pointer is moved down to the next position
"In the context of the C64, what is the purpose of the PHP instruction",to push the status register onto the stack
"In the context of the C64, what is the purpose of the PLP instruction",to pull the status register off the stack
"In the context of the C64, what is the purpose of the PHA instruction",to push the accumulator onto the stack
"In the context of the C64, what is the purpose of the PLA instruction",to pull the accumulator off the stack
"In the context of the C64, what is the purpose of the GOSUB statement",to call a subroutine and remember where it is being called from
"In the context of the C64, what is the purpose of the RETURN statement",to return from a subroutine and remember where it was before the subroutine call was made
"In the context of the C64, what is the purpose of bit 4 in the VIC-II control register?",To turn on multi-color character mode
"In the context of the C64, what is the POKE command to turn on multi-color character mode?","POKE 53270,PEEK(53270)OR 16"
"In the context of the C64, what is the POKE command to turn off multi-color character mode?","POKE 53270,PEEK(53270)AND 239"
"In the context of the C64, what is the purpose of bit 3 in color memory?",Multi-color mode is set on or off for each space on the screen
"In the context of the C64, what is the range of values for the number in color memory?",0-15
"In the context of the C64, what is the effect of a number in color memory being less than 8?",The corresponding space on the video screen will be standard hi-res
"In the context of the C64, what is the effect of a number in color memory being greater or equal to 8?",The corresponding space will be displayed in multi-color mode
"In the context of the C64, what is the purpose of POKEing a number into color memory?",To change the color of the character in that position on the screen
"In the context of the C64, what is the effect of POKEing a number from 0 to 7?",Gives the normal character colors
"In the context of the C64, what is the effect of POKEing a number between 8 and 15?",Puts the space into multi-color mode
"In the context of the C64, what is the effect of turning BIT 3 ON in color memory?",Sets MULTI-COLOR MODE
"In the context of the C64, what is the effect of turning BIT 3 OFF in color memory?","Sets the normal, HIGH-RESOLUTION mode"
"In the context of the C64, what determines the colors displayed in multi-color mode?",The bits in the character
"In the context of the C64, what is the purpose of the background colors in multi-color mode?",To provide a background color for the characters
"In the context of the C64, what is the purpose of the character colors in multi-color mode?",To provide a character color for the background
"In the context of the C64, what is the effect of the bit pairs in multi-color mode?",Determine the colors displayed for the dots
"In the context of the C64, what is the purpose of the color RAM in multi-color mode?",To specify the color for the lower 3 bits in color memory
"In the context of the C64, what is the purpose of the color registers in multi-color mode?",To specify the colors for the background and character colors
"In the context of the C64, what is the effect of the lower 3 bits in color memory in multi-color mode?",Specify the color for the character
"In the context of the C64, what is the effect of the upper 2 bits in color memory in multi-color mode?",Specify the color for the background
"In the context of the C64, what is the purpose of the screen color in multi-color mode?",To provide a background color for the characters
"In the context of the C64, what is the purpose of the character color in multi-color mode?",To provide a character color for the background
"In the context of the C64, what is the effect of the bits in the character in multi-color mode?",Determine the colors displayed for the dots
"In the context of the C64, what is the purpose of the color memory in multi-color mode?",To store the colors for the characters and background
"In the context of the C64, what is the effect of the color memory in multi-color mode?",Stores the colors for the characters and background
"In the context of the C64, what is the purpose of the VIC-II control register in multi-color mode?",To control the multi-color character mode
"In the context of the C64, what is the effect of the VIC-II control register in multi-color mode?",Controls the multi-color character mode
"In the context of the C64, what is the purpose of the POKE command in multi-color mode?",To change the color of the character in that position on the screen
"In the context of the C64, what is the effect of the POKE command in multi-color mode?",Changes the color of the character in that position on the screen
"In the context of the C64, what is the purpose of the color registers in multi-color mode?",To specify the colors for the background and character colors
"In the context of the C64, what is the effect of the color registers in multi-color mode?",Specify the colors for the background and character colors
"In the context of the C64, what is the function of the raster register",The raster register is a dual-function register.
"In the context of the C64, what is the purpose of reading the raster register 18",A read of the raster register 18 returns the lower 8 bits of the current raster position
"In the context of the C64, what is the location of the MSB-RC8",The MSB-RC8 is located in register 17 ($11)
"In the context of the C64, what is the purpose of interrogating the raster register",The raster register can be interrogated to implement display changes outside the visible area to prevent display flicker
"In the context of the C64, what is the range of the visible display window",The visible display window is from raster 51 through raster 251 ($033-$0FB)
"In the context of the C64, what happens when the current raster matches the written value","When the current raster matches the written value, the raster interrupt latch is set"
"In the context of the C64, what is the purpose of writing to the raster bits",A write to the raster bits (including RC8) is latched for use in an internal raster compare
"In the context of the C64, what is the purpose of the internal raster compare",The internal raster compare is used to compare the current raster with the written value
"In the context of the C64, what is the purpose of the raster interrupt latch",The raster interrupt latch is set when the current raster matches the written value
"In the context of the C64, what is the purpose of the internal raster compare latch",The internal raster compare latch is used to latch the written value for comparison with the current raster
"In the context of the C64, Does the TTL-level input control the direction of data transfers?",This TTL-level input controls the direction of data transfers between SID and the microprocessor.
"In the context of the C64, What happens when the chip select conditions have been met and the input is high?",a high on this line allows the microprocessor to Read data from the selected SID register
"In the context of the C64, What happens when the chip select conditions have been met and the input is low?",a low allows the microprocessor to Write data into the selected SID register
"In the context of the C64, What is the purpose of the Read/Write line?",This pin is normally connected to the system Read/Write line.
"In the context of the C64, Can the microprocessor read data from the SID register?",a high on this line allows the microprocessor to Read data from the selected SID register
"In the context of the C64, Can the microprocessor write data into the SID register?",a low allows the microprocessor to Write data into the selected SID register
"In the context of the C64, What determines the direction of data transfers?",This TTL-level input controls the direction of data transfers between SID and the microprocessor.
"In the context of the C64, What happens when the input is high?",a high on this line allows the microprocessor to Read data from the selected SID register
"In the context of the C64, What happens when the input is low?",a low allows the microprocessor to Write data into the selected SID register
"In the context of the C64, Is the Read/Write line connected to the system?",This pin is normally connected to the system Read/Write line.
"In the context of the C64, Is the master clock for SID referenced to this clock?",This TTL-Level input is the master clock for SID.
"In the context of the C64, What controls data transfers between SID and the microprocessor?",02 also controls data transfers between SID and the microprocessor.
"In the context of the C64, What is the nominal operating frequency of the system clock?",1.0 MHz.
"In the context of the C64, What is the purpose of pin 6 in the system?",This TTL-Level input is the master clock for SID.
"In the context of the C64, What is the function of pin 6 in data transfers?","Essentially, (02 acts as a high-active chip select as far as data transfers are concerned."
"In the context of the C64, What is the condition for data transfer between SID and the microprocessor?",Data can only be transferred when (02 is high.
"In the context of the C64, What is the typical connection of pin 6 in the system?",This pin is normally connected to the system clock.
"In the context of the C64, What is the frequency of the system clock?",1.0 MHz.
"In the context of the C64, What is the role of pin 6 in the system?",All oscillator frequencies and envelope rates are referenced to this clock.
"In the context of the C64, What is the purpose of the light pen input?","The light pen input latches the current screen position into a pair of registers (LPX,LPY) on a low-going edge."
"In the context of the C64, What are the two registers that store the screen position?",The two registers are LPX and LPY.
"In the context of the C64, What is the resolution of the X position?",The X position is defined by a 512-state counter (9 bits) resolution to 2 horizontal dots.
"In the context of the C64, What is the resolution of the Y position?",The Y position is latched to its register 20 ($14) but here 8 bits provide single raster resolution within the visible display.
"In the context of the C64, How many samples are needed before turning the light pen to the screen?","You must take several samples before turning the light pen to the screen (3 or more samples, average), depending upon the characteristics of your light pen."
"In the context of the C64, What happens if the light pen is triggered multiple times within the same frame?",Subsequent triggers within the same frame will have no effect.
"In the context of the C64, What is the maximum number of times the light pen latch can be triggered per frame?",The light pen latch may be triggered only once per frame.
"In the context of the C64, What is the purpose of the 8 MSB of the X position?",The 8 MSB of the X position will contain the 8 most significant bits of the X position at the time of transition.
"In the context of the C64, What is the purpose of the 8 bits in the Y position?",The 8 bits provide single raster resolution within the visible display.
"In the context of the C64, What is the definition of the X position?",The X position is defined by a 512-state counter (9 bits) resolution to 2 horizontal dots.
"In the context of the C64, What is the definition of the Y position?",The Y position is latched to its register 20 ($14) but here 8 bits provide single raster resolution within the visible display.
"In the context of the C64, What are the three synthesizer voices in the 6581?",The 6581 consists of three synthesizer voices which can be used independently or in conjunction with each other
"In the context of the C64, What is the purpose of the Tone Oscillator in the 6581?",The Tone Oscillator controls the pitch of the voice over a wide range
"In the context of the C64, What is the function of the Envelope Generator in the 6581?",The Envelope Generator creates an amplitude envelope with programmable rates of increasing and decreasing volume
"In the context of the C64, What is the purpose of the Amplitude Modulator in the 6581?",The Amplitude Modulator controls the volume dynamics of the oscillator under the direction of the Envelope Generator
"In the context of the C64, What is the purpose of the Filter in the 6581?","The Filter is provided for generating complex, dynamic tone colors via subtractive synthesis"
"In the context of the C64, What is the purpose of the third Oscillator in the 6581?","The third Oscillator can act as a random number generator for games or as a source of modulation information for creating vibrato, frequency/filter sweeps and similar effects"
"In the context of the C64, What are the two A/D converters used for in the 6581?","The two A/D converters are used for interfacing SID with potentiometers, which can be used for 'paddles' in a game environment or as front panel controls in a music synthesizer"
"In the context of the C64, What is the purpose of SID's ability to process external audio signals?","SID can process external audio signals, allowing multiple SID chips to be daisy-chained or mixed in complex polyphonic systems"
"In the context of the C64, What is the purpose of the SID chip's ability to read the changing output of the third Oscillator and Envelope Generator?","These outputs can be used as a source of modulation information for creating vibrato, frequency/filter sweeps and similar effects"
"In the context of the C64, What is the purpose of the SID chip's ability to act as a random number generator?",The third Oscillator can act as a random number generator for games
"In the context of the C64, What is the purpose of the SID chip's ability to interface with potentiometers?","The two A/D converters are used for interfacing SID with potentiometers, which can be used for 'paddles' in a game environment or as front panel controls in a music synthesizer"
"In the context of the C64, Can characters be changed to any color?","Yes, by using the <C=> key and the COLOR keys."
"In the context of the C64, What is the command to change the character color?","POKE 53270,PEEK(53270)OR 16:PRINT'<CTRL+3>';: rem lt.red/ multi-color red"
"In the context of the C64, What is the alternative to regular text?",Another color control can set you back to regular text.
"In the context of the C64, Can you change the character color to multi-color?","Yes, by using the <C=> key and the COLOR keys."
"In the context of the C64, What is the purpose of the COLOR keys?",To change the character color to any color.
"In the context of the C64, Can you change the character color to any color?","Yes, by using the <C=> key and the COLOR keys."
"In the context of the C64, What is the command to change the character color?","POKE 53270,PEEK(53270)OR 16:PRINT'<CTRL+3>';: rem lt.red/ multi-color red"
"In the context of the C64, Can you set the character color back to regular text?","Yes, by using another color control."
"In the context of the C64, What is the high order byte referred to as in absolute addressing?",
"In the context of the C64, The high order byte is often referred to as the page of memory.",
"In the context of the C64, What is the page number of the address $1637?",
"In the context of the C64, The page number of the address $1637 is $16.",
"In the context of the C64, What is the page number of the address $0277?",
"In the context of the C64, The page number of the address $0277 is $02.",
"In the context of the C64, What is the special mode of addressing known as?",
"In the context of the C64, The special mode of addressing known as is zero page addressing.",
"In the context of the C64, What is the high order byte of addresses in zero page addressing?",
"In the context of the C64, The high order byte of addresses in zero page addressing is always zero.",
"In the context of the C64, What is the difference between absolute addressing and zero page addressing?",
"In the context of the C64, Absolute addressing expects two bytes to describe the address, while zero page addressing only expects one byte.",
"In the context of the C64, What is the range of memory locations that can be referenced by zero page addressing?",
"In the context of the C64, Zero page addressing can reference memory locations whose addresses are between $0000 and $00FF.",
"In the context of the C64, What is the assumption made by the microprocessor in zero page addressing?",
"In the context of the C64, The microprocessor assumes that the high order address is zero in zero page addressing.",
"In the context of the C64, What is the importance of understanding zero page addressing?",
"In the context of the C64, You'll need the principles of zero page addressing soon.",
"In the context of the C64, What is the range of memory locations that can be addressed using zero page addressing?",
"In the context of the C64, Zero page addressing can reference memory locations whose addresses are between $0000 and $00FF.",
"In the context of the C64, Is the BCC instruction used for branching?","Yes, it is used for branching."
"In the context of the C64, What is the operation of the BCC instruction?",The operation of the BCC instruction is Branch on Carry Clear.
"In the context of the C64, What is the condition for the BCC instruction?",The condition for the BCC instruction is Branch on Carry Clear.
"In the context of the C64, What is the assembly language form of the BCC instruction?",The assembly language form of the BCC instruction is BCC Oper.
"In the context of the C64, What is the OP code of the BCC instruction?",The OP code of the BCC instruction is 90.
"In the context of the C64, How many bytes does the BCC instruction occupy?",The BCC instruction occupies 2 bytes.
"In the context of the C64, How many cycles does the BCC instruction take?",The BCC instruction takes 2 cycles.
"In the context of the C64, Is the BCC instruction used for relative addressing?","Yes, the BCC instruction is used for relative addressing."
"In the context of the C64, What is the condition for adding 1 to the cycle count for the BCC instruction?",The condition for adding 1 to the cycle count for the BCC instruction is if the branch occurs to the same page.
"In the context of the C64, What is the condition for adding 2 to the cycle count for the BCC instruction?",The condition for adding 2 to the cycle count for the BCC instruction is if the branch occurs to a different page.
"In the context of the C64, What is the purpose of the Commodore Z-80 cartridge?",Allows you to run programs designed for a Z-80 microprocessor on your Commodore 64.
"In the context of the C64, What is included with the Commodore Z-80 cartridge?",A diskette containing the Commodore CP/M(R) operating system.
"In the context of the C64, How do you run CP/M(R) on your Commodore 64?","LOAD the CP/M(R) program from your disk drive, type RUN, and hit the <RETURN> key."
"In the context of the C64, What happens to the 64K bytes of RAM in the Commodore 64 when running CP/M(R)?",They become accessible by the built-in 6510 central processor.
"In the context of the C64, What is the limitation when using the Z-80 central processor?",You can't use it at the same time as the 6510 central processor in a single program.
"In the context of the C64, What is the purpose of the Commodore 64's sophisticated timing mechanism?",To allow shifting between the 6510 and Z-80 central processors.
"In the context of the C64, What is the memory address translation performed on the Z-80 cartridge?",Adding 4096 bytes to the memory locations used in CP/M(R) $1000 (hex) equals the memory addresses of the normal Commodore 64 operating system.
"In the context of the C64, What is the correspondence between Z-80 and 6510 memory addresses?",The correspondence is as follows: ...
"In the context of the C64, What is the limitation of the Z-80 cartridge?",You can't use both the 6510 and Z-80 central processors at the same time in a single program.
"In the context of the C64, What is the purpose of the diskette included with the Commodore Z-80 cartridge?",It contains the Commodore CP/M(R) operating system.
"In the context of the C64, Can a port be both an input and an output?","If a bit in the DDR is set to a one, the corresponding bit in the PR is an output; if a DDR bit is set to a zero, the corresponding PR bit is defined as an input."
"In the context of the C64, What is the purpose of the Data Direction Register (DDR)?",The DDR determines whether a port is an input or an output.
"In the context of the C64, Can a port be read?","On a READ, the PR reflects the information present on the actual port pins."
"In the context of the C64, What is the function of the Peripheral Data Register (PR)?",The PR reflects the information present on the actual port pins.
"In the context of the C64, Can a port be written?","On a WRITE, the PR is written with the information present on the actual port pins."
"In the context of the C64, What is the purpose of the Peripheral Data Register (PR)?",The PR reflects the information present on the actual port pins.
"In the context of the C64, What is the purpose of the Data Direction Register (DDR) in Port A?",The DDR determines whether a port is an input or an output.
"In the context of the C64, What is the purpose of the Peripheral Data Register (PR) in Port B?",The PR reflects the information present on the actual port pins.
"In the context of the C64, Can a port be both an input and an output at the same time?","No, a port can be either an input or an output, but not both at the same time."
"In the context of the C64, What is the purpose of the timer output functions in Port B?",PB6 and PB7 also provide timer output functions.
"In the context of the C64, What is the error message for receiving string data when expecting numeric data?",BAD DATA
"In the context of the C64, What happens when a program tries to reference an array element outside its range?",BAD SUBSCRIPT
"In the context of the C64, Why was program execution stopped?",BREAK
"In the context of the C64, Why can't the CONT command work?",CAN'T CONTINUE
"In the context of the C64, What happens when a required I/O device is not available?",DEVICE NOT PRESENT
"In the context of the C64, What is the error for dividing by zero?",DIVISION BY ZERO
"In the context of the C64, What happens when too many items are typed in response to an INPUT statement?",EXTRA IGNORED
"In the context of the C64, What happens when a file is not found?",FILE NOT FOUND
"In the context of the C64, Why must a file be opened before closing it?",FILE NOT OPEN
"In the context of the C64, What happens when trying to open a file using an already open file number?",FILE OPEN
"In the context of the C64, What is the error for a formula that is too complex?",FORMULA TOO COMPLEX
"In the context of the C64, Why can't the INPUT statement be used in direct mode?",ILLEGAL DIRECT
"In the context of the C64, What is the error for an illegal quantity?",ILLEGAL QUANTITY
"In the context of the C64, What happens when there is a problem with a program on tape?",LOAD
"In the context of the C64, Why can't the NEXT statement be used without a FOR loop?",NEXT WITHOUT FOR
"In the context of the C64, What happens when trying to input data from a file that is for output only?",NOT INPUT FILE
"In the context of the C64, What happens when trying to print data to a file that is for input only?",NOT OUTPUT FILE
"In the context of the C64, What happens when there is no more data to read?",OUT OF DATA
"In the context of the C64, What happens when there is no more memory available?",OUT OF MEMORY
"In the context of the C64, What is the error for an overflow?",OVERFLOW
"In the context of the C64, What is the error for an array that is redimensioned?",REDIM'D ARRAY
"In the context of the C64, What happens when character data is typed in during an INPUT statement?",REDO FROM START
"In the context of the C64, Why can't a RETURN statement be used without a GOSUB?",RETURN WITHOUT GOSUB
"In the context of the C64, What is the error for a string that is too long?",STRING TOO LONG
"In the context of the C64, What is the error for a syntax error?",?SYNTAX ERROR
"In the context of the C64, What is the error for a type mismatch?",TYPE MISMATCH
"In the context of the C64, What is the error for an undefined function?",UNDEF'D FUNCTION
"In the context of the C64, What is the error for an undefined statement?",UNDEF'D STATEMENT
"In the context of the C64, Why does the program on tape or disk not match the program in memory?",VERIFY
"In the context of the C64, Is the TOD clock a special purpose timer for real-time applications?",Yes
"In the context of the C64, What is the resolution of the TOD clock?",1/10th second
"In the context of the C64, What are the 4 registers of the TOD clock?","10ths of seconds, Seconds, Minutes and Hours"
"In the context of the C64, What is the purpose of the AM/PM flag?",Easy bit testing
"In the context of the C64, What is the frequency of the external input required for accurate time-keeping?",60 Hz or 50 Hz
"In the context of the C64, What is the programmable ALARM used for?",Generating an interrupt at a desired time
"In the context of the C64, What is the Control Register bit used for?",Governing access to the ALARM
"In the context of the C64, What happens when a write to the Hours register occurs?",TOD is automatically stopped
"In the context of the C64, What is the purpose of the latching function in the TOD clock?",Keeping all Time Of Day information constant during a read sequence
"In the context of the C64, What happens if only one register is to be read?","The register can be read on the fly"""""
"In the context of the C64, Can a sprite be displayed at any position on the screen?",A sprite can be displayed at any one position on the screen without the block constraints inherent in character and bit map mode.
"In the context of the C64, Up to how many unique sprites can be displayed simultaneously?",Up to 8 unique sprites can be displayed simultaneously.
"In the context of the C64, How many bytes are used to define a sprite?",A sprite is defined by 63 bytes in memory.
"In the context of the C64, What is the size of the dot array that represents a sprite?",A sprite is displayed as a 24*21 dot array.
"In the context of the C64, What makes sprites especially suited for video graphics and game applications?",A number of special features make sprites especially suited for video graphics and game applications.
"In the context of the C64, What is the purpose of the sprite display block?",The sprite display block is used to display a sprite.
"In the context of the C64, Can a sprite be displayed as a 24*21 dot array?","Yes, a sprite is displayed as a 24*21 dot array."
"In the context of the C64, What is the size of each byte in the sprite display block?",Each byte in the sprite display block is 1 byte.
"In the context of the C64, Can multiple sprites be displayed simultaneously?","Yes, up to 8 unique sprites can be displayed simultaneously."
"In the context of the C64, What is the purpose of the sprite in video graphics and game applications?",Sprites are especially suited for video graphics and game applications.
"In the context of the C64, what does LDA represent in 6510 assembly language",load accumulator with
"In the context of the C64, what is the purpose of the parameter associated with the LDA instruction",decided by the parameter(s) associated with that instruction
"In the context of the C64, what happens when you try to assemble something that the assembler or the 6510 microprocessor cannot do",error messages or warnings
"In the context of the C64, what does the #"" symbol in front of the parameter associated with the LDA instruction mean""","the value after the #"" should be loaded into the accumulator"""
"In the context of the C64, what is the immediate mode of the LDA instruction","when the parameter is a value, rather than the contents of a memory location or another register"
"In the context of the C64, what is the absolute mode of the LDA instruction",when the parameter is the contents of a memory location
"In the context of the C64, what is the token for the LDA instruction in immediate mode",$A9
"In the context of the C64, what is the token for the LDA instruction in absolute mode",$AD
"In the context of the C64, what does the mnemonic representing an instruction usually imply",what it does
"In the context of the C64, what does the LDX instruction do",load the X register with
"In the context of the C64, what are internal registers in the 6510 microprocessor",special memory locations that can hold one byte of information
"In the context of the C64, what is the maximum number that can be contained in a byte",255 (decimal)
"In the context of the C64, how is the address parameter in the absolute instruction LDA $102E expressed in memory",in two bytes
"In the context of the C64, what are the two bytes that form the address parameter in the absolute instruction LDA $102E",low byte and high byte
"In the context of the C64, what is the order of the bytes in the address parameter in the absolute instruction LDA $102E","low byte first, then high byte"
"In the context of the C64, what is the instruction BRK used for",the END instruction in machine language
"In the context of the C64, what happens when you write a program with 64MON and put the BRK instruction at the end",the program will return to 64MON when it is finished
"In the context of the C64, Is the CLI command used to clear an interrupt?",Yes
"In the context of the C64, What is the opcode for the CLI command?",58
"In the context of the C64, What is the addressing mode for the CLI command?",Implied
"In the context of the C64, What is the number of bytes used by the CLI command?",1
"In the context of the C64, What is the number of cycles used by the CLI command?",2
"In the context of the C64, What is the purpose of the CLI command?",To clear an interrupt
"In the context of the C64, What is the assembly language form of the CLI command?",CLI
"In the context of the C64, What is the operation code for the CLI command?",58
"In the context of the C64, What is the addressing mode for the CLI command in assembly language?",Implied
"In the context of the C64, What is the number of cycles used by the CLI command in assembly language?",2
"In the context of the C64, What is the purpose of the CLI command in assembly language?",To clear an interrupt
"In the context of the C64, Each sprite takes up how many bytes?",64 bytes
"In the context of the C64, What is the purpose of the SPRITE POINTER?",It controls where each sprite definition is located in memory
"In the context of the C64, What is the range of values that a sprite pointer can hold?",0 to 255
"In the context of the C64, Where are the sprite pointers located in memory?",The lost 8 bytes of the 1K chunk of screen memory
"In the context of the C64, What is the maximum size of memory that a sprite pointer can 'see'?",16K
"In the context of the C64, Why is 64 bytes an even number?",Because it's an even power in binary
"In the context of the C64, What is the purpose of the extra byte at the end of each sprite definition?",It serves as a placeholder
"In the context of the C64, How many bytes are needed to define a sprite?",63 bytes
"In the context of the C64, What is the total size of a sprite definition including the extra byte?",64 bytes
"In the context of the C64, Can a sprite pointer point to any location in memory?","No, it can only point to locations within the 16K block of memory"
"In the context of the C64, Standard high-resolution graphics give you control of very small dots on the screen.","Each dot in character memory can have 2 possible values, 1 for on and 0 for off."
"In the context of the C64, Can you control the color of each dot in standard high-resolution graphics?","Each dot in character memory can have 2 possible values, 1 for on and 0 for off."
"In the context of the C64, What happens when a dot is off in standard high-resolution graphics?","When a dot is off, the color of the screen is used in the space reserved for that dot."
"In the context of the C64, What is the maximum number of colors that can be used in standard high-resolution graphics?",2
"In the context of the C64, What is the limitation of standard high-resolution graphics in terms of color resolution?",In some ways this limits the color resolution within that space.
"In the context of the C64, What is the solution to the problem of colored lines crossing in standard high-resolution graphics?",Multi-color mode gives you a solution to this problem.
"In the context of the C64, What is the difference in horizontal resolution between standard high-resolution graphics and multi-color mode?","The only sacrifice is in the horizontal resolution, because each multi-color mode dot is twice as wide as a high-resolution dot."
"In the context of the C64, What is the benefit of using multi-color mode over standard high-resolution graphics?",This minimal loss of resolution is more than compensated for by the extra abilities of multi-color mode.
"In the context of the C64, An interrupt latch is set to what value when an interrupt source generates an interrupt request?",1
"In the context of the C64, What are the four sources of interrupt?","IRST, IMDC, IMMC, ILP"
"In the context of the C64, What is the purpose of the interrupt enable bit in register 26 ($1A)?",to enable an interrupt request
"In the context of the C64, What happens to the /IRQ output when an interrupt latch is set?",set to 0
"In the context of the C64, What is the condition for setting the /IRQ output to 0?",corresponding interrupt enable bit in register 26 ($1A) must be set to 1
"In the context of the C64, What is the purpose of the interrupt register?",to show the status of the four sources of interrupt
"In the context of the C64, What happens to an interrupt latch once it has been set?",may be cleared only by writing a 1 to the desired latch in the interrupt register
"In the context of the C64, What is the feature that allows selective handling of video interrupts without software?",ability to clear interrupt latches
"In the context of the C64, What is the condition for clearing an interrupt latch?",writing a 1 to the desired latch in the interrupt register
"In the context of the C64, What happens to the /IRQ output when an interrupt latch is cleared?",set high
"In the context of the C64, What is the purpose of the raster count in the interrupt register?",to set when an interrupt source has generated an interrupt request
"In the context of the C64, SID frequency calculation depends on system clock applied to pin 6",The frequency is determined by the equation: Fout = (Fn*Fclk/16777216) Hz
"In the context of the C64, SID frequency calculation depends on 16-bit number in Frequency registers",The frequency is determined by the equation: Fout = (Fn*Fclk/16777216) Hz
"In the context of the C64, What is the formula for calculating SID frequency?",The frequency is determined by the equation: Fout = (Fn*Fclk/16777216) Hz
"In the context of the C64, What is the purpose of Frequency registers in SID?",Together these registers form a 16-bit number which linearly controls the frequency of Oscillator 1
"In the context of the C64, What is the relationship between SID frequency and system clock?",The frequency is determined by the equation: Fout = (Fn*Fclk/16777216) Hz
"In the context of the C64, What is the frequency resolution of SID?",The frequency resolution of SID is sufficient for any tuning scale and allows sweeping from note to note (portamento) with no discernable frequency steps
"In the context of the C64, What is the tuning scale used in SID?",It should be noted that the frequency resolution of SID is sufficient for any tuning scale and allows sweeping from note to note (portamento) with no discernable frequency steps
"In the context of the C64, What is the frequency range of SID?",A complete table of values for generating 8 octaves of the equally tempered musical scale with concert A (440 Hz) tuning is provided in Appendix E
"In the context of the C64, What is the role of pin 6 in SID?","For a standard 1.0-MHz clock, the frequency is given by: Fout = (Fn*0.059604645) Hz"
"In the context of the C64, What is the formula for calculating SID frequency for a standard 1.0-MHz clock?","For a standard 1.0-MHz clock, the frequency is given by: Fout = (Fn*0.059604645) Hz"
"In the context of the C64, What is the purpose of the Pulse Width registers?",Together these registers form a 12-bit number which linearly controls the Pulse Width (duty cycle) of the Pulse waveform on Oscillator 1.
"In the context of the C64, What is the range of values for the Pulse Width registers?","A value of 0 or 4095 ($FF) in the Pulse Width registers will produce a constant DC output, while a value of 2048 ($800) will produce a square wave."
"In the context of the C64, What is the resolution of the Pulse Width registers?",The pulse width resolution allows the width to be smoothly swept with no discernable stepping.
"In the context of the C64, What is the equation for calculating the Pulse Width?",PWout = (PWn/40.95) %
"In the context of the C64, What is the unit of measurement for the Pulse Width?",%
"In the context of the C64, What is the minimum value for the Pulse Width registers?",0
"In the context of the C64, What is the maximum value for the Pulse Width registers?",4095 ($FF)
"In the context of the C64, What is the effect of a value of 0 in the Pulse Width registers?",produces a constant DC output
"In the context of the C64, What is the effect of a value of 4095 in the Pulse Width registers?",produces a constant DC output
"In the context of the C64, What is the effect of a value of 2048 in the Pulse Width registers?",produces a square wave
"In the context of the C64, Is a dynamic ram refresh controller built into the 6566/6567 devices?",Yes
"In the context of the C64, What is the rate at which 8-bit row addresses are refreshed?",Every raster line
"In the context of the C64, What is the maximum delay between the refresh of any single row address in a 128 refresh scheme?",2.02 ms
"In the context of the C64, What is the maximum delay between the refresh of any single row address in a 256 refresh scheme?",3.66 ms
"In the context of the C64, Is the refresh process transparent to the system?",Yes
"In the context of the C64, What phase of the system clock does the refresh occur during?",Phase 1
"In the context of the C64, What signals are generated by the 6567 for every Phase 2 and video data access?",/RAS and /CAS
"In the context of the C64, Are external clock generation required for the refresh process?",No
"In the context of the C64, What is the purpose of /RAS and /CAS signals?",Generated for every Phase 2 and video data access
"In the context of the C64, Are the /RAS and /CAS signals connected directly to the dynamic rams?",Yes
"In the context of the C64, Is the refresh process guaranteed for every raster line?",Yes
"In the context of the C64, What is the size of the matrix on the Programmable Character Worksheet?",8 by 8
"In the context of the C64, What is the purpose of the matrix on the Programmable Character Worksheet?",To design your own characters
"In the context of the C64, what is the size of a sprite in terms of dots",24 by 21 dots
"In the context of the C64, How many bytes are needed to store a sprite",63 bytes
"In the context of the C64, What is the size of a sprite in terms of bytes",504/8 bits
"In the context of the C64, How is a sprite created",by taking a look at the sprite definition block on the bit level
"In the context of the C64, What happens to a bit set to 0 in a sprite",it will display whatever data is behind it
"In the context of the C64, What is similar between sprites and characters",each bit set to 0 is transparent
"In the context of the C64, What is the resolution of a multi-color sprite",12 horizontal dots by 21 vertical dots
"In the context of the C64, What happens to the width of each dot in a multi-color sprite",it becomes twice as wide
"In the context of the C64, What is the number of colors displayable in a multi-color sprite",4
"In the context of the C64, Is the CLV operation an implied addressing mode?",Yes
"In the context of the C64, What is the OP CODE for the CLV operation?",B8
"In the context of the C64, How many bytes does the CLV operation take?",1
"In the context of the C64, How many cycles does the CLV operation take?",2
"In the context of the C64, What is the purpose of the CLV operation?",Clear overflow flag
"In the context of the C64, What is the assembly language form of the CLV operation?",CLV
"In the context of the C64, What is the addressing mode of the CLV operation?",Implied
"In the context of the C64, What is the operation code for the CLV operation?",CLV
"In the context of the C64, What is the number of cycles taken by the CLV operation?",2
"In the context of the C64, What is the number of bytes taken by the CLV operation?",1
"In the context of the C64, what is the operation of ASL instruction",Shift Left One Bit
"In the context of the C64, what is the purpose of ASL instruction",Shift Left One Bit (Memory or Accumulator)
"In the context of the C64, what is the format of ASL instruction",C <- |7|6|5|4|3|2|1|0| <- 0
"In the context of the C64, what is the addressing mode of ASL instruction","Accumulator, Zero Page, Zero Page,X, Absolute, Absolute,X"
"In the context of the C64, what is the number of bytes of ASL instruction","1, 2, 2, 3, 3"
"In the context of the C64, what is the number of cycles of ASL instruction","2, 5, 6, 6, 7"
"In the context of the C64, what is the op code of ASL instruction","0A, 06, 16, 0E, 1E"
"In the context of the C64, what is the purpose of ASL instruction in Accumulator mode",Shift Left One Bit (Memory or Accumulator)
"In the context of the C64, what is the purpose of ASL instruction in Zero Page mode",Shift Left One Bit (Memory or Accumulator)
"In the context of the C64, what is the purpose of ASL instruction in Zero Page,X mode",Shift Left One Bit (Memory or Accumulator)
"In the context of the C64, what is the purpose of ASL instruction in Absolute mode",Shift Left One Bit (Memory or Accumulator)
"In the context of the C64, what is the purpose of ASL instruction in Absolute,X mode",Shift Left One Bit (Memory or Accumulator)
"In the context of the C64, What is the function of the ACPTR kernel routine?",Input byte from serial port
"In the context of the C64, What is the purpose of the CHKIN kernel routine?",Open channel for input
"In the context of the C64, What is the function of the CIOUT kernel routine?",Output byte to serial port
"In the context of the C64, What is the purpose of the CINT kernel routine?",Initialize screen editor
"In the context of the C64, What is the function of the CLOSE kernel routine?",Close a specified logical file
"In the context of the C64, What is the purpose of the CLRCHN kernel routine?",Close input and output channels
"In the context of the C64, What is the function of the GETIN kernel routine?",Get character from keyboard queue
"In the context of the C64, What is the purpose of the IOBASE kernel routine?",Returns base address of I/O devices
"In the context of the C64, What is the function of the IOINIT kernel routine?",Initialize input/output
"In the context of the C64, What is the purpose of the LISTEN kernel routine?",Command devices on the serial bus to LISTEN
"In the context of the C64, Multi-color bit map mode is selected by setting which register to a '1'?",register 22 ($16)
"In the context of the C64, What is the purpose of the MCM bit in register 22 ($16)?",setting the multi-color bit map mode
"In the context of the C64, What is the memory access sequence used in multi-color mode?",the same as standard bit map mode
"In the context of the C64, What is the dot data interpreted as in multi-color mode?",the dot data as follows
"In the context of the C64, What is the purpose of the color nybble in multi-color bit map mode?",used for the multi-color bit map mode
"In the context of the C64, How many colors can be displayed in each 8*8 block in multi-color bit map mode?",three independently selected colors
"In the context of the C64, What is the screen resolution in multi-color bit map mode?",160H*200V
"In the context of the C64, What is the horizontal dot size in multi-color bit map mode?",doubled
"In the context of the C64, What is the purpose of the video matrix pointer in multi-color bit map mode?",used to select one dot color
"In the context of the C64, What is the purpose of the background color in multi-color bit map mode?",used in addition to the three independently selected colors
"In the context of the C64, What is the size of each block in multi-color bit map mode?",8*8
"In the context of the C64, Is the serial port a buffered system?",Yes
"In the context of the C64, What is the maximum baud rate possible?",02 divided by 4
"In the context of the C64, What is the maximum useable baud rate?",determined by line loading and the speed at which the receiver responds to input data
"In the context of the C64, What is the purpose of the control bit?",selects input or output mode
"In the context of the C64, What happens to the data in the shift register after 8 CNT pulses?",dumped into the Serial Data Register and an interrupt is generated
"In the context of the C64, What is the function of TIMER A?",used for the baud rate generator
"In the context of the C64, What is the maximum baud rate possible in output mode?",1/2 the underflow rate of TIMER A
"In the context of the C64, What happens to the data shifted out on the SP pin?",becomes valid on the falling edge of CNT and remains valid until the next falling edge
"In the context of the C64, What is the purpose of the Serial Data Register?",to store data to be transmitted
"In the context of the C64, What happens to the shift register after 8 CNT pulses?",shifts out to the SP pin
"In the context of the C64, What is the purpose of the CNT pin?",to generate the clock signal
"In the context of the C64, What is the purpose of the SP pin?",to transmit data
"In the context of the C64, What is the purpose of the Serial Port?",to transmit data serially
"In the context of the C64, What is the maximum number of bytes that can be transmitted continuously?",one byte ahead of the shift register
"In the context of the C64, What happens to the CNT pin after 8 CNT pulses?",returns high
"In the context of the C64, What is the purpose of the SDR data?",to transmit data serially
"In the context of the C64, What is the format of the serial input data?",MSB first
"In the context of the C64, What is the purpose of the 6526 devices?",to connect to a common serial communication bus
"In the context of the C64, What is the purpose of the CNT and SP outputs?",to allow a common serial communication bus
"In the context of the C64, What is the protocol for master/slave selection?",transmitted over the serial bus or via dedicated handshaking lines
"In the context of the C64, What is the purpose of the TIMER A?",to generate the baud rate
"In the context of the C64, What is the purpose of the Serial Data Register?",to store data to be transmitted
"In the context of the C64, What happens to the data in the shift register after transmission?",dumped into the Serial Data Register
"In the context of the C64, What is the purpose of the shift register?",to store data to be transmitted
"In the context of the C64, What is the purpose of the CNT pin?",to generate the clock signal
"In the context of the C64, What is the purpose of the SP pin?",to transmit data
"In the context of the C64, What is the purpose of the Serial Port?",to transmit data serially
"In the context of the C64, What is the maximum baud rate possible in input mode?",1/2 the underflow rate of TIMER A
"In the context of the C64, What is the purpose of the TIMER A in output mode?",to generate the baud rate
"In the context of the C64, What is the purpose of the Serial Data Register?",to store data to be transmitted
"In the context of the C64, What is the purpose of the shift register?",to store data to be transmitted
"In the context of the C64, what is the normal display size of the display window?",The normal display consists of 25 rows of 40 characters (or character regions) per row.
"In the context of the C64, What is the minimum number of rows in the reduced display window?",24 rows
"In the context of the C64, What is the maximum number of columns in the standard display window?",40 columns
"In the context of the C64, What is the purpose of the RSEL bit?",The RSEL bit is in register 17 ($11) and the CSEL bit is in register 22 ($16).
"In the context of the C64, What is the default display window size?","The larger display window is normally used, while the smaller display window is normally used in conjunction with scrolling."
"In the context of the C64, What is the purpose of the CSEL bit?",The RSEL bit is in register 17 ($11) and the CSEL bit is in register 22 ($16).
"In the context of the C64, What is the minimum number of columns in the reduced display window?",38 columns
"In the context of the C64, What is the purpose of the reduced display window?",The display window may be reduced to 24 rows and 38 characters.
"In the context of the C64, What is the purpose of the standard display window?","For standard display the larger display window is normally used,"
"In the context of the C64, What is the purpose of the scrolling feature?",The smaller display window is normally used in conjunction with scrolling.
"In the context of the C64, INY operation increments what by one",INY operation increments the index Y by one
"In the context of the C64, INY operation increments what data type",INY operation increments the index Y
"In the context of the C64, INY operation is an example of what type of operation",INY operation is an example of an implied operation
"In the context of the C64, INY operation is used to increment what variable",INY operation is used to increment the index Y
"In the context of the C64, INY operation is used in what addressing mode",INY operation is used in implied addressing mode
"In the context of the C64, INY operation is used in what assembly language form",INY operation is used in assembly language form
"In the context of the C64, INY operation is used in what number of bytes",INY operation is used in 1 byte
"In the context of the C64, INY operation is used in what number of cycles",INY operation is used in 2 cycles
"In the context of the C64, INY operation is used in what operation code",INY operation is used in operation code C8
"In the context of the C64, Indirect indexed mode allows usage of which register as the index?",Y register
"In the context of the C64, What is the mode of instruction in indirect indexed mode?",indirect
"In the context of the C64, What is the low byte of the actual address in indirect indexed mode?",zero page
"In the context of the C64, What is the high order byte of the actual address in indirect indexed mode?",next byte
"In the context of the C64, What is the purpose of the instruction in indirect indexed mode?",load the accumulator
"In the context of the C64, What is the actual address in indirect indexed mode?",$1E45 + Y
"In the context of the C64, What is the low order byte of the actual address in indirect indexed mode?",contents of $02
"In the context of the C64, What is the high order byte of the actual address in indirect indexed mode?",contents of $03
"In the context of the C64, What is the Y register value in indirect indexed mode?",$00
"In the context of the C64, What is the equivalent code for delivering a letter in indirect indexed mode?","LDA #$00, STA $02, LDA #$16, STA $03, LDY #$05, LDA ($02),Y"
"In the context of the C64, What is the first step in approaching a large task in machine language?","Write it out on paper and use block diagrams of memory usage, functional modules of code required, and a program flow."
"In the context of the C64, What is the purpose of writing down the task on paper?","To clarify the process and break it down into smaller, manageable parts."
"In the context of the C64, What is the benefit of breaking down a large task into smaller parts?",It makes the task seem less overwhelming and allows for a more focused approach.
"In the context of the C64, What is the main outline of a roulette game in machine language?","Display title, ask if player requires instructions, display roulette table, take in bets, spin wheel, check bets with result, inform player, and check if player has any money left."
"In the context of the C64, What is the importance of practice in approaching a large task?",It improves the process and helps to make the task seem less daunting.
"In the context of the C64, What is the key to breaking down a large indigestible problem?",To break it down into small enough pieces to be manageable.
"In the context of the C64, What is the result of approaching a large task in a step-by-step manner?",It allows the task to fall into place and become more manageable.
"In the context of the C64, What is the importance of persistence in approaching a large task?",It helps to improve the process and makes the task seem less overwhelming.
"In the context of the C64, What is the benefit of using block diagrams in approaching a large task?",It helps to clarify the process and make it more understandable.
"In the context of the C64, what is the location of the VIC-II control register to unexpand a sprite in the horizontal direction",53277
"In the context of the C64, What is the operation to unexpand a sprite in the horizontal direction","POKE 53277,PEEK(53277)AND (255-2^SN)"
"In the context of the C64, To unexpand a sprite in the horizontal direction, the corresponding bit in the VIC-II control register at location 53277 ($D01D in HEX) must be turned OFF (set to a 0).",
"In the context of the C64, What is the range of sprite numbers for unexpanding a sprite in the horizontal direction",0 to 7
"In the context of the C64, To unexpand a sprite in the horizontal direction, the corresponding bit in the VIC-II control register at location 53277 ($D01D in HEX) must be turned OFF (set to a 0).",
"In the context of the C64, What is the purpose of the data bus pins?","The eight data bus pins are the bidirectional data port, controlled by /CS, RW, and Phase 0."
"In the context of the C64, What is the condition for accessing the data bus?",The data bus can only be accessed while AEC and Phase 0 are high and /CS is low.
"In the context of the C64, What is the function of the /CS pin?","The chip select pin, /CS, is brought low to enable access to the device registers in conjunction with the address and RW pins."
"In the context of the C64, What happens when /CS is low?",/CS low is recognized only while AEC and Phase 0 are high.
"In the context of the C64, What is the condition for recognizing /CS low?",Only while AEC and Phase 0 are high.
"In the context of the C64, What is the purpose of Phase 0?",The data bus can only be accessed while AEC and Phase 0 are high and /CS is low.
"In the context of the C64, What is the purpose of AEC?",The data bus can only be accessed while AEC and Phase 0 are high and /CS is low.
"In the context of the C64, What is the condition for accessing the device registers?","The chip select pin, /CS, is brought low to enable access to the device registers in conjunction with the address and RW pins."
"In the context of the C64, What is the SID chip compatible with?",65XX and similar microprocessor families
"In the context of the C64, What is the SID chip used for?",Electronic music synthesizer/sound effects generator
"In the context of the C64, How many tone oscillators does the SID chip have?",3
"In the context of the C64, What is the range of the SID chip's pitch control?",0-4 kHz
"In the context of the C64, What are the four waveforms available per oscillator?","Triangle, Sawtooth, Variable Pulse, Noise"
"In the context of the C64, How many amplitude modulators does the SID chip have?",3
"In the context of the C64, What is the range of the SID chip's amplitude modulation?",48 dB
"In the context of the C64, What are the three envelope generators used for?","Attack, Decay, Sustain"
"In the context of the C64, What is the range of the SID chip's cutoff frequency?",30 Hz-12 kHz
"In the context of the C64, What is the purpose of the SID chip's ring modulation feature?",To create unique sounds
"In the context of the C64, Can the 6566/6567 registers be accessed like other peripheral devices?",The 6566/6567 registers can be accessed similar to any other peripheral device.
"In the context of the C64, Are there special memory accesses for the 6566/6567 registers?","Aside from the special memory accesses described above, the 6566/6567 registers can be accessed similar to any other peripheral device."
"In the context of the C64, What signals are provided for the processor interface?",The following processor interface signals are provided:
"In the context of the C64, Can the 6566/6567 registers be accessed like other peripheral devices?",The 6566/6567 registers can be accessed similar to any other peripheral device.
"In the context of the C64, Are the 6566/6567 registers accessed like other peripheral devices?",The 6566/6567 registers can be accessed similar to any other peripheral device.
"In the context of the C64, What is accessed similar to any other peripheral device?",The 6566/6567 registers can be accessed similar to any other peripheral device.
"In the context of the C64, Are there special memory accesses for the 6566/6567 registers?","Aside from the special memory accesses described above, the 6566/6567 registers can be accessed similar to any other peripheral device."
"In the context of the C64, What is provided for the processor interface?",The following processor interface signals are provided:
"In the context of the C64, Can the 6566/6567 registers be accessed like other peripheral devices?",The 6566/6567 registers can be accessed similar to any other peripheral device.
"In the context of the C64, Are the 6566/6567 registers accessed like other peripheral devices?",The 6566/6567 registers can be accessed similar to any other peripheral device.
"In the context of the C64, What signals are provided for the processor interface?",The following processor interface signals are provided:
"In the context of the C64, Can a sprite be unexpanded in the vertical direction?","To unexpand a sprite in the vertical direction, the corresponding bit in the VIC-II control register at location 53271 ($D017 in HEX) must be turned OFF (set to a 0)."
"In the context of the C64, What is the location of the VIC-II control register?",$D017 in HEX
"In the context of the C64, What is the condition to unexpand a sprite in the vertical direction?",The corresponding bit in the VIC-II control register at location 53271 ($D017 in HEX) must be turned OFF (set to a 0).
"In the context of the C64, What is the effect of POKE 53271,PEEK(53271)AND (255-2^SN) on a sprite?",The following POKE 'unexpands' a sprite in the Y direction:
"In the context of the C64, What is the purpose of POKE 53271,PEEK(53271)AND (255-2^SN)?",'unexpands' a sprite in the Y direction
"In the context of the C64, What is the range of sprite numbers?",from 0 to 7
"In the context of the C64, What is the condition for a sprite to be unexpanded in the vertical direction?",The corresponding bit in the VIC-II control register at location 53271 ($D017 in HEX) must be turned OFF (set to a 0).
"In the context of the C64, What is the location of the sprite number?",from 0 to 7
"In the context of the C64, What is the effect of turning OFF the corresponding bit in the VIC-II control register?",To unexpand a sprite in the vertical direction
"In the context of the C64, What is the purpose of the POKE command?",'unexpands' a sprite in the Y direction
"In the context of the C64, What is the default mode of the Commodore 64 when it is first turned on?",Standard character mode
"In the context of the C64, What is the purpose of defining new character shapes in RAM?",To display special graphics characters
"In the context of the C64, What chip is responsible for accessing screen memory and color memory?",VIC-II
"In the context of the C64, What is the purpose of the VIC-II chip in displaying characters on the screen?",To determine the character code and color
"In the context of the C64, What is the starting address of the 8-byte block holding the character pattern?",Translated by the VIC-II chip
"In the context of the C64, What is the formula for calculating the character address?",SCREEN CODE*8+(CHARACTER SET*2048)+(BANK*16384)
"In the context of the C64, What is the purpose of the Bank Select Bits in calculating the character address?",To take into account the base address
"In the context of the C64, What is the typical use of the POKE command in character mode?",To set the character code in screen memory
"In the context of the C64, What is the typical location of the 8-byte block holding the character pattern?",In character memory
"In the context of the C64, Look at other peoples' machine language programs to learn",One of the best ways to learn machine language is to look at other peoples' machine language programs.
"In the context of the C64, Write your own machine language program","Having looked at other machine language programs, you MUST write your own."
"In the context of the C64, Use utilities to aid in writing machine language programs","You should also use the utilities that are available, either IN your computer, or in a program, that aid you in writing, editing, or tracking down errors in a machine language program."
"In the context of the C64, What are the advantages of writing programs in machine language","Advantages of writing programs in machine language: Speed - Machine language is hundreds, and in some cases thousands of times faster than a high level language such as BASIC."
"In the context of the C64, Can machine language programs be made totally 'watertight'","A machine language program can be made totally 'watertight,' i.e., the user can be made to do ONLY what the program allows, and no more."
"In the context of the C64, What is the KERNAL","The KERNAL is an example of a utility that allows you to check the keyboard, print text, control peripheral devices like disk drives, printers, modems, etc., manage memory and the screen."
"In the context of the C64, Why is machine language faster than high level languages","Machine language is hundreds, and in some cases thousands of times faster than a high level language such as BASIC."
"In the context of the C64, What is the importance of machine language programming","In essence, the computer can only be maximized by the machine language programmer."
"In the context of the C64, Can machine language programs crash the BASIC interpreter","With a high level language, you are relying on the user not 'crashing' the BASIC interpreter by entering, for example, a zero which later causes a: ?DIVISION BY ZERO ERROR IN LINE 830"
"In the context of the C64, Indexing plays an important part in the running of which microprocessor?",6510
"In the context of the C64, What is indexing defined as in the context of the 6510 microprocessor?",creating an actual address from a base address plus the contents of either the X or Y index registers
"In the context of the C64, What is the purpose of the X or Y index registers in indexing?",to create an actual address
"In the context of the C64, What is the mnemonic format of an absolute indexed instruction?","the same as an absolute instruction except a ',X' or ',Y' denoting the index is added to the address"
"In the context of the C64, What is the result of executing an LDA instruction in the absolute X indexed mode?",the actual location that is loaded into the A register
"In the context of the C64, What are the different modes of addressing available on the 6510 microprocessor?","absolute indexed, zero page indexed, indirect indexed, and indexed indirect"
"In the context of the C64, What is the purpose of the ',X' or ',Y' in an absolute indexed instruction?",to denote the index
"In the context of the C64, What is the result of executing an LDA instruction in the indirect indexed mode?",the actual location that is loaded into the A register
"In the context of the C64, what is the operation performed by the INX instruction",Increment Index X by one
"In the context of the C64, what is the result of the operation INX",X + 1
"In the context of the C64, what is the assembly language form of the INX instruction",INX
"In the context of the C64, what is the op code for the INX instruction",E8
"In the context of the C64, how many bytes does the INX instruction occupy",1
"In the context of the C64, how many cycles does the INX instruction take",2
"In the context of the C64, what is the addressing mode of the INX instruction",Implied
"In the context of the C64, what is the purpose of the INX instruction",Increment Index X
"In the context of the C64, what is the format of the INX instruction",INX Increment Index X by one
"In the context of the C64, what is the operation performed by the INX instruction in assembly language",X + 1
"In the context of the C64, Can the display data be scrolled in both horizontal and vertical directions?","Yes, the display data may be scrolled up to one entire character space in both the horizontal and vertical direction."
"In the context of the C64, What is the purpose of scrolling in conjunction with the smaller display window?",Scrolling can be used to create a smooth panning motion of display data while updating the system memory only when a new character row (or column) is required.
"In the context of the C64, What is the effect of scrolling on the system memory?",Scrolling updates the system memory only when a new character row (or column) is required.
"In the context of the C64, What is the purpose of scrolling in centering a fixed display within the display window?",Scrolling is used to center a fixed display within the display window.
"In the context of the C64, What are the registers used for horizontal positioning?","The X2, X1, X0 registers are used for horizontal positioning."
"In the context of the C64, What are the registers used for vertical positioning?","The Y2, Y1, Y0 registers are used for vertical positioning."
"In the context of the C64, What is the function of the horizontal position register?",The horizontal position register is used to set the horizontal position.
"In the context of the C64, What is the function of the vertical position register?",The vertical position register is used to set the vertical position.
"In the context of the C64, What is the purpose of the function register?",The function register is used to specify the function of the display.
"In the context of the C64, What is the hexadecimal value of the horizontal position register?",The hexadecimal value of the horizontal position register is $16.
"In the context of the C64, What is the hexadecimal value of the vertical position register?",The hexadecimal value of the vertical position register is $11.
"In the context of the C64, Is there an instruction to add memory to the accumulator with carry?",ADC
"In the context of the C64, What is the effect of the ASL instruction?",Shift left One Bit (Memory or Accumulator)
"In the context of the C64, What is the purpose of the BCC instruction?",Branch on Carry Clear
"In the context of the C64, What is the effect of the CLC instruction?",Clear Carry Flag
"In the context of the C64, What is the purpose of the CMP instruction?",Compare Memory and Accumulator
"In the context of the C64, What is the effect of the DEC instruction?",Decrement Memory by One
"In the context of the C64, What is the purpose of the EOR instruction?",'Exclusive-OR' Memory with Accumulator
"In the context of the C64, What is the effect of the INC instruction?",Increment Memory by One
"In the context of the C64, What is the purpose of the JMP instruction?",Jump to New location
"In the context of the C64, What is the effect of the LDA instruction?",Load Accumulator with Memory
"In the context of the C64, What is the purpose of the LSR instruction?",Shift One Bit Right (Memory or Accumulator)
"In the context of the C64, What is the effect of the ORA instruction?",'OR' Memory with Accumulator
"In the context of the C64, What is the purpose of the PHA instruction?",Push Accumulator on Stack
"In the context of the C64, What is the effect of the ROL instruction?",Rotate One Bit Left (Memory or Accumulator)
"In the context of the C64, What is the purpose of the SBC instruction?",Subtract Memory from Accumulator with Borrow
"In the context of the C64, What is the effect of the SEC instruction?",Set Carry Flag
"In the context of the C64, What is the purpose of the STA instruction?",Store Accumulator in Memory
"In the context of the C64, What is the effect of the TAX instruction?",Transfer Accumulator to Index X
"In the context of the C64, What is the purpose of the TYA instruction?",Transfer Index Y to Accumulator
"In the context of the C64, What is the effect of the TXA instruction?",Transfer Index X to Accumulator
"In the context of the C64, What is the purpose of the RTS instruction?",Return from Subroutine
"In the context of the C64, What is the effect of the SED instruction?",Set Decimal Mode
"In the context of the C64, What is the purpose of the SEI instruction?",Set Interrupt Disable Status
"In the context of the C64, What is the effect of the STX instruction?",Store Index X in Memory
"In the context of the C64, What is the purpose of the TSX instruction?",Transfer Stack Pointer to Index X
"In the context of the C64, What is the effect of the TYA instruction?",Transfer Index Y to Accumulator
"In the context of the C64, What is the purpose of the TXS instruction?",Transfer Index X to Stack Register
"In the context of the C64, What is the effect of the PLA instruction?",Pull Accumulator from Stack
"In the context of the C64, What is the purpose of the PLP instruction?",Pull Processor Status from Stack
"In the context of the C64, Does the 6510 require a specific clock signal?","Yes, it requires a two-phase non-overlapping clock that runs at the Vcc voltage level."
"In the context of the C64, What is the purpose of the Address Bus?",The Address Bus is used to transfer data to and from the device and peripherals.
"In the context of the C64, What is the capacity of the Address Bus?",The Address Bus can drive one standard TTL load and 130 pf.
"In the context of the C64, What is the purpose of the Data Bus?","The Data Bus is a Bi-Directional bus, transferring data to and from the device and peripherals."
"In the context of the C64, What is the capacity of the Data Bus?",The Data Bus can drive one standard TTL load and 130 pf.
"In the context of the C64, What is the purpose of the Reset signal?",The Reset signal is used to reset or start the microprocessor from a power down condition.
"In the context of the C64, What happens when the Reset signal is held low?",Writing to or from the microprocessor is inhibited.
"In the context of the C64, What happens when the Reset signal is held low for at least two clock cycles?",The mask interrupt flag will be set and the microprocessor will load the program counter from the memory vector locations FFFC and FFFD.
"In the context of the C64, What is the purpose of the Interrupt Request signal?",The Interrupt Request signal requests that an interrupt sequence begin within the microprocessor.
"In the context of the C64, What happens when an interrupt is requested?",The microprocessor will complete the current instruction being executed before recognizing the request.
"In the context of the C64, What is the purpose of the Address Enable Control signal?",The Address Enable Control signal allows easy DMA and multiprocessor systems.
"In the context of the C64, What is the purpose of the I/O Port?",The I/O Port is used to transfer data to or from peripheral devices.
"In the context of the C64, What is the capacity of the I/O Port?",The I/O Port can drive one standard TTL load and 130 pf.
"In the context of the C64, What is the purpose of the Read/Write signal?",The Read/Write signal is used to control the direction of data transfers on the Data Bus.
"In the context of the C64, What happens when the Read/Write signal is low?",The microprocessor is writing to memory or a peripheral device.
"In the context of the C64, What is the capacity of the Read/Write signal?",The Read/Write signal is high except when the microprocessor is writing to memory or a peripheral device.
"In the context of the C64, What is the purpose of the microprocessor's clock signal?",The clock signal is used to control the timing of the microprocessor's operations.
"In the context of the C64, What is the purpose of the microprocessor's Address Bus?",The Address Bus is used to transfer data to and from the device and peripherals.
"In the context of the C64, What is the purpose of the microprocessor's Data Bus?","The Data Bus is a Bi-Directional bus, transferring data to and from the device and peripherals."
"In the context of the C64, What is the purpose of the microprocessor's Reset signal?",The Reset signal is used to reset or start the microprocessor from a power down condition.
"In the context of the C64, What is the purpose of the microprocessor's Interrupt Request signal?",The Interrupt Request signal requests that an interrupt sequence begin within the microprocessor.
"In the context of the C64, What is the purpose of the microprocessor's Address Enable Control signal?",The Address Enable Control signal allows easy DMA and multiprocessor systems.
"In the context of the C64, What is the purpose of the microprocessor's I/O Port?",The I/O Port is used to transfer data to or from peripheral devices.
"In the context of the C64, What is the purpose of the microprocessor's Read/Write signal?",The Read/Write signal is used to control the direction of data transfers on the Data Bus.
"In the context of the C64, What is the capacity of the microprocessor's clock signal?",The clock signal is used to control the timing of the microprocessor's operations.
"In the context of the C64, What is the capacity of the microprocessor's Address Bus?",The Address Bus is used to transfer data to and from the device and peripherals.
"In the context of the C64, What is the capacity of the microprocessor's Data Bus?","The Data Bus is a Bi-Directional bus, transferring data to and from the device and peripherals."
"In the context of the C64, What is the capacity of the microprocessor's Reset signal?",The Reset signal is used to reset or start the microprocessor from a power down condition.
"In the context of the C64, What is the capacity of the microprocessor's Interrupt Request signal?",The Interrupt Request signal requests that an interrupt sequence begin within the microprocessor.
"In the context of the C64, What is the capacity of the microprocessor's Address Enable Control signal?",The Address Enable Control signal allows easy DMA and multiprocessor systems.
"In the context of the C64, What is the capacity of the microprocessor's I/O Port?",The I/O Port is used to transfer data to or from peripheral devices.
"In the context of the C64, What is the capacity of the microprocessor's Read/Write signal?",The Read/Write signal is used to control the direction of data transfers on the Data Bus.
"In the context of the C64, Is the 6526 Complex Interface Adapter (CIA) a peripheral interface device?","Yes, the 6526 Complex Interface Adapter (CIA) is a 65XX bus compatible peripheral interface device with extremely flexible timing and I/O capabilities."
"In the context of the C64, What are the features of the 6526 Complex Interface Adapter (CIA)?","The 6526 Complex Interface Adapter (CIA) has 16 individually programmable 110 lines, 8 or 16-Bit handshaking on read or write, 2 independent, linkable 16-Bit interval timers, 24-hour (AM/PM) time of day clock with programmable alarm, 8-Bit shift register for serial I/O, 2 TTL load capability, CMOS compatible I/O lines, and 1 or 2 MHz operation available."
"In the context of the C64, What is the purpose of the 6526 Complex Interface Adapter (CIA)?",The purpose of the 6526 Complex Interface Adapter (CIA) is to provide a peripheral interface device with extremely flexible timing and I/O capabilities.
"In the context of the C64, Can the 6526 Complex Interface Adapter (CIA) be used for serial I/O?","Yes, the 6526 Complex Interface Adapter (CIA) has an 8-Bit shift register for serial I/O."
"In the context of the C64, Is the 6526 Complex Interface Adapter (CIA) compatible with CMOS?","Yes, the 6526 Complex Interface Adapter (CIA) has CMOS compatible I/O lines."
"In the context of the C64, Can the 6526 Complex Interface Adapter (CIA) be used for 1 or 2 MHz operation?","Yes, the 6526 Complex Interface Adapter (CIA) can operate at 1 or 2 MHz."
"In the context of the C64, What are the pin configurations of the 6526 Complex Interface Adapter (CIA)?","The 6526 Complex Interface Adapter (CIA) has a pin configuration that includes Vss, PA0-PA7, PB0-PB7, /PC, TOD, Vcc, and /IRQ."
"In the context of the C64, Is the 6526 Complex Interface Adapter (CIA) a 65XX bus compatible device?","Yes, the 6526 Complex Interface Adapter (CIA) is a 65XX bus compatible device."
"In the context of the C64, PLP is used for what purpose?",Pull Processor Status from Stack
"In the context of the C64, ROL is used for what operation?",Rotate One Bit Left (Memory or Accumulator)
"In the context of the C64, RTI is used for what action?",Return from Interrupt
"In the context of the C64, RTS is used for what action?",Return from Subroutine
"In the context of the C64, SBC is used for what operation?",Subtract Memory from Accumulator with Borrow
"In the context of the C64, SEC is used for what action?",Set Carry Flag
"In the context of the C64, SED is used for what action?",Set Decimal Mode
"In the context of the C64, SEI is used for what action?",Set Interrupt Disable Status
"In the context of the C64, STA is used for what operation?",Store Accumulator in Memory
"In the context of the C64, STX is used for what operation?",Store Index X in Memory
"In the context of the C64, STY is used for what operation?",Store Index Y in Memory
"In the context of the C64, TAX is used for what operation?",Transfer Accumulator to Index X
"In the context of the C64, TAY is used for what operation?",Transfer Accumulator to Index Y
"In the context of the C64, TSX is used for what operation?",Transfer Stack Pointer to Index X
"In the context of the C64, TXA is used for what operation?",Transfer Index X to Accumulator
"In the context of the C64, TXS is used for what operation?",Transfer Index X to Stack Pointer
"In the context of the C64, TYA is used for what operation?",Transfer Index Y to Accumulator
"In the context of the C64, Indexed indirect only allows usage of the X register as the index.",The X register is used as the index in indexed indirect mode.
"In the context of the C64, Actual base address is the actual address because the index has already been used for the indirect.",The actual base address is the actual address because the index has already been used for the indirect.
"In the context of the C64, Indexed indirect would also be used if a table of indirect pointers were located in zero page memory.",Indexed indirect would also be used if a table of indirect pointers were located in zero page memory.
"In the context of the C64, The actual address will be: Low order = contents of ($02+X), High order = contents of ($03+X), X register = $00.",The actual address is the indirect address contained in $02 which is again $1045.
"In the context of the C64, The title of this mode does in fact imply the principle, although it may be difficult to grasp at first sight.","The title of this mode does in fact imply the principle, although it may be difficult to grasp at first sight."
"In the context of the C64, Look at it this way: I am going to deliver this letter to the fourth post office at address $01,MEMORY ST., and the address on the letter will then be delivered to $1600, MEMORY street.","Look at it this way: I am going to deliver this letter to the fourth post office at address $01,MEMORY ST., and the address on the letter will then be delivered to $1600, MEMORY street."
"In the context of the C64, The code: LDA #$00 - load low order actual base address, STA $06 - set the low byte of the indirect address, LDA #$16 - load high order indirect address, STA $07 - set the high byte of the indirect address, LDX #$05 - set the indirect index (X), LDA ($02,X) - load indirectly indexed by X.","The code: LDA #$00 - load low order actual base address, STA $06 - set the low byte of the indirect address, LDA #$16 - load high order indirect address, STA $07 - set the high byte of the indirect address, LDX #$05 - set the indirect index (X), LDA ($02,X) - load indirectly indexed by X."
"In the context of the C64, The instruction to load the accumulator in the indexed indirect mode is executed and the specified zero page address is $02.",The instruction to load the accumulator in the indexed indirect mode is executed and the specified zero page address is $02.
"In the context of the C64, Can you change the characters stored in ROM?","Yes, by changing the memory location that tells the VIC-II chip where to find the characters."
"In the context of the C64, Can you customize characters?","Yes, by programming the character memory pointer to point to RAM."
"In the context of the C64, What happens if you use your own character set?","The standard Commodore 64 characters become unavailable, so you must copy the ones you want to use into your own character memory in RAM."
"In the context of the C64, What happens to your BASIC program when you use your own character set?","It takes up memory space, so you must be careful to protect the character set from being overwritten."
"In the context of the C64, Can you use location 0 for your character set?","No, because the system stores important data there."
"In the context of the C64, Can you use location 2048 for your character set?","No, because that's where your BASIC program starts."
"In the context of the C64, What is the best place to put your character set for use with BASIC?",'Beginning at 12288 ($3000 in HEX) is recommended.
"In the context of the C64, Can you use the standard Commodore 64 characters with your own character set?","No, you must copy them into your own character memory in RAM."
"In the context of the C64, What happens if you don't copy the standard Commodore 64 characters?",They become unavailable.
"In the context of the C64, Can you choose which standard Commodore 64 characters to copy?","Yes, you can pick and choose which ones you want."
"In the context of the C64, Can you keep the standard Commodore 64 characters in order?","No, you don't have to keep them in order."
"In the context of the C64, Can you use the same memory for your BASIC program and character set?","No, you must protect the character set from being overwritten."
"In the context of the C64, Can you use location 53272 for your character set?","Yes, by POKEing the low 4 bits of that location."
"In the context of the C64, Can you start your character set at location 0?","No, because the system stores important data there."
"In the context of the C64, Can you start your character set at location 2048?","No, because that's where your BASIC program starts."
"In the context of the C64, Can you start your character set at location 12288?","Yes, that's a recommended starting position."
"In the context of the C64, Can you use the same memory for your character set and graphics?","No, you must copy the graphics into your own character memory in RAM."
"In the context of the C64, Can you use the same memory for your character set and letters?","No, you must copy the letters into your own character memory in RAM."
"In the context of the C64, Can you use the same memory for your character set and numbers?","No, you must copy the numbers into your own character memory in RAM."
"In the context of the C64, Can you use the same memory for your character set and standard Commodore 64 graphics?","No, you must copy the graphics into your own character memory in RAM."
"In the context of the C64, Can you use the same memory for your character set and standard Commodore 64 letters?","No, you must copy the letters into your own character memory in RAM."
"In the context of the C64, Can you use the same memory for your character set and standard Commodore 64 numbers?","No, you must copy the numbers into your own character memory in RAM."
"In the context of the C64, Can you use the same memory for your character set and standard Commodore 64 graphics, letters, and numbers?","No, you must copy them into your own character memory in RAM."
"In the context of the C64, Can you use the same memory for your character set and standard Commodore 64 characters?","No, you must copy the characters into your own character memory in RAM."
"In the context of the C64, What is the frequency of the clock used as the 65XX processor Phase 0?",1-MHz
"In the context of the C64, What is the clock used as the 65XX processor Phase 0?",1-MHz clock
"In the context of the C64, What is the clock frequency generated by dividing the 8-MHz video input clock by?",eight
"In the context of the C64, What is the clock frequency generated by dividing the 8-MHz video input clock?",1-MHz
"In the context of the C64, What is the clock used as the 65XX processor Phase 0 in?",1-MHz clock
"In the context of the C64, What is the clock frequency generated by dividing the 8-MHz video input clock by eight?",1-MHz
"In the context of the C64, What is the clock frequency generated by dividing the 8-MHz video input clock?",1-MHz
"In the context of the C64, What is the clock used as the 65XX processor Phase 0 in?",1-MHz clock
"In the context of the C64, What is the clock frequency generated by dividing the 8-MHz video input clock?",1-MHz
"In the context of the C64, What is the clock used as the 65XX processor Phase 0?",1-MHz clock
"In the context of the C64, Does the 6566/6567 video controller interact with the system data bus?",Yes
"In the context of the C64, What is the purpose of the AEC signal in the 6566/6567 devices?",To disable the processor address bus drivers
"In the context of the C64, What is the frequency of the 1-MHz clock provided by the video chips?",1 MHz
"In the context of the C64, What is the duration of a memory cycle in the 6566/6567 devices?",500 ns
"In the context of the C64, What is the purpose of the BA signal in the 6566/6567 devices?",To indicate that the video chip will require a Phase 2 data access
"In the context of the C64, How many Phase-2 times are allowed after BA low for the processor to complete any current memory accesses?",Three
"In the context of the C64, What is the purpose of the sprite data fetches in the 6566/6567 devices?",To fetch sprite data
"In the context of the C64, How many memory accesses are required to fetch the video matrix pointers?",40
"In the context of the C64, What is the condition for fetching sprite pointers in the 6566/6567 devices?",Every other Phase 1 at the end of each raster line
"In the context of the C64, What is the purpose of the 6566/6567 devices in the system?",To provide the interface control signals required to maintain bus sharing
"In the context of the C64, What is the duration of a character pointer fetch in the 6566/6567 devices?",40 consecutive Phase 2 accesses
"In the context of the C64, What is the purpose of the 1-MHz clock in the 6566/6567 devices?",To provide a clock for the video chips
"In the context of the C64, What is the condition for fetching sprite data in the 6566/6567 devices?",Every eighth raster line during the display window
"In the context of the C64, Which video interface chip has thirteen fully decoded addresses?",The 6566
"In the context of the C64, What is the difference between the 6566 and 6567 video interface chips?","The 6566 has thirteen fully decoded addresses for direct connection to the system address bus, while the 6567 has multiplexed addresses for direct connection to 64K dynamic RAMS."
"In the context of the C64, What is the purpose of the pins A11-A07 on the 6567?",The pins A11-A07 on the 6567 are static address outputs to allow direct connection of these bits to a conventional 16K (2K*8) ROM.
"In the context of the C64, What is the significance of the /RAS signal in the 6567?","/RAS is brought low while the least significant address bits, A06-A00, are present."
"In the context of the C64, What is the significance of the /CAS signal in the 6567?","/CAS is brought low while the most significant bits, A13-A08, are present."
"In the context of the C64, What is the purpose of the address output configurations in the 6566 and 6567?",The address output configurations allow direct connection to the system address bus or 64K dynamic RAMS.
"In the context of the C64, What is the difference in address output configurations between the 6566 and 6567?","The 6566 has thirteen fully decoded addresses, while the 6567 has multiplexed addresses."
"In the context of the C64, What is the purpose of the external latching in the 6567?",The external latching is required for the lower order addresses.
"In the context of the C64, What is the purpose of the address bits A06-A00 in the 6567?",The address bits A06-A00 are present on A06-A00 while /RAS is brought low.
"In the context of the C64, What is the purpose of the address bits A13-A08 in the 6567?",The address bits A13-A08 are present on A05-A00 while /CAS is brought low.
"In the context of the C64, SID: What is the number of semitones in an octave?",12
"In the context of the C64, SID: What is the frequency of A-4 in concert pitch?",440 Hz
"In the context of the C64, SID: What is the formula for calculating the frequency of each semitone?",The 12th root of 2 times the frequency of the previous semitone
"In the context of the C64, SID: What is the purpose of the table in Appendix E?",To produce the notes of the equal-tempered scale
"In the context of the C64, SID: What is the range of the oscillators?",(Not specified)
"In the context of the C64, SID: What is the size of the note look-up table?",192 bytes
"In the context of the C64, SID: What is the size of the optimized note look-up table?",24 bytes
"In the context of the C64, SID: How many entries are in the optimized note look-up table?",12
"In the context of the C64, SID: What is the purpose of dividing the 16-bit value by two?",To calculate notes in lower octaves
"In the context of the C64, SID: What is the range of the note B-7?",(Beyond the range of the oscillators)
"In the context of the C64, SID: What is the purpose of including note B-7 in the table?",For calculation purposes
"In the context of the C64, SID: What is the format of specifying a note?",One byte with the lower nybble selecting the semitone and the upper nybble selecting the octave
"In the context of the C64, SID: What is the purpose of the division routine?",To determine how many times the table value must be right-shifted
"In the context of the C64, SID: What is the number of bits necessary to select 1 of 12 semitones?",4 bits
"In the context of the C64, SID: What is the number of bits necessary to select 1 of 8 octaves?",3 bits
"In the context of the C64, SID: What is the total number of bits necessary to specify a note?",7 bits
"In the context of the C64, SID: What is the purpose of the SID Oscillator frequency control registers?",To produce the notes of the equal-tempered scale
"In the context of the C64, SID: What is the frequency of the master clock?",1.02 MHz
"In the context of the C64, SID: What is the equation given in the Register Description?",(Not specified)
"In the context of the C64, SID: What is the purpose of the Register Description?",To provide an equation for use of other master clock frequencies
"In the context of the C64, SID: What is the purpose of the equal-tempered scale?",To provide a simple and quick method for generating the scale
"In the context of the C64, SID: What is the memory efficiency of the optimized note look-up table?",Improved
"In the context of the C64, SID: What is the size of the optimized note look-up table in bytes?",24 bytes
"In the context of the C64, SID: What is the number of notes per octave?",12
"In the context of the C64, SID: What is the purpose of the note look-up table?",To generate the equal-tempered scale
"In the context of the C64, SID: What is the purpose of the SID Oscillator?",To produce the notes of the equal-tempered scale
"In the context of the C64, SID: What is the frequency of the note A-4 in concert pitch?",440 Hz
"In the context of the C64, SID: What is the purpose of the SID Oscillator frequency control registers?",To produce the notes of the equal-tempered scale
"In the context of the C64, SID: What is the purpose of the SID Oscillator?",To produce the notes of the equal-tempered scale
"In the context of the C64, What is another important principle in machine language?",Testing and detecting certain conditions
"In the context of the C64, What happens to the zero result flag when an instruction has a zero result?",It is set
"In the context of the C64, What is the purpose of the BEQ instruction?",To branch if the result is equal to zero
"In the context of the C64, What is the opposite of the BEQ instruction?","BNE, which means Branch on result Not Equal to zero"
"In the context of the C64, What happens to the X index register when it reaches its maximum value?",It wraps around to zero
"In the context of the C64, What is the purpose of the INX instruction?",To increment the X index register
"In the context of the C64, What is the opposite of the INX instruction?","DEX, which is decrement the X index register"
"In the context of the C64, What are the comparison instructions used for?",To test the index registers with specific values or memory locations
"In the context of the C64, What is the purpose of the CPX instruction?",To compare the X register with a specific value
"In the context of the C64, What happens when the CPX instruction is used with the BEQ instruction?",The program branches to another part of the program if the condition is true
"In the context of the C64, What is the range of a branch instruction in 64MON?",From 128 bytes backward to 127 bytes forward
"In the context of the C64, What happens if a branch instruction goes out of range in 64MON?",The assembler refuses to assemble that instruction
"In the context of the C64, What is the advantage of using an assembler like 64MON?",It calculates the correct offset for the branch instruction
"In the context of the C64, Add memory to accumulator with carry",ADC operation adds the carry flag to the accumulator and the memory location
"In the context of the C64, ADC operation",ADC operation adds the carry flag to the accumulator and the memory location
"In the context of the C64, What is the purpose of ADC operation",ADC operation adds the carry flag to the accumulator and the memory location
"In the context of the C64, What is the format of ADC operation","ADC operation is in the format of A + M + C -> A, C"
"In the context of the C64, What is the result of ADC operation","The result of ADC operation is the sum of the accumulator, the memory location and the carry flag"
"In the context of the C64, What is the use of ADC operation",ADC operation is used to add the carry flag to the accumulator and the memory location
"In the context of the C64, What is the format of ADC operation","ADC operation is in the format of A + M + C -> A, C"
"In the context of the C64, What is the result of ADC operation","The result of ADC operation is the sum of the accumulator, the memory location and the carry flag"
"In the context of the C64, What is the purpose of ADC operation",ADC operation adds the carry flag to the accumulator and the memory location
"In the context of the C64, What is the format of ADC operation","ADC operation is in the format of A + M + C -> A, C"
"In the context of the C64, What is the result of ADC operation","The result of ADC operation is the sum of the accumulator, the memory location and the carry flag"
"In the context of the C64, what is the purpose of the 02 clock input",The 02 clock is a TTL compatible input used for internal device operation and as a timing reference for communicating with the system data bus.
"In the context of the C64, what is the function of the /CS-Chip Select Input",The /CS input controls the activity of the 6526. A low level on /CS while 02 is high causes the device to respond to signals on the R/W and address (RS) lines.
"In the context of the C64, what is the purpose of the R/W-Read/Write Input",The R/W signal is normally supplied by the microprocessor and controls the direction of data transfers of the 6526.
"In the context of the C64, what are the functions of the RS3-RS0-Address Inputs",The address inputs select the internal registers as described by the Register Map.
"In the context of the C64, what is the purpose of the DB7-DB0-Data Bus Inputs/Outputs",The eight data bus pins transfer information between the 6526 and the system data bus.
"In the context of the C64, what is the purpose of the IRQ-Interrupt Request Output",IRQ is an open drain output normally connected to the processor interrupt input.
"In the context of the C64, what is the purpose of the /RES-Reset Input",A low on the RES pin resets all internal registers.
"In the context of the C64, what is the purpose of the 6526 interface signals",The 6526 interface signals are used for internal device operation and as a timing reference for communicating with the system data bus.
"In the context of the C64, what is the function of the /CS-Chip Select Input in the 6526 interface signals",The /CS input controls the activity of the 6526.
"In the context of the C64, what is the purpose of the R/W-Read/Write Input in the 6526 interface signals",The R/W signal is normally supplied by the microprocessor and controls the direction of data transfers of the 6526.
"In the context of the C64, Is the accumulator used in accumulator addressing?",Yes
"In the context of the C64, What is the second byte of the instruction used for in immediate addressing?",Contains the operand
"In the context of the C64, What is the purpose of the third byte in absolute addressing?",Specifies the eight high order bits of the effective address
"In the context of the C64, What is the advantage of zero page addressing?",Faster execution times
"In the context of the C64, What is the purpose of the index register in indexed zero page addressing?",To calculate the effective address
"In the context of the C64, What is the difference between indexed zero page and absolute addressing?",Indexed zero page does not cross page boundaries
"In the context of the C64, What is implied addressing?",The address is implicitly stated in the operation code
"In the context of the C64, What is the purpose of the offset in relative addressing?",To establish a destination for the conditional branch
"In the context of the C64, What is the range of the offset in relative addressing?",-128 to +127 bytes
"In the context of the C64, What is the purpose of the X index register in indexed indirect addressing?",To add to the second byte of the instruction
"In the context of the C64, What is the purpose of the Y index register in indirect indexed addressing?",To add to the second byte of the instruction
"In the context of the C64, What is the purpose of the program counter in absolute indirect addressing?",To load the high order byte of the effective address
"In the context of the C64, What is the purpose of the second byte in absolute indirect addressing?",Contains the low order eight bits of a memory location
"In the context of the C64, What is the purpose of the third byte in absolute indirect addressing?",Contains the high order eight bits of a memory location
"In the context of the C64, What is the purpose of the index register in indexed absolute addressing?",To add to the second and third bytes of the instruction
"In the context of the C64, What is the purpose of the Y index register in indexed absolute addressing?",To add to the second and third bytes of the instruction
"In the context of the C64, What is the purpose of the X index register in indexed absolute addressing?",To add to the second and third bytes of the instruction
"In the context of the C64, What is the purpose of the program counter in indexed absolute addressing?",To add to the second and third bytes of the instruction
"In the context of the C64, What is the purpose of the index register in indirect indexed addressing?",To add to the second byte of the instruction
"In the context of the C64, What is the purpose of the Y index register in indirect indexed addressing?",To add to the second byte of the instruction
"In the context of the C64, What is the purpose of the X index register in indirect indexed addressing?",To add to the second byte of the instruction
"In the context of the C64, What is the purpose of the program counter in indirect indexed addressing?",To add to the second byte of the instruction
"In the context of the C64, What is the purpose of the index register in absolute indirect addressing?",To add to the second byte of the instruction
"In the context of the C64, What is the purpose of the Y index register in absolute indirect addressing?",To add to the second byte of the instruction
"In the context of the C64, What is the purpose of the X index register in absolute indirect addressing?",To add to the second byte of the instruction
"In the context of the C64, What is the purpose of the program counter in absolute indirect addressing?",To add to the second byte of the instruction
"In the context of the C64, What is the purpose of the index register in indexed zero page addressing?",To add to the second byte of the instruction
"In the context of the C64, What is the purpose of the Y index register in indexed zero page addressing?",To add to the second byte of the instruction
"In the context of the C64, What is the purpose of the X index register in indexed zero page addressing?",To add to the second byte of the instruction
"In the context of the C64, Call address of SCREEN function",$FFED (hex) 65517 (decimal)
"In the context of the C64, Registers affected by SCREEN function","X, Y"
"In the context of the C64, Preparatory routines for SCREEN function",
"In the context of the C64, Stack requirements for SCREEN function",2
"In the context of the C64, Registers used for communication in SCREEN function","X, Y"
"In the context of the C64, Description of SCREEN function","This routine returns the format of the screen, e.g., 40 columns in X and 25 lines in Y."
"In the context of the C64, Machine compatibility feature of SCREEN function",This function has been implemented on the Commodore 64 to help upward compatibility of your programs.
"In the context of the C64, Usage of SCREEN function",Call this routine.
"In the context of the C64, Example of using SCREEN function",JSR SCREEN STX MAXCOL STY MAXROW
"In the context of the C64, kernal error code: What is the meaning of error code 0?",Routine terminated by the <STOP> key
"In the context of the C64, kernal error code: What happens when the carry bit of the accumulator is set?",The number of the error message is returned in the accumulator
"In the context of the C64, kernal error code: What is the purpose of the KERNAL READST routine?",Errors are identified using this routine instead of the error codes
"In the context of the C64, kernal error code: What is the meaning of error code 1?",Too many open files
"In the context of the C64, kernal error code: What is the meaning of error code 2?",File already open
"In the context of the C64, kernal error code: What is the meaning of error code 3?",File not open
"In the context of the C64, kernal error code: What is the meaning of error code 4?",File not found
"In the context of the C64, kernal error code: What is the meaning of error code 5?",Device not present
"In the context of the C64, kernal error code: What is the meaning of error code 6?",File is not an input file
"In the context of the C64, kernal error code: What is the meaning of error code 7?",File is not an output file
"In the context of the C64, kernal error code: What is the meaning of error code 8?",File name is missing
"In the context of the C64, kernal error code: What is the meaning of error code 9?",Illegal device number
"In the context of the C64, kernal error code: What is the purpose of the KERNAL routines?",To provide a list of error messages
"In the context of the C64, What is the first action taken by the KERNAL on power-up?","The KERNAL first resets the stack pointer, and clears decimal mode."
"In the context of the C64, What happens if an autostart ROM cartridge is present at location $8000 HEX?","Normal initialization is suspended, and control is transferred to the cartridge code."
"In the context of the C64, What is set up in the RAM TEST routine?",The top and bottom of memory pointers are set.
"In the context of the C64, What is the purpose of the RAM TEST routine?",It is a nondestructive test starting at location $0300 and working upward.
"In the context of the C64, What is used to start BASIC?",The indirect at $A000 is used to start BASIC.
"In the context of the C64, STA stands for ?",Store accumulator in memory
"In the context of the C64, Addressing Mode",Addressing Mode
"In the context of the C64, STA Oper",Store Accumulator
"In the context of the C64, STA Oper,X",Store Accumulator with X
"In the context of the C64, STA Oper",Store Accumulator
"In the context of the C64, STA Oper,X",Store Accumulator with X
"In the context of the C64, STA Oper, Y",Store Accumulator with Y
"In the context of the C64, STA (Oper,X)",Store Accumulator with X
"In the context of the C64, STA (Oper),Y",Store Accumulator with Y
"In the context of the C64, PHA instruction pushes what on the stack?",accumulator
"In the context of the C64, What is the operation of the PHA instruction?",A toS
"In the context of the C64, What is the OP CODE of the PHA instruction?",48
"In the context of the C64, How many bytes does the PHA instruction occupy?",1
"In the context of the C64, How many cycles does the PHA instruction take?",3
"In the context of the C64, What is the addressing mode of the PHA instruction?",Implied
"In the context of the C64, What is the assembly language form of the PHA instruction?",PHA
"In the context of the C64, What is the purpose of the PHA instruction?",Push accumulator on stack
"In the context of the C64, What is the number of cycles the PHA instruction takes?",3
"In the context of the C64, What is the number of bytes the PHA instruction occupies?",1
"In the context of the C64, Can the VIC-II chip detect collisions between sprites?","Yes, it can detect collisions between sprites."
"In the context of the C64, What can the VIC-II chip detect collisions between?","The VIC-II chip can detect collisions between sprites, or between sprites and background data."
"In the context of the C64, What is a collision in the context of the VIC-II chip?",A collision occurs when a non-zero part of a sprite overlaps a non-zero portion of another sprite or characters on the screen.
"In the context of the C64, Can the VIC-II chip detect collisions between sprites and background data?","Yes, it can detect collisions between sprites and background data."
"In the context of the C64, What happens when a collision occurs in the context of the VIC-II chip?",A collision occurs when a non-zero part of a sprite overlaps a non-zero portion of another sprite or characters on the screen.
"In the context of the C64, Can the VIC-II chip detect collisions between sprites and characters?","Yes, it can detect collisions between sprites and characters."
"In the context of the C64, What is the purpose of collision detection in the VIC-II chip?",The purpose of collision detection is to detect when a non-zero part of a sprite overlaps a non-zero portion of another sprite or characters on the screen.
"In the context of the C64, Can the VIC-II chip detect collisions between sprites and sprites?","Yes, it can detect collisions between sprites."
"In the context of the C64, Can the VIC-II chip detect collisions between background data and characters?","Yes, it can detect collisions between background data and characters."
"In the context of the C64, What is the VIC-II chip's ability to detect collisions useful for?",The VIC-II chip's ability to detect collisions is useful for detecting when a non-zero part of a sprite overlaps a non-zero portion of another sprite or characters on the screen.
"In the context of the C64, What is the Commodore computer equipped with?",an electronic music synthesizer
"In the context of the C64, What are the three voices of the synthesizer?","totally addressable, ATTACK/DECAY/SUSTAIN/RELEASE (ADSR), filtering, modulation, and 'white noise'"
"In the context of the C64, What is the name of the sound and music synthesizer chip?",'SID' chip
"In the context of the C64, What is the purpose of the Programmer's Reference Guide?",to help you explore all the capabilities of the 6581 'SID' chip
"In the context of the C64, What is the minimum programming experience required to use the music synthesizer?","none, you don't need to be an experienced programmer"
"In the context of the C64, What is the way to get to the sound generator?",by POKEing into specified memory locations
"In the context of the C64, What is the full list of memory locations used for music synthesis?",provided in Appendix O
"In the context of the C64, What is the POKE statement used for?",sets the indicated memory location equal to a specified value
"In the context of the C64, What is the range of numbers that can be used in a POKE statement?","between 0 and 255, inclusive"
"In the context of the C64, What is the PEEK function used for?",to get the current contents of a memory location
"In the context of the C64, What is the purpose of the BASIC Statements section of the manual?",to explain other BASIC commands
"In the context of the C64, What is the range of memory locations used for music synthesis?","54272 to 54296, inclusive"
"In the context of the C64, What is the starting memory location for music synthesis?",54272
"In the context of the C64, What is the formula to calculate the memory location for music synthesis?",add a number from 0 through 24 to 54272
"In the context of the C64, What is the purpose of the Programmer's Reference Guide?",to help you explore all the capabilities of the 6581 'SID' chip
"In the context of the C64, What is the name of the sound and music synthesizer chip?",'SID' chip
"In the context of the C64, What is the minimum programming experience required to use the music synthesizer?","none, you don't need to be an experienced programmer"
"In the context of the C64, For sprites: Can you POKE an X position?","To place the sprite at one of these positions, just type the X-POSITION POKE for the sprite you're using. For example, to POKE sprite I at the farthest left X position IN THE VIEWING AREA, type: POKE V+2,24."
"In the context of the C64, What are the possible values of X for Positioning sprites?","The possible values of X are 0 to 255, counting from left to right. Values 0 to 23 place all or part of the sprite OUT OF THE VIEWING AREA off the left side of the screen... values 24 to 255 place the sprite IN THE VIEWING AREA up to the 255th position."
"In the context of the C64, How do you access screen positions beyond the 255th position?","To get beyond the 255th position across the screen, you need to make a SECOND POKE using the numbers in the 'RIGHT X' row of the chart (Figure 3-5)."
"In the context of the C64, Sprite to background priority is controlled by what register?",The SPRITE-BACKGROUND priority register located at 53275 ($D01B)
"In the context of the C64, Is the priority of each sprite controllable?",Yes
"In the context of the C64, What happens if the bit in the SPRITE-BACKGROUND priority register is 0?",The sprite appears in front of the background data
"In the context of the C64, What happens if the bit in the SPRITE-BACKGROUND priority register is 1?",The sprite appears behind the background data
"In the context of the C64, Can a sprite have a higher priority than the background?",Yes
"In the context of the C64, Can a sprite have a lower priority than the background?",Yes
"In the context of the C64, What is the location of the SPRITE-BACKGROUND priority register?",53275 ($D01B)
"In the context of the C64, What determines the priority of each sprite?",The bit in the SPRITE-BACKGROUND priority register
"In the context of the C64, Is the priority of each sprite independent?",No
"In the context of the C64, PHP processor status is pushed with which opcode?",08
"In the context of the C64, what is PHP doing ?",Push Processor Status on Stack
"In the context of the C64, PHP processor status is pushed in which bytes?",1
"In the context of the C64, PHP processor status is pushed in which cycles?",3
"In the context of the C64, PHP processor status is pushed in which addressing mode?",Implied
"In the context of the C64, PHP processor status is pushed in which assembly language form?",PHP
"In the context of the C64, PHP processor status is pushed in which operation?",P toS
"In the context of the C64, what does STX do?",Stores the contents of the X register into memory.
"In the context of the C64, What is the operation code for STX in Zero Page mode?",86
"In the context of the C64, What is the number of bytes required for STX in Zero Page mode?",2
"In the context of the C64, What is the number of cycles required for STX in Zero Page mode?",3
"In the context of the C64, What is the operation code for STX in Absolute mode?",8E
"In the context of the C64, What is the number of bytes required for STX in Absolute mode?",3
"In the context of the C64, What is the number of cycles required for STX in Absolute mode?",4
"In the context of the C64, What is the addressing mode for STX in Zero Page,Y mode?","Zero Page,Y"
"In the context of the C64, What is the operation code for STX in Zero Page,Y mode?",96
"In the context of the C64, What is the number of bytes required for STX in Zero Page,Y mode?",2
"In the context of the C64, What is the number of cycles required for STX in Zero Page,Y mode?",4
"In the context of the C64, Is the KERNAL a jump table?","Yes, it is a collection of JMP instructions to many operating system routines."
"In the context of the C64, What is the purpose of the KERNAL?",To provide easy access to the operating system and speed machine language programming.
"In the context of the C64, What must you do before calling a KERNAL routine?",Make all the preparations that the routine demands.
"In the context of the C64, What happens if a KERNAL routine expects you to put a number in the accumulator?","That number must be there, otherwise your routines have little chance of working as expected."
"In the context of the C64, What instruction is used to call a KERNAL routine?",The JSR instruction.
"In the context of the C64, What happens when a KERNAL routine has finished its task?",Control is returned to your program at the instruction after the JSR.
"In the context of the C64, What should you do if a KERNAL routine returns an error code?","Handle it properly, otherwise your program might 'bomb'."
"In the context of the C64, What are the three simple steps to using the KERNAL?","Set up, call the routine, and error handling."
"In the context of the C64, What is the purpose of the COMMUNICATION REGISTERS?",To pass parameters to and from the KERNAL routines.
"In the context of the C64, What is the purpose of the PREPARATORY ROUTINES?",To set up data before the KERNAL routine can operate.
"In the context of the C64, What happens if you ignore an error return from a KERNAL routine?",The rest of your program might 'bomb'.
"In the context of the C64, What is the purpose of the STACK REQUIREMENTS?",To indicate the actual number of stack bytes used by the KERNAL routine.
"In the context of the C64, What is the purpose of the REGISTERS AFFECTED?",To list all the registers used by the KERNAL routine.
"In the context of the C64, What is the purpose of the DESCRIPTION?",To provide a short tutorial on the function of the KERNAL routine.
"In the context of the C64, What is the purpose of the USER CALLABLE KERNAL ROUTINES?",To provide a list of available KERNAL routines.
"In the context of the C64, What is the purpose of the SCNKEY routine?",To scan the keyboard.
"In the context of the C64, What is the purpose of the SCREEN routine?","To return the X,Y organization of the screen."
"In the context of the C64, What is the purpose of the SECOND routine?",To send the secondary address after LISTEN.
"In the context of the C64, What is the purpose of the SETLFS routine?","To set the logical, first, and second addresses."
"In the context of the C64, What is the purpose of the SETMSG routine?",To control KERNAL messages.
"In the context of the C64, What is the purpose of the SETNAM routine?",To set the file name.
"In the context of the C64, What is the purpose of the SETTIM routine?",To set the real time clock.
"In the context of the C64, What is the purpose of the SETTMO routine?",To set the timeout on the serial bus.
"In the context of the C64, What is the purpose of the STOP routine?",To scan the stop key.
"In the context of the C64, What is the purpose of the TALK routine?",To command the serial bus device to TALK.
"In the context of the C64, What is the purpose of the TKSA routine?",To send the secondary address after TALK.
"In the context of the C64, What is the purpose of the UDTIM routine?",To increment the real time clock.
"In the context of the C64, What is the purpose of the UNLSN routine?",To command the serial bus to UNLISTEN.
"In the context of the C64, What is the purpose of the UNTLK routine?",To command the serial bus to UNTALK.
"In the context of the C64, What is the purpose of the VECTOR routine?",To read or set vectored I/O.
"In the context of the C64, Can you use machine language on the Commodore 64?","Yes, there are several methods to use machine language on the Commodore 64."
"In the context of the C64, What is the SYS statement used for?",The SYS statement is used to jump to a machine language subroutine located at a specific address.
"In the context of the C64, What is the USR function used for?",The USR function is used to transfer control to a machine language subroutine located at the address stored in locations 785 and 786.
"In the context of the C64, What is the KERNAL VECTOR routine used for?",The KERNAL VECTOR routine is used to change any of the vectors in the vector table located on page 3.
"In the context of the C64, What is the HARDWARE INTERRUPT (IRQ) VECTOR used for?",The HARDWARE INTERRUPT (IRQ) VECTOR is used to change the routine that is executed every 1/60th of a second.
"In the context of the C64, Why is it important to disable interrupts before changing the IRQ vector?",It is important to disable interrupts before changing the IRQ vector to prevent unexpected behavior.
"In the context of the C64, What is the CHRGET routine used for?",The CHRGET routine is used by BASIC to get each character/token.
"In the context of the C64, How can you add new BASIC commands?",You can add new BASIC commands by specifying a special character that will occur before any of the new commands.
"In the context of the C64, What is a wedge in the context of the Commodore 64?",A wedge is a technique used to add new BASIC commands by specifying a special character that will occur before any of the new commands.
"In the context of the C64, Can you use machine language routines from BASIC?","Yes, you can use machine language routines from BASIC using the SYS statement."
"In the context of the C64, What is the difference between the SYS and USR statements?","The SYS statement jumps to a machine language subroutine located at a specific address, while the USR statement transfers control to a machine language subroutine located at the address stored in locations 785 and 786."
"In the context of the C64, How do you pass parameters between machine language routines and BASIC programs?","You can pass parameters between machine language routines and BASIC programs using the BASIC PEEK and POKE statements, and their machine language equivalents."
"In the context of the C64, What is the most useful method of combining BASIC with machine language?",The most useful method of combining BASIC with machine language is the SYS command.
"In the context of the C64, Can you have multiple SYS statements in a program?","Yes, you can have multiple SYS statements in a program, each to a different or the same machine language routine."
"In the context of the C64, What is the floating point accumulator used for?",The floating point accumulator is used to pass values between machine language routines and BASIC programs.
"In the context of the C64, What is the RTS instruction used for?",The RTS instruction is used to return control to BASIC from a machine language routine.
"In the context of the C64, What is the RTI instruction used for?",The RTI instruction is used to return control to the normal IRQ handling routine from a machine language routine.
"In the context of the C64, Can you change the KERNAL VECTOR routine?","Yes, you can change the KERNAL VECTOR routine to replace or augment the standard system routine."
"In the context of the C64, What is the KERNAL VECTOR routine used for?",The KERNAL VECTOR routine is used to change any of the vectors in the vector table located on page 3.
"In the context of the C64, Can you change the HARDWARE INTERRUPT (IRQ) VECTOR?","Yes, you can change the HARDWARE INTERRUPT (IRQ) VECTOR to replace or augment the standard system routine."
"In the context of the C64, What is the CHRGET routine used for?",The CHRGET routine is used by BASIC to get each character/token.
"In the context of the C64, How do you add new BASIC commands?",You can add new BASIC commands by specifying a special character that will occur before any of the new commands.
"In the context of the C64, What is a wedge in the context of the Commodore 64?",A wedge is a technique used to add new BASIC commands by specifying a special character that will occur before any of the new commands.
"In the context of the C64, Send secondary address for LISTEN","This routine is used to send a secondary address to an I/O device after a call to the LISTEN routine is made, and the device is commanded to LISTEN."
"In the context of the C64, Call address of SECOND routine",$FF93 (hex) 65427 (decimal)
"In the context of the C64, Registers affected by SECOND routine",A
"In the context of the C64, Preparatory routines for SECOND routine",LISTEN
"In the context of the C64, Error returns for SECOND routine",See READST
"In the context of the C64, Stack requirements for SECOND routine",8
"In the context of the C64, Description of SECOND routine","This routine is used to send a secondary address to an I/O device after a call to the LISTEN routine is made, and the device is commanded to LISTEN."
"In the context of the C64, Use of SECOND routine",The routine canNOT be used to send a secondary address after a call to the TALK routine.
"In the context of the C64, Secondary address usage",A secondary address is usually used to give setup information to a device before I/O operations begin.
"In the context of the C64, ORing secondary address with",$60
"In the context of the C64, How to use SECOND routine",1) load the accumulator with the secondary address to be sent. 2) Call this routine.
"In the context of the C64, Example of using SECOND routine",;ADDRESS DEVICE #8 WITH COMMAND (SECONDARY ADDRESS) #15 LDA #8 JSR LISTEN LDA #15 JSR SECOND
"In the context of the C64, What is the purpose of the VECTOR routine?",Manage RAM vectors
"In the context of the C64, What is the call address of the VECTOR routine?",$FF8D (hex) 65421 (decimal)
"In the context of the C64, What communication registers are used by the VECTOR routine?","X, Y"
"In the context of the C64, What is the stack requirement of the VECTOR routine?",2
"In the context of the C64, What registers are affected by the VECTOR routine?","A, X, Y"
"In the context of the C64, What happens when the accumulator carry bit is set when calling the VECTOR routine?",Stores the current contents of the RAM vectors in a list pointed to by the X and Y registers
"In the context of the C64, What happens when the accumulator carry bit is clear when calling the VECTOR routine?",Transfers the user list pointed to by the X and Y registers to the system RAM vectors
"In the context of the C64, What is the recommended way to use the VECTOR routine?","Read the entire vector contents into the user area, alter the desired vectors, and then copy the contents back to the system vectors"
"In the context of the C64, How do you read the system RAM vectors?","Set the carry, set the X and Y registers to the address to put the vectors, and call the VECTOR routine"
"In the context of the C64, How do you load the system RAM vectors?","Clear the carry bit, set the X and Y registers to the address of the vector list in RAM that must be loaded, and call the VECTOR routine"
"In the context of the C64, What is the purpose of the SCNKEY function?",Scan the keyboard
"In the context of the C64, What is the call address of the SCNKEY function?",$FF9F (hex) 65439 (decimal)
"In the context of the C64, What is the purpose of the IOINIT preparatory routine?",Preparatory routines: IOINIT
"In the context of the C64, What registers are affected by the SCNKEY function?","Registers affected: A, X, Y"
"In the context of the C64, What is the stack requirement for the SCNKEY function?",Stack requirements: 5
"In the context of the C64, What happens if a key is down when the SCNKEY function is called?","If a key is down, its ASCII value is placed in the keyboard queue"
"In the context of the C64, What is the purpose of the interrupt handler in the SCNKEY function?",This routine is called only if the normal IRQ interrupt is bypassed
"In the context of the C64, What is the purpose of the GETIN and CHROUT routines in the SCNKEY function?","GETIN: GET CHARACTER, CHROUT: PRINT IT"
"In the context of the C64, What is the return value of the SCNKEY function?",
"In the context of the C64, Can the Commodore 64 have more than one joystick connected?","Yes, the Commodore 64 has two 9-pin Game Ports which allow the use of joysticks, paddies, or a light pen."
"In the context of the C64, What is the purpose of the 6526 CIA chip?",The 6526 CIA chip is used to handle the paddle fire buttons and keyboard scanning.
"In the context of the C64, What are the five distinct switches on a digital joystick?","The five distinct switches on a digital joystick are used for direction and the fire button. The switches are arranged as shown: (Top) FIRE (Switch 4), UP (Switch 0), LEFT (Switch 2), RIGHT (Switch 3), and DOWN (Switch 1)."
"In the context of the C64, How are the joystick switches represented in memory?",The joystick switches are represented in memory locations 56320 and 56321.
"In the context of the C64, What is the purpose of the fire button on a joystick?",The fire button is used to change the bit (bit 4 in this case) to a 0 when pressed.
"In the context of the C64, What is the purpose of the subroutine in BASIC?",The subroutine is used to read the joystick from BASIC.
"In the context of the C64, what is the operation being performed by TAX?",The operation being performed is a transfer of the accumulator to index X
"In the context of the C64, TAX: what is the accumulator being transferred to",Index X
"In the context of the C64, TAX: what is the instruction being performed on",The accumulator
"In the context of the C64, TAX: what is the assembly language form of the instruction",TAX
"In the context of the C64, TAX: what is the op code of the instruction",AA
"In the context of the C64, TAX: how many bytes does the instruction occupy",1
"In the context of the C64, TAX: how many cycles does the instruction take",2
"In the context of the C64, TAX: what is the addressing mode of the instruction",Implied
"In the context of the C64, TAX: what is the purpose of the instruction",To transfer the accumulator to index X
"In the context of the C64, What is the purpose of the PEEK and POKE commands in CBM BASIC?",changing memory locations
"In the context of the C64, What is the term for the unique number that identifies each memory location?",address
"In the context of the C64, What is the analogy used to describe the memory in the Commodore 64?",street of buildings
"In the context of the C64, What is the purpose of the PEEK command?",changing memory locations
"In the context of the C64, What is the purpose of the POKE command?",changing memory locations
"In the context of the C64, What is the term for the number on each door in the memory street analogy?",address
"In the context of the C64, What is the purpose of the street of buildings analogy in describing memory?",to explain how memory is used
"In the context of the C64, What is the purpose of the PEEK command in graphics on the screen?",changing memory locations
"In the context of the C64, What is the purpose of the POKE command in sound effects?",changing memory locations
"In the context of the C64, What is the term for the number that identifies each memory location in the street of buildings analogy?",address
"In the context of the C64, Displaying a sprite beyond the 255th X position requires a special POKE which sets the most significant bit of the X position and starts over at the 256th pixel position across the screen.",True
"In the context of the C64, What is the starting point for the X counter when displaying a sprite beyond the 255th X position?",The 256th pixel position across the screen
"In the context of the C64, Chip register 24 contains the overall volume control.",The volume can be set anywhere between 0 and 15.
"In the context of the C64, Volume control is set between what values?",The volume can be set anywhere between 0 and 15.
"In the context of the C64, What is the range of volume control?",The volume can be set anywhere between 0 and 15.
"In the context of the C64, What is the purpose of chip register 24?",Chip register 24 contains the overall volume control.
"In the context of the C64, What is the range of volume control in chip register 24?",The volume can be set anywhere between 0 and 15.
"In the context of the C64, What is the function of chip register 24?",Chip register 24 contains the overall volume control.
"In the context of the C64, What is the range of volume control?",The volume can be set anywhere between 0 and 15.
"In the context of the C64, What is the purpose of the IOBASE routine?",Define I/O memory page
"In the context of the C64, What is the call address of the IOBASE routine?",$FFF3 (hex) 65523 (decimal)
"In the context of the C64, What registers are affected by the IOBASE routine?","X, Y"
"In the context of the C64, What is the stack requirement for the IOBASE routine?",2
"In the context of the C64, What is the purpose of the X register in the IOBASE routine?",contains the low order address byte
"In the context of the C64, What is the purpose of the Y register in the IOBASE routine?",contains the high order address byte
"In the context of the C64, How do you access the I/O location after calling the IOBASE routine?",Load the Y register with the offset and access that I/O location
"In the context of the C64, What is the benefit of using the IOBASE routine?","provide compatibility between Commodore 64, VIC-20, and future models"
"In the context of the C64, What is the instruction used to call the IOBASE routine?",JSR
"In the context of the C64, What is the purpose of storing the X and Y registers in consecutive locations?",to set the base registers
"In the context of the C64, Sound is created by the movement of what in waves?",air
"In the context of the C64, What is the time between one peak of a wave and the next?",number of seconds
"In the context of the C64, What is the reciprocal of the number of seconds?",cycles per second
"In the context of the C64, What determines the highness or lowness of a sound?",frequency of the sound waves produced
"In the context of the C64, What uses two locations to determine the frequency?",sound generator in your Commodore computer
"In the context of the C64, What is the formula to represent the frequency?",Fn = Fout/.06097
"In the context of the C64, What is the next step after figuring out what Fn is?",create the high and low frequency values for that note
"In the context of the C64, What is the formula to set the high frequency location?",Fhi=INT(Fn/256)
"In the context of the C64, What is the formula to set the low frequency location?",Flo=Fn-(256*Fhi)
"In the context of the C64, What can you do with your computer after playing with one voice?",become the maestro conducting your own computer orchestra
"In the context of the C64, What is the purpose of the IOINIT function?",Initialize I/O devices
"In the context of the C64, What is the call address of the IOINIT function?",$FF84 (hex) 65412 (decimal)
"In the context of the C64, What registers are affected by the IOINIT function?","A, X, Y"
"In the context of the C64, What is the description of the IOINIT function?",This routine initializes all input/output devices and routines.
"In the context of the C64, What is the normal use of the IOINIT function?",It is normally called as part of the initialization procedure of a Commodore 64 program cartridge.
"In the context of the C64, What is the result of not initializing I/O devices?",Error returns
"In the context of the C64, What is the stack requirement of the IOINIT function?",
"In the context of the C64, What are the preparatory routines of the IOINIT function?",
"In the context of the C64, What are the communication registers of the IOINIT function?",
"In the context of the C64, Can sprites appear to move in front of or behind each other on the screen?",Sprites can actually make different sprites seem to move in front of or behind each other on the screen.
"In the context of the C64, What determines which sprites have priority over others when they overlap on the screen?",The built-in SPRITE PRIORITIES determine which sprites have priority over others when 2 or more sprites overlap on the screen.
"In the context of the C64, What is the rule for determining sprite priorities?","The rule is 'first come, first served' which means lower-numbered sprites automatically have priority over higher-numbered sprites."
"In the context of the C64, What happens when two sprites overlap on the screen?",The sprite with the lower number will appear to be in front of the sprite with the higher number.
"In the context of the C64, What is the priority of sprite 0?",Sprite 0 always supersedes all the other sprites because it's the lowest numbered sprite.
"In the context of the C64, What is the priority of sprite 7?","Sprite 7 has less priority than any of the other sprites, and will always appear to be displayed behind any other sprites which overlap its position."
"In the context of the C64, How do sprite priorities work?","The priority of a sprite is determined by its number, with lower-numbered sprites having priority over higher-numbered sprites."
"In the context of the C64, What is the effect of changing the sprite priorities in the program?",You should see a white sprite on top of a yellow sprite on top of an orange sprite.
"In the context of the C64, Can you move sprites and take advantage of their priorities in your animation?","Of course, now that you see how priorities work, you can also move sprites and take advantage of these priorities in your animation."
"In the context of the C64, What is the primary function of the Commodore 64's keyboard?",allows you to type on the keyboard
"In the context of the C64, What is the built-in editor on the Commodore 64?",SCREEN EDITOR
"In the context of the C64, What are some of the basic functions of the SCREEN EDITOR?","move the cursor, DELete, INSert, etc."
"In the context of the C64, What is the purpose of the BASIC INTERPRETER?","interprets each command, one by one"
"In the context of the C64, What happens if the BASIC INTERPRETER encounters a command it does not understand?",the familiar message appears: ?SYNTAX ERROR
"In the context of the C64, What is the name of the program that runs the appropriate machine language depending on the CBM BASIC command?",BASIC INTERPRETER
"In the context of the C64, What is the name of the huge machine language program that runs the CBM BASIC commands?",huge machine language program
"In the context of the C64, What is the purpose of the SCREEN EDITOR in the Commodore 64?","allows you to move the cursor, DELete, INSert, etc."
"In the context of the C64, What is the name of the message that appears when the BASIC INTERPRETER encounters an unknown command?",?SYNTAX ERROR
"In the context of the C64, What is the purpose of the READY message in the Commodore 64?",indicates the system is ready for the next command
"In the context of the C64, Get data from the serial bus?",The purpose of the ACPTR function is to get data from the serial bus.
"In the context of the C64, ACPTR function call address?",$FFA5 (hex) 65445 (decimal) is the call address of the ACPTR function.
"In the context of the C64, What communication registers are used?",The A communication register is used by the ACPTR function.
"In the context of the C64, How many stack requirements does ACPTR have?",The ACPTR function has a stack requirement of 13.
"In the context of the C64, What registers are affected by ACPTR?",The ACPTR function affects the A and X registers.
"In the context of the C64, what does STY stand for?",Store Y
"In the context of the C64, What is the purpose of the STY operation?",to store index Y in memory
"In the context of the C64, What is the abbreviation for the STY operation?",STY
"In the context of the C64, What is the assembly language form of the STY operation?",STY Oper
"In the context of the C64, What is the OP CODE for the STY operation in Zero Page mode?",84
"In the context of the C64, How many bytes does the STY operation in Zero Page mode use?",2
"In the context of the C64, How many cycles does the STY operation in Zero Page mode take?",3
"In the context of the C64, What is the OP CODE for the STY operation in Absolute mode?",8C
"In the context of the C64, How many bytes does the STY operation in Absolute mode use?",3
"In the context of the C64, How many cycles does the STY operation in Absolute mode take?",4
"In the context of the C64, What is the addressing mode for the STY operation in Zero Page,X mode?","Zero Page,X"
"In the context of the C64, What is the call address of the UNTLK function?",$FFAB (hex) 65451 (decimal)
"In the context of the C64, What is the purpose of the UNTLK function?",Send an UNTALK command
"In the context of the C64, What registers are affected by the UNTLK function?",Registers affected: A
"In the context of the C64, What is the stack requirement for the UNTLK function?",8
"In the context of the C64, What is the error return for the UNTLK function?",See READST
"In the context of the C64, What is the description of the UNTLK function?",This routine transmits an UNTALK command on the serial bus.
"In the context of the C64, What devices will stop sending data when the UNTLK command is received?",All devices previously set to TALK
"In the context of the C64, What is the preparatory routine for the UNTLK function?",
"In the context of the C64, What is the communication register for the UNTLK function?",
"In the context of the C64, RS232: Closing an RS-232 data channel discards all data in the buffers at the time of execution",True
"In the context of the C64, RS232: What happens to the RTS and transmitted data lines when closing an RS-232 channel?",Sets the RTS and transmitted data (Sout) lines high
"In the context of the C64, RS232: What is the purpose of the CLOSE command in RS-232?",To discard all data in the buffers and stop transmitting and receiving
"In the context of the C64, RS232: What happens to the RS-232 buffers when closing an RS-232 channel?",Removes both RS-232 buffers
"In the context of the C64, RS232: What is the syntax for closing an RS-232 channel?",CLOSE lfn
"In the context of the C64, RS232: What is the KERNAL entry for closing an RS-232 channel?",$FFC3
"In the context of the C64, RS232: What should be done before closing an RS-232 channel?",Ensure all data is transmitted
"In the context of the C64, RS232: What is the purpose of the check in BASIC to ensure all data is transmitted?",To check if SS=0 or SS=8
"In the context of the C64, RS232: What happens if the data is not transmitted before closing an RS-232 channel?",Data loss
"In the context of the C64, RS232: What is the purpose of the 6526 device?",To provide a 3-line interface
"In the context of the C64, RS232: What is the purpose of the RTS line?",To request to send data
"In the context of the C64, RS232: What is the purpose of the DTR line?",To indicate data terminal ready
"In the context of the C64, RS232: What is the purpose of the RI line?",To indicate ring indicator
"In the context of the C64, RS232: What is the purpose of the DCD line?",To indicate received line signal
"In the context of the C64, RS232: What is the purpose of the CTS line?",To indicate clear to send
"In the context of the C64, RS232: What is the purpose of the DSR line?",To indicate data set ready
"In the context of the C64, RS232: What is the purpose of the Sout line?",To transmit data
"In the context of the C64, RS232: What is the purpose of the Sin line?",To receive data
"In the context of the C64, RS232: What is the purpose of the GND line?",To provide a protective ground
"In the context of the C64, RS232: What is the purpose of the PA2 line?",To transmit data
"In the context of the C64, RS232: What is the purpose of the PB0 line?",To receive data
"In the context of the C64, RS232: What is the purpose of the PB1 line?",To request to send data
"In the context of the C64, RS232: What is the purpose of the PB2 line?",To indicate data terminal ready
"In the context of the C64, RS232: What is the purpose of the PB3 line?",To indicate ring indicator
"In the context of the C64, RS232: What is the purpose of the PB4 line?",To indicate received line signal
"In the context of the C64, RS232: What is the purpose of the PB5 line?",Unused
"In the context of the C64, RS232: What is the purpose of the PB6 line?",To clear to send
"In the context of the C64, RS232: What is the purpose of the PB7 line?",To indicate data set ready
"In the context of the C64, RS232: What is the purpose of the ST variable?",To read the RS-232 status word
"In the context of the C64, RS232: What is the purpose of the SR variable?",To assign the ST variable to another variable
"In the context of the C64, RS232: What happens to the RS-232 status word when the RS-232 channel is closed?",It is cleared
"In the context of the C64, Command a device on the serial bus to what?",TALK
"In the context of the C64, What is the call address of the TALK function?",$FFB4 (hex) 65460 (decimal)
"In the context of the C64, What communication registers are used by the TALK function?",A
"In the context of the C64, What is the purpose of the TALK function?",Command a device on the serial bus to TALK
"In the context of the C64, What is the stack requirement for the TALK function?",8
"In the context of the C64, What registers are affected by the TALK function?",A
"In the context of the C64, How do you use the TALK function?","Load the accumulator with the device number, then call this routine"
"In the context of the C64, What is the range of device numbers that can be loaded into the accumulator?",0 to 31
"In the context of the C64, What happens when the TALK function is called?",The data is transmitted as a command on the serial bus
"In the context of the C64, What is the purpose of the SETLFS routine?",Set up a logical file
"In the context of the C64, What is the call address of the SETLFS routine?",$FFBA (hex) 65466 (decimal)
"In the context of the C64, What communication registers are used by the SETLFS routine?","A, X, Y"
"In the context of the C64, What is the stack requirement of the SETLFS routine?",2
"In the context of the C64, What is the purpose of the logical file number?",used by the system as a key to the file table created by the OPEN file routine
"In the context of the C64, What are the possible device addresses?",0 to 31
"In the context of the C64, What is the meaning of device number 4 or greater?",devices on the serial bus
"In the context of the C64, What is the purpose of the Y index register?",to send a secondary address on the serial bus
"In the context of the C64, How do you load the Y index register?",set to 255
"In the context of the C64, What is the purpose of the SETLFS routine?","sets the logical file number, device address, and secondary address for other KERNAL routines"
"In the context of the C64, How do you write machine language programs?","You must use either a program to do this, or write for yourself a BASIC program that allows you to write machine language."
"In the context of the C64, What is the most common method used to write machine language programs?",Assembler programs are the most common method used to write machine language programs.
"In the context of the C64, What is an assembler?",An assembler is a program that allows you to write machine language instructions in a standardized mnemonic format.
"In the context of the C64, What is the purpose of an assembler?",The purpose of an assembler is to make machine language programs more readable by allowing you to write machine language instructions in a standardized mnemonic format.
"In the context of the C64, What is the difference between an assembler and a disassembler?","An assembler is a program that allows you to write machine language instructions in a standardized mnemonic format, while a disassembler is a program that displays a machine language program in mnemonic format."
"In the context of the C64, What is a machine language monitor cartridge?","A machine language monitor cartridge is a cartridge made by Commodore that includes an assembler and disassembler, among other features."
"In the context of the C64, What is the purpose of a machine language monitor cartridge?",The purpose of a machine language monitor cartridge is to provide a tool for writing and editing machine language programs.
"In the context of the C64, What is the importance of using a program to write machine language programs?",Using a program to write machine language programs is important because it allows you to write machine language instructions in a standardized mnemonic format.
"In the context of the C64, What are the benefits of using an assembler?",The benefits of using an assembler include making machine language programs more readable and allowing you to write machine language instructions in a standardized mnemonic format.
"In the context of the C64, What are the limitations of writing machine language programs without an assembler?",Writing machine language programs without an assembler can be difficult and may result in a stream of numbers that is hard to read.
"In the context of the C64, What is the operation of TXA?",TXA Transfer index X to accumulator
"In the context of the C64, What is the purpose of TXA?",TXA Transfer index X to accumulator
"In the context of the C64, What is the assembly language form of TXA?",Assembly Language Form: TXA
"In the context of the C64, What is the OP CODE of TXA?",OP CODE: 8A
"In the context of the C64, How many bytes does TXA take?",No. Bytes: 1
"In the context of the C64, How many cycles does TXA take?",No. Cycles: 2
"In the context of the C64, VIC is located at which memory range",D000-D3FF
"In the context of the C64, The Commodore 64 has how many open I/O slots",2
"In the context of the C64, What is the purpose of the two open I/O slots","General purpose user I/O, special purpose I/O cartridges"
"In the context of the C64, What is the purpose of the Z-80 cartridge",Enabling the CP/M option
"In the context of the C64, What is the auto-start feature of the Commodore 64",Starting the program in a Commodore 64 Expansion Cartridge
"In the context of the C64, What are the specific data required for auto-start",First nine bytes of the cartridge ROM starting at location 32768
"In the context of the C64, What are the two vectors required for the cartridge program",Cold Start and Warm Start vectors
"In the context of the C64, What are the letters required in the cartridge ROM",CBM
"In the context of the C64, What are the last two bytes required in the cartridge ROM",80
"In the context of the C64, What is the purpose of the CIA1 and CIA2",Keyboard and Serial Bus/RS-232
"In the context of the C64, Can you turn on individual sprites?","Yes, you can turn on any individual sprite by using POKE V+21 and the number from the chart."
"In the context of the C64, What happens when you turn on just one sprite?","When you turn on just one sprite, it will turn off any others."
"In the context of the C64, How do you turn on two or more sprites?",You can turn on two or more sprites by adding together the numbers of the sprites you want to turn on.
"In the context of the C64, What is the method to turn one sprite off and on without affecting others?","The method is to use POKE V+21, PEEK V+21 AND (255-1) to turn off a sprite, and POKE V+21, PEEK(V+21) OR 1 to re-enable the sprite."
"In the context of the C64, What is the range of memory locations for more than 3 sprites?",The range is from 12288 to 12798.
"In the context of the C64, What is the range of memory locations for 1 to 3 sprites?",The range is from 832 to 1023.
"In the context of the C64, What is the purpose of the RESTOR function?",Restore default system and interrupt vectors
"In the context of the C64, What is the call address of the RESTOR function?",$FF8A (hex) 65418 (decimal)
"In the context of the C64, What is the number of preparatory routines for the RESTOR function?",
"In the context of the C64, What is the error return for the RESTOR function?",
"In the context of the C64, What is the stack requirement for the RESTOR function?",2
"In the context of the C64, What registers are affected by the RESTOR function?","A, X, Y"
"In the context of the C64, What does the RESTOR function restore?",default values of all system vectors used in KERNAL and BASIC routines and interrupts
"In the context of the C64, What is the KERNAL VECTOR routine used for?",to read and alter individual system vectors
"In the context of the C64, What is the purpose of the KERNAL VECTOR routine?",to read and alter individual system vectors
"In the context of the C64, How do you use the RESTOR function?",Call this routine
"In the context of the C64, What is an example of using the RESTOR function?",JSR RESTOR
"In the context of the C64, Can you detect sprite collisions using a specific line of code?","Yes, you can detect sprite collisions using the line IF PEEK(V+30)ANDX=XTHEN [insert action here]."
"In the context of the C64, What does the value of X represent in the line IF PEEK(V+30)ANDX=XTHEN [insert action here]?","X equals 1 for sprite 0, 2 for sprite 1, 4 for sprite 2, 8 for sprite 3, 16 for sprite 4, 32 for sprite 5, 64 for sprite 6, and 128 for sprite 7."
"In the context of the C64, How do you check if a sprite has collided with a 'BACKGROUND CHARACTER'?",You use the line IF PEEK(V+31)ANDX=XTHEN [insert action here].
"In the context of the C64, Color memory can move?",No
"In the context of the C64, Where is color memory located?",Locations 55296 through 56295 ($D800 through $DBE7)
"In the context of the C64, What is the range of screen memory?",The 1000 locations starting at 1024
"In the context of the C64, What happens to a picture when displayed in a different graphics mode?",It will often look completely different
"In the context of the C64, What is the purpose of color memory?",It is used to store colors
"In the context of the C64, Can color memory be moved?",No
"In the context of the C64, What is the range of color memory?",Locations 55296 through 56295 ($D800 through $DBE7)
"In the context of the C64, What is the difference between color memory and screen memory?",They are used differently in different graphics modes
"In the context of the C64, What happens to a picture when created in one graphics mode?",It will often look different when displayed in another graphics mode
"In the context of the C64, Can you create multi-colored sprites?","Yes, you can create multi-colored sprites, but you need to use pairs of pixels instead of individual pixels."
"In the context of the C64, What is the requirement for using multi-color mode?",Using multi-color mode requires that you use pairs of pixels instead of individual pixels in your sprite picture.
"In the context of the C64, What are the colors you can choose from in multi-color mode?","You have 4 colors to choose from: Sprite Color, Multi-Color 1, Multi-Color 2, and Background Color."
"In the context of the C64, How do you determine the color of each pair of pixels?","The color of each pair of pixels is determined according to whether the left, right, or both pixels are solid."
"In the context of the C64, What happens when you make both pixels in a pair blank?","When you make both pixels in a pair blank, the inner screen color (background) shows through."
"In the context of the C64, What happens when you make the right pixel in a pair solid?","When you make the right pixel in a pair solid, both pixels in the pair are set to Multi-Color 1."
"In the context of the C64, What happens when you make the left pixel in a pair solid?","When you make the left pixel in a pair solid, both pixels in the pair are set to Sprite Color."
"In the context of the C64, What happens when you make both pixels in a pair solid?","When you make both pixels in a pair solid, both pixels in the pair are set to Multi-Color 2."
"In the context of the C64, How do you set the color of each pair of pixels?",You set the color of each pair of pixels by determining which bits in each pair are solid and which are blank.
"In the context of the C64, What is the purpose of adding the values of the solid pixels?",The purpose of adding the values of the solid pixels is to get the total value to POKE into the proper memory location.
"In the context of the C64, What is the memory location for the first block in a sprite?",The memory location for the first block in a sprite is 832.
"In the context of the C64, What is the purpose of using pairs of pixels in multi-color mode?",The purpose of using pairs of pixels in multi-color mode is to create multi-colored sprites.
"In the context of the C64, What are the advantages of using multi-color mode?",The advantages of using multi-color mode are that it allows you to create multi-colored sprites and adds visual appeal to your game.
"In the context of the C64, What are the limitations of using multi-color mode?",The limitations of using multi-color mode are that it requires the use of pairs of pixels instead of individual pixels.
"In the context of the C64, What is the most important thing to remember when using multi-color mode?",The most important thing to remember when using multi-color mode is to use pairs of pixels instead of individual pixels.
"In the context of the C64, What happens when you don't use pairs of pixels in multi-color mode?","When you don't use pairs of pixels in multi-color mode, your sprite will not be multi-colored."
"In the context of the C64, What is the best way to create a multi-colored sprite?",The best way to create a multi-colored sprite is to use pairs of pixels in multi-color mode.
"In the context of the C64, What are the benefits of using multi-color mode?",The benefits of using multi-color mode are that it adds visual appeal to your game and allows you to create multi-colored sprites.
"In the context of the C64, What is the most common mistake when using multi-color mode?",The most common mistake when using multi-color mode is not using pairs of pixels instead of individual pixels.
"In the context of the C64, What is the easiest way to create a multi-colored sprite?",The easiest way to create a multi-colored sprite is to use pairs of pixels in multi-color mode.
"In the context of the C64, What are the common challenges when using multi-color mode?",The common challenges when using multi-color mode are that it requires the use of pairs of pixels instead of individual pixels.
"In the context of the C64, What is the most important thing to consider when using multi-color mode?",The most important thing to consider when using multi-color mode is to use pairs of pixels instead of individual pixels.
"In the context of the C64, What are the common mistakes when using multi-color mode?",The common mistakes when using multi-color mode are not using pairs of pixels instead of individual pixels.
"In the context of the C64, What is the best way to avoid mistakes when using multi-color mode?",The best way to avoid mistakes when using multi-color mode is to use pairs of pixels instead of individual pixels.
"In the context of the C64, What are the benefits of using multi-color mode in a game?",The benefits of using multi-color mode in a game are that it adds visual appeal and allows you to create multi-colored sprites.
"In the context of the C64, What is the most important thing to remember when using multi-color mode in a game?",The most important thing to remember when using multi-color mode in a game is to use pairs of pixels instead of individual pixels.
"In the context of the C64, What are the common challenges when using multi-color mode in a game?",The common challenges when using multi-color mode in a game are that it requires the use of pairs of pixels instead of individual pixels.
"In the context of the C64, What is the best way to overcome these challenges?",The best way to overcome these challenges is to use pairs of pixels instead of individual pixels.
"In the context of the C64, What are the benefits of using multi-color mode in a game?",The benefits of using multi-color mode in a game are that it adds visual appeal and allows you to create multi-colored sprites.
"In the context of the C64, Is the KERNAL a standardized JUMP TABLE to the input, output, and memory management routines in the operating system?",Yes
"In the context of the C64, What is the purpose of the KERNAL in the Commodore 64 computer?",To simplify machine language programs and make them compatible with future operating system updates
"In the context of the C64, What is the KERNAL jump table used for?","To provide a standardized interface to the operating system's input, output, and memory management routines"
"In the context of the C64, Is the KERNAL jump table located in ROM?",Yes
"In the context of the C64, What is the advantage of using the KERNAL jump table?",It makes it easier to translate machine language programs from one Commodore computer to another
"In the context of the C64, What is the purpose of setting up parameters before using the KERNAL jump table?",To prepare the KERNAL routine for execution
"In the context of the C64, What happens after the KERNAL routine is executed?",Control is transferred back to the machine language program
"In the context of the C64, Can the KERNAL routine pass parameters back to the machine language program?",Yes
"In the context of the C64, What is the benefit of using the KERNAL jump table?",It allows machine language programs to work with future operating system updates
"In the context of the C64, Why is the KERNAL jump table used instead of directly JSR-ing to the KERNAL subroutine?",So that the jump table can adapt to changes in the KERNAL or BASIC
"In the context of the C64, What is the KERNAL in the Commodore 64 computer?",The operating system
"In the context of the C64, What is the purpose of the KERNAL in the Commodore 64 computer?","To control input, output, and memory management"
"In the context of the C64, Is the KERNAL jump table located at the end of the memory?",Yes
"In the context of the C64, What is the advantage of using the KERNAL jump table in machine language programs?",It saves time and makes it easier to modify programs
"In the context of the C64, Can the KERNAL routine be used to access the operating system's routines?",Yes
"In the context of the C64, What is the purpose of the 39 input/output routines in the KERNAL jump table?",To provide utilities for machine language programs
"In the context of the C64, Is the KERNAL jump table used to simplify machine language programs?",Yes
"In the context of the C64, What is the benefit of using the KERNAL jump table in machine language programs?",It makes it easier to translate programs from one Commodore computer to another
"In the context of the C64, Can the KERNAL routine be used to access the memory management routines?",Yes
"In the context of the C64, What is the purpose of the memory management routines in the KERNAL?",To manage memory allocation and deallocation
"In the context of the C64, Is the KERNAL jump table used to simplify machine language programs?",Yes
"In the context of the C64, What is the purpose of the input/output routines in the KERNAL?",To provide utilities for input and output operations
"In the context of the C64, Can the KERNAL routine be used to access the input/output routines?",Yes
"In the context of the C64, What is the purpose of the output routines in the KERNAL?",To provide utilities for output operations
"In the context of the C64, Is the KERNAL jump table used to simplify machine language programs?",Yes
"In the context of the C64, What is the purpose of the input routines in the KERNAL?",To provide utilities for input operations
"In the context of the C64, Can the KERNAL routine be used to access the input routines?",Yes
"In the context of the C64, What is the purpose of the KERNAL in the Commodore 64 computer?","To control input, output, and memory management"
"In the context of the C64, Is the KERNAL jump table used to simplify machine language programs?",Yes
"In the context of the C64, What is the purpose of the KERNAL jump table?",To provide a standardized interface to the operating system's routines
"In the context of the C64, Can the KERNAL routine be used to access the operating system's routines?",Yes
"In the context of the C64, What is the purpose of the KERNAL in the Commodore 64 computer?","To control input, output, and memory management"
"In the context of the C64, What is the 64MON cartridge used for?","allows you to escape from the world of CBM BASIC, into the land of machine language."
"In the context of the C64, What can the 64MON cartridge display?","the contents of the internal registers in the 6510 microprocessor, and it allows you to display portions of memory, and change them on the screen, using the screen editor."
"In the context of the C64, What features does the 64MON cartridge have?","a built-in assembler and disassembler, as well as many other features that allow you to write and edit machine language programs easily."
"In the context of the C64, Is an assembler necessary to write machine language programs?","no, but it is strongly suggested that you purchase an assembler of some sort."
"In the context of the C64, What is the recommended way to write machine language programs?","using an assembler, which is considerably easier than writing them without an assembler."
"In the context of the C64, What is the format of the machine language examples in this manual?","the format that 64MON uses, from now on."
"In the context of the C64, Are the machine language examples compatible with any assembler?","almost certainly, since nearly all assembler formats are the same."
"In the context of the C64, What is the importance of explaining the hexadecimal numbering system?",it must be explained before explaining any of the other features of 64MON.
"In the context of the C64, What is the 64MON cartridge used for in relation to CBM BASIC?","it allows you to escape from the world of CBM BASIC, into the land of machine language."
"In the context of the C64, What are the internal registers in the 6510 microprocessor?",the contents of which can be displayed by the 64MON cartridge.
"In the context of the C64, What is the purpose of the screen editor in the 64MON cartridge?",to display and change portions of memory on the screen.
"In the context of the C64, What does TXS do?",TXS Transfer index X to stack pointer
"In the context of the C64, What is the operation of TXS?",X -> S
"In the context of the C64, What is the assembly language form of TXS?",TXS
"In the context of the C64, What is the OP CODE of TXS?",9A
"In the context of the C64, What is the number of bytes of TXS?",1
"In the context of the C64, What is the number of cycles of TXS?",2
"In the context of the C64, What is the addressing mode of TXS?",Implied
"In the context of the C64, What is the assembly language form of the operation?",TXS
"In the context of the C64, What is the operation of TXS in assembly language?",X -> S
"In the context of the C64, Control system message output is controlled by which routine?",SETMSG
"In the context of the C64, What is the purpose of the SETMSG routine?",Control system message output
"In the context of the C64, What is the call address of the SETMSG routine?",$FF90 (hex) 65424 (decimal)
"In the context of the C64, What communication registers are affected by the SETMSG routine?",A
"In the context of the C64, What is the stack requirement for the SETMSG routine?",2
"In the context of the C64, What registers are affected by the SETMSG routine?",A
"In the context of the C64, What are the two types of messages that can be printed by the SETMSG routine?",error and control
"In the context of the C64, What determines where the message will come from in the SETMSG routine?",bits 6 and 7 of the accumulator value
"In the context of the C64, What is an example of an error message?",FILE NOT FOUND
"In the context of the C64, What is an example of a control message?",PRESS PLAY ON CASSETTE
"In the context of the C64, What is the purpose of the TKSA function?",Send a secondary address to a device commanded to TALK
"In the context of the C64, What is the call address of the TKSA function?",$FF96 (hex) 65430 (decimal)
"In the context of the C64, What communication registers are affected by the TKSA function?",A
"In the context of the C64, What preparatory routines must be performed before calling the TKSA function?",TALK
"In the context of the C64, What error returns can occur when calling the TKSA function?",See READST
"In the context of the C64, What is the stack requirement for the TKSA function?",8
"In the context of the C64, What registers are affected by the TKSA function?",A
"In the context of the C64, What is the range of numbers that can be loaded into the accumulator for the TKSA function?",0 and 31
"In the context of the C64, What is the purpose of the TALK routine in relation to the TKSA function?",It must be called before the TKSA function
"In the context of the C64, What is the consequence of calling the TKSA function after a LISTEN routine?",It will not work
"In the context of the C64, What is an example of how to use the TKSA function?",;TELL DEVICE #4 TO TALK WITH COMMAND #7
"In the context of the C64, what is the purpose of the two-byte pointer $00F7?",a two-byte pointer to the Receiver Buffer base location.
"In the context of the C64, what is the purpose of the two-byte pointer $00F9?",a two-byte pointer to the Transmitter Buffer base location.
"In the context of the C64, what are the two locations set up by the OPEN KERNAL routine?",the Receiver Buffer base location and the Transmitter Buffer base location
"In the context of the C64, what are the two locations pointing to?",different 256-byte buffers
"In the context of the C64, what happens when a zero is written into the high order bytes $00F8 and $00FA?",the locations are de-allocated
"In the context of the C64, who can de-allocate the buffer(s) for their own purposes?",the machine language programmer
"In the context of the C64, what must be taken care of when using a machine language program that allocates these buffers?",the top of memory pointers
"In the context of the C64, what is the importance of the two-byte pointers $00F7 and $00F9?",they point to different buffer locations
"In the context of the C64, what happens to the buffer(s) when the CLOSE KERNAL entry is called?",they are de-allocated
"In the context of the C64, What is the purpose of the SETTIM function?",Set the system clock
"In the context of the C64, What is the call address of the SETTIM function?",$FFDB (hex) 65499 (decimal)
"In the context of the C64, What registers are used for communication in the SETTIM function?","A, X, Y"
"In the context of the C64, What is the stack requirement for the SETTIM function?",2
"In the context of the C64, What is the maximum time that the SETTIM clock can count up to?","5,184,000 jiffies"
"In the context of the C64, What is the unit of time that the SETTIM clock updates every?",1/60th of a second
"In the context of the C64, What is the term for one 1/60th of a second"" in the SETTIM clock?""",'jiffy'
"In the context of the C64, What are the three bytes used to set the initial time setting in the SETTIM function?","most significant byte, next most significant byte, least significant byte"
"In the context of the C64, How many bytes are used to set the initial time setting in the SETTIM function?",3
"In the context of the C64, What is the example of setting the clock to 10 minutes in the SETTIM function?",;SET THE CLOCK TO 10 MINUTES = 3600 JIFFIES
"In the context of the C64, What is the purpose of the UNLSN routine?",Send an UNLISTEN command
"In the context of the C64, What is the call address of the UNLSN routine?",$FFAE (hex) 65454 (decimal)
"In the context of the C64, What communication registers are used by the UNLSN routine?",
"In the context of the C64, What is the stack requirement for the UNLSN routine?",8
"In the context of the C64, What registers are affected by the UNLSN routine?",A
"In the context of the C64, What is the effect of calling the UNLSN routine?",Commands all devices on the serial bus to stop receiving data from the Commodore 64
"In the context of the C64, What is the purpose of sending the UNLISTEN command?",To get off the serial bus so it can be used for other purposes
"In the context of the C64, What devices are affected by the UNLISTEN command?",Only devices previously commanded to listen
"In the context of the C64, What is the normal use of the UNLSN routine?",After the Commodore 64 is finished sending data to external devices
"In the context of the C64, What is the result of sending the UNLISTEN command?",The listening devices get off the serial bus
"In the context of the C64, SEI stands for?",SEI Set interrupt disable status
"In the context of the C64, SEI OP CODE?",OP CODE 78
"In the context of the C64, SEI No. Bytes ?",No. Bytes 1
"In the context of the C64, SEI No. Cycles ?",No. Cycles 2
"In the context of the C64, TSX instruction is used for what purpose?",Transfer stack pointer to index X
"In the context of the C64, TSX is an abbreviation for what?",TSX Transfer stack pointer to index X
"In the context of the C64, What is the operation of TSX?",S -> X
"In the context of the C64, What is the abbreviation for the instruction TSX?",TSX
"In the context of the C64, What is the purpose of the TSX instruction?",Transfer stack pointer to index X
"In the context of the C64, What is the assembly language form of the TSX instruction?",TSX
"In the context of the C64, What is the OP CODE of the TSX instruction?",BA
"In the context of the C64, What is the number of bytes required for the TSX instruction?",1
"In the context of the C64, What is the number of cycles required for the TSX instruction?",2
"In the context of the C64, What is the addressing mode of the TSX instruction?",Implied
"In the context of the C64, Can you set sprite pointers anywhere in RAM memory?","Yes, but be cautious of long BASIC programs overwriting sprite data."
"In the context of the C64, What happens if you set sprite pointers too low in memory?",A long BASIC program may overwrite your sprite data.
"In the context of the C64, Why might you want to set sprite pointers at a higher area of memory?",To protect an especially long BASIC program from overwriting sprite data.
"In the context of the C64, How many different sprites can you define with sprite pointers?",Up to 64 different sprites plus a sizable BASIC program.
"In the context of the C64, What is the purpose of redefining a particular sprite by changing its pointer?",To point the sprite at different areas of memory containing different sprite picture data.
"In the context of the C64, Can you use the same sprite pointer for multiple sprites?","Yes, to make multiple sprites have the same shape."
"In the context of the C64, What is the advantage of using the same sprite pointer for multiple sprites?",You can make multiple sprites have the same shape.
"In the context of the C64, How do you make multiple sprites have the same shape?",By using the same sprite pointer and memory location for the sprites.
"In the context of the C64, Can you use the same sprite pointer for sprites with different positions and colors?","Yes, as long as you use the same sprite pointer and memory location."
"In the context of the C64, Drawing a Commodore sprite is like coloring the empty spaces in a coloring book.",Drawing a Commodore sprite is like coloring the empty spaces in a coloring book.
"In the context of the C64, What is drawing a Commodore sprite similar to?",Drawing a Commodore sprite is similar to coloring the empty spaces in a coloring book.
"In the context of the C64, What are the tiny dots that make up a sprite?",The tiny dots that make up a sprite are called pixels.
"In the context of the C64, What do you have to do to draw a sprite?","You have to color in"" some of the pixels."""
"In the context of the C64, What is the spritemaking grid in Figure 3-6?",The spritemaking grid in Figure 3-6 is what a blank sprite looks like.
"In the context of the C64, What is a blank sprite like?",A blank sprite looks like the spritemaking grid in Figure 3-6.
"In the context of the C64, What are the small squares that make up a sprite?",The small squares that make up a sprite are called pixels.
"In the context of the C64, What is the purpose of coloring in pixels?",The purpose of coloring in pixels is to draw a sprite.
"In the context of the C64, What is the process of drawing a sprite?","The process of drawing a sprite is to color in"" some of the pixels."""
"In the context of the C64, Can a program be made shorter?","Yes, it can be made even shorter by 'crunching' it smaller."
"In the context of the C64, How can a program be made more efficient?","By 'crunching' it as follows: 10 PRINTCHR$(147):V=53248:POKEV+21,1:POKE2040.13:POKEV+39,1"
"In the context of the C64, What is the purpose of 'crunching' a program?",To make it fit in less memory and run more efficiently.
"In the context of the C64, What is the key to writing a short program?",Listing the key sprite settings on separate program lines.
"In the context of the C64, Can a program be made to run faster?","Yes, by 'crunching' it as follows: 10 PRINTCHR$(147):V=53248:POKEV+21,1:POKE2040.13:POKEV+39,1"
"In the context of the C64, What is the benefit of 'crunching' a program?",It makes the program fit in less memory and run more efficiently.
"In the context of the C64, Can a program be made to use less memory?","Yes, by 'crunching' it smaller."
"In the context of the C64, Can a program be made to use less memory and run faster?","Yes, by 'crunching' it as follows: 10 PRINTCHR$(147):V=53248:POKEV+21,1:POKE2040.13:POKEV+39,1"
"In the context of the C64, What are the two settings that must be poked to position a sprite on the screen?",The X position and the Y position
"In the context of the C64, What is the purpose of the X coordinate in positioning a sprite?",The horizontal position across the screen
"In the context of the C64, What is the purpose of the Y coordinate in positioning a sprite?",The vertical position up and down
"In the context of the C64, What is the size of a sprite in pixels?",24 across by 21 down
"In the context of the C64, What is the area of the sprite that is displayed when positioning a sprite?",The upper left corner of the entire sprite
"In the context of the C64, Which sprite has priority over all other sprites?",Sprite 0
"In the context of the C64, What happens to a sprite with lower priority when two sprites are in the same position?",The sprite with lower priority will be obscured or show through
"In the context of the C64, What is the rule for determining sprite priority?",Lower numbered sprites have priority over higher numbered sprites
"In the context of the C64, What happens to a sprite with higher priority when two sprites are in the same position?",The sprite with higher priority will appear in front of the sprite with lower priority
"In the context of the C64, What is the priority of Sprite 7?",Sprite 7 has no priority in relation to the other sprites
"In the context of the C64, What happens to a sprite with higher priority when it is in front of a sprite with lower priority?",The sprite with higher priority will appear in front of the sprite with lower priority
"In the context of the C64, What is the priority of Sprite 1?",Sprite 1 has priority over sprites 2-7
"In the context of the C64, What happens to a sprite with lower priority when it is behind a sprite with higher priority?",The sprite with lower priority will be obscured or show through
"In the context of the C64, What is the rule for determining which sprite appears in front of the other?",The sprite with higher priority will appear in front of the sprite with lower priority
"In the context of the C64, What happens to a sprite with lower priority when it is in front of a sprite with higher priority?",The sprite with lower priority will be obscured or show through
"In the context of the C64, TAY: Operation: A -> Y","The operation is A -> Y, which is a transfer operation."
"In the context of the C64, TAY: Assembly Language Form",The assembly language form is TAY.
"In the context of the C64, TAY: OP CODE",The OP code is A8.
"In the context of the C64, TAY: No. Bytes",The number of bytes is 1.
"In the context of the C64, TAY: No. Cycles",The number of cycles is 2.
"In the context of the C64, TAY: Addressing Mode",The addressing mode is Implied.
"In the context of the C64, TAY","The operation is TAY, which is a transfer operation."
"In the context of the C64, how to move the accumulator to index Y",The operation is transferring the accumulator to index Y.
"In the context of the C64, Is the Commodore 64 a 16-bit computer?","No, it has a 16-bit address bus but can address more than 64K bytes of memory."
"In the context of the C64, What is the total amount of RAM in the Commodore 64?",64K bytes
"In the context of the C64, What is the purpose of the 6510 processor chip?",It controls whether RAM or ROM or I/O will appear in certain portions of the system's memory.
"In the context of the C64, What is the input/output port used for?",To control whether RAM or ROM or I/O will appear in certain portions of the system's memory.
"In the context of the C64, What is the data direction register used for?",To control whether a given bit will be an input or an output.
"In the context of the C64, What is the purpose of the LORAM bit?",To bank the 8K byte BASIC ROM in and out of the microprocessor address space.
"In the context of the C64, What is the purpose of the HIRAM bit?",To bank the 8K byte KERNAL ROM in and out of the microprocessor address space.
"In the context of the C64, What is the purpose of the CHAREN bit?",To bank the 4K byte character generator ROM in or out of the microprocessor address space.
"In the context of the C64, What happens when the LORAM bit is programmed LOW?",The BASIC ROM will disappear from the memory map and be replaced by 8K bytes of RAM.
"In the context of the C64, What happens when the HIRAM bit is programmed LOW?",The KERNAL ROM will disappear from the memory map and be replaced by 8K bytes of RAM.
"In the context of the C64, What happens when the CHAREN bit is set to 1?","The I/O devices appear in the microprocessor address space, and the character ROM is not accessible."
"In the context of the C64, What happens when the CHAREN bit is cleared to 0?","The character ROM appears in the processor address space, and the I/O devices are not accessible."
"In the context of the C64, What is the purpose of the WRITE operation in ROM?",To store data in the RAM 'under' the ROM.
"In the context of the C64, What happens when a WRITE operation is performed on a ROM location?",Data is stored in the RAM 'under' the ROM.
"In the context of the C64, What is the purpose of the READ operation in ROM?",To return the contents of the ROM.
"In the context of the C64, What happens when a READ operation is performed on a ROM location?","The contents of the ROM are returned, not the 'hidden' RAM."
"In the context of the C64, What is the total amount of ROM in the Commodore 64?",20K bytes
"In the context of the C64, What is the purpose of the 20K bytes of ROM?","To contain BASIC, the operating system, and the standard character set."
"In the context of the C64, What is the purpose of the 4K chunk of memory?",To access input/output devices
"In the context of the C64, What is the secret to addressing more than 64K bytes of memory?",The 6510 processor chip itself
"In the context of the C64, What is the purpose of the input/output port?",To control whether RAM or ROM or I/O will appear in certain portions of the system's memory
"In the context of the C64, What is the purpose of the data direction register?",To control whether a given bit will be an input or an output
"In the context of the C64, What is the purpose of the LORAM bit?",To bank the 8K byte BASIC ROM in and out of the microprocessor address space
"In the context of the C64, What is the purpose of the HIRAM bit?",To bank the 8K byte KERNAL ROM in and out of the microprocessor address space
"In the context of the C64, What is the purpose of the CHAREN bit?",To bank the 4K byte character generator ROM in or out of the microprocessor address space
"In the context of the C64, SED stands for?",The SED command is used to set the decimal mode.
"In the context of the C64, SED command",The SED command is used to set the decimal mode.
"In the context of the C64, What is the purpose of SED?",The purpose of SED is to set the decimal mode.
"In the context of the C64, What is the function of SED?",The function of SED is to set the decimal mode.
"In the context of the C64, What does SED do?",SED sets the decimal mode.
"In the context of the C64, What is the operation of SED?",The operation of SED is to set the decimal mode.
"In the context of the C64, What is the purpose of SED operation?",The purpose of SED operation is to set the decimal mode.
"In the context of the C64, What is the function of SED operation?",The function of SED operation is to set the decimal mode.
"In the context of the C64, What is the operation of SED mode?",The operation of SED mode is to set the decimal mode.
"In the context of the C64, What is the purpose of SED mode?",The purpose of SED mode is to set the decimal mode.
"In the context of the C64, What is the purpose of the UDTIM function?",Update the system clock
"In the context of the C64, What is the call address of the UDTIM function?",$FFEA (hex) 65514 (decimal)
"In the context of the C64, What registers are affected by the UDTIM function?","A, X"
"In the context of the C64, How often is the UDTIM function normally called?",every 1/60th of a second
"In the context of the C64, What is the stack requirement for the UDTIM function?",2
"In the context of the C64, What is the purpose of calling the UDTIM function in user programs?",to update the time
"In the context of the C64, What is the consequence of not calling the UDTIM function in user programs?",<STOP> key routine must be called
"In the context of the C64, What is the recommended way to use the UDTIM function?",Call this routine
"In the context of the C64, What is the example of how to use the UDTIM function?",JSR UDTIM
"In the context of the C64, What is the importance of calling the UDTIM function in user programs?",to remain functional
"In the context of the C64, What is the purpose of the UDTIM function in the KERNAL interrupt routine?",to update the system clock
"In the context of the C64, SETNAM","This routine is used to set up the file name for the OPEN, SAVE, or LOAD routines."
"In the context of the C64, SETNAM: Length of file name",The accumulator must be loaded with the length of the file name.
"In the context of the C64, SETNAM: Registers affected","Registers A, X, and Y are affected."
"In the context of the C64, SETNAM: Preparatory routines",The routine requires 2 stack requirements.
"In the context of the C64, SETNAM: Call address",The call address is $FFBD (hex) or 65469 (decimal).
"In the context of the C64, SETNAM: Registers used","Registers A, X, and Y are used."
"In the context of the C64, SETNAM: File name address",The X and Y registers must be loaded with the address of the file name.
"In the context of the C64, SETNAM: File name length",The accumulator must be loaded with the length of the file name.
"In the context of the C64, SETNAM: Memory address",The address can be any valid memory address in the system.
"In the context of the C64, SETNAM: No file name","If no file name is desired, the accumulator must be set to 0."
